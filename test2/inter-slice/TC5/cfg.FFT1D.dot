digraph "CFG for 'FFT1D' function" {
	label="CFG for 'FFT1D' function";

	Node0x4a527f0 [shape=record,label="{entry:\l  %P.addr = alloca i32, align 4\l  %Global.addr = alloca %struct.GlobalMemory*, align 8\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  store i32 %P, i32* %P.addr, align 4\l  store %struct.GlobalMemory* %Global, %struct.GlobalMemory** %Global.addr,\l... align 8\l  %0 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %1 = load volatile i32* %gsense, align 4\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x4a527f0 -> Node0x4a52840;
	Node0x4a52840 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start1 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start1, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  store i32 %call, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x4a52840:s0 -> Node0x4a52890;
	Node0x4a52840:s1 -> Node0x4a52840;
	Node0x4a52890 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* %P.addr, align 4\l  %cmp3 = icmp eq i32 %10, %11\l  %12 = load i32* %lsense, align 4\l  %cmp5 = icmp eq i32 %12, 1\l  %or.cond = and i1 %cmp3, %cmp5\l  br i1 %or.cond, label %if.then.12, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x4a52890:s0 -> Node0x4a52930;
	Node0x4a52890:s1 -> Node0x4a528e0;
	Node0x4a528e0 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp7 = icmp eq i32 %13, 0\l  %14 = load i32* %lsense, align 4\l  %cmp10 = icmp eq i32 %14, -1\l  %or.cond1 = and i1 %cmp7, %cmp10\l  br i1 %or.cond1, label %if.then.12, label %while.cond\l|{<s0>T|<s1>F}}"];
	Node0x4a528e0:s0 -> Node0x4a52930;
	Node0x4a528e0:s1 -> Node0x4a52980;
	Node0x4a52930 [shape=record,label="{if.then.12:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start13 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense14 = getelementptr inbounds %struct.barrier_t* %start13, i32 0, i32 0\l  store volatile i32 %sub, i32* %gsense14, align 4\l  call void @Criteria(i32 3)\l  br label %while.cond\l}"];
	Node0x4a52930 -> Node0x4a52980;
	Node0x4a52980 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start16 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense17 = getelementptr inbounds %struct.barrier_t* %start16, i32 0, i32 0\l  %18 = load volatile i32* %gsense17, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp18 = icmp eq i32 %18, %19\l  br i1 %cmp18, label %while.cond, label %while.end.21\l|{<s0>T|<s1>F}}"];
	Node0x4a52980:s0 -> Node0x4a52980;
	Node0x4a52980:s1 -> Node0x4a529d0;
	Node0x4a529d0 [shape=record,label="{while.end.21:                                     \l  call void @Criteria(i32 3)\l  ret void\l}"];
}
