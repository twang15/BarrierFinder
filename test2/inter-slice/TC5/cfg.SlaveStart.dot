digraph "CFG for 'SlaveStart' function" {
	label="CFG for 'SlaveStart' function";

	Node0x4a4e740 [shape=record,label="{entry:\l  %upriv = alloca double*, align 8\l  %l_transtime = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %0 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %1 = load volatile i32* %gsense, align 4\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x4a4e740 -> Node0x4a4e790;
	Node0x4a4e790 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** @Global, align 8\l  %start6 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start6, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call7 = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  store i32 %call7, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %while.body\l|{<s0>T|<s1>F}}"];
	Node0x4a4e790:s0 -> Node0x4a4e7e0;
	Node0x4a4e790:s1 -> Node0x4a4e790;
	Node0x4a4e7e0 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* @P, align 4\l  %cmp9 = icmp eq i32 %10, %11\l  %12 = load i32* %lsense, align 4\l  %cmp11 = icmp eq i32 %12, 1\l  %or.cond = and i1 %cmp9, %cmp11\l  br i1 %or.cond, label %if.then.18, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x4a4e7e0:s0 -> Node0x4a4e880;
	Node0x4a4e7e0:s1 -> Node0x4a4e830;
	Node0x4a4e830 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp13 = icmp eq i32 %13, 0\l  %14 = load i32* %lsense, align 4\l  %cmp16 = icmp eq i32 %14, -1\l  %or.cond1 = and i1 %cmp13, %cmp16\l  br i1 %or.cond1, label %if.then.18, label %while.cond\l|{<s0>T|<s1>F}}"];
	Node0x4a4e830:s0 -> Node0x4a4e880;
	Node0x4a4e830:s1 -> Node0x4a4e8d0;
	Node0x4a4e880 [shape=record,label="{if.then.18:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** @Global, align 8\l  %start19 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense20 = getelementptr inbounds %struct.barrier_t* %start19, i32 0, i32 0\l  store volatile i32 %sub, i32* %gsense20, align 4\l  call void @Criteria(i32 1)\l  br label %while.cond\l}"];
	Node0x4a4e880 -> Node0x4a4e8d0;
	Node0x4a4e8d0 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** @Global, align 8\l  %start22 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense23 = getelementptr inbounds %struct.barrier_t* %start22, i32 0, i32 0\l  %18 = load volatile i32* %gsense23, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp24 = icmp eq i32 %18, %19\l  br i1 %cmp24, label %while.cond, label %while.end.27\l|{<s0>T|<s1>F}}"];
	Node0x4a4e8d0:s0 -> Node0x4a4e8d0;
	Node0x4a4e8d0:s1 -> Node0x4a4e920;
	Node0x4a4e920 [shape=record,label="{while.end.27:                                     \l  call void @Criteria(i32 1)\l  %20 = load i32* @rootN, align 4\l  %sub28 = sub nsw i32 %20, 1\l  %mul = mul nsw i32 2, %sub28\l  %conv29 = sext i32 %mul to i64\l  %mul30 = mul i64 %conv29, 8\l  %call31 = call i8* @malloc(i64 %mul30)\l  %21 = bitcast i8* %call31 to double*\l  store double* %21, double** %upriv, align 8\l  %22 = load i32* @P, align 4\l  %23 = load %struct.GlobalMemory** @Global, align 8\l  call void @FFT1D(i32 1, i32 undef, i32 undef, double* undef, double* undef,\l... double* undef, double* undef, i32 undef, i32* %l_transtime, i32 undef, i32\l... undef, i32 undef, i32 %22, i32 undef, i32 undef, i32 undef,\l... %struct.GlobalMemory* %23)\l  %24 = load i32* @test_result, align 4\l  %tobool56 = icmp ne i32 %24, 0\l  br i1 %tobool56, label %if.then.57, label %if.end.75\l|{<s0>T|<s1>F}}"];
	Node0x4a4e920:s0 -> Node0x4a4e970;
	Node0x4a4e920:s1 -> Node0x4a4e9c0;
	Node0x4a4e970 [shape=record,label="{if.then.57:                                       \l  %25 = load i32* @P, align 4\l  %26 = load %struct.GlobalMemory** @Global, align 8\l  call void @FFT1D(i32 -1, i32 undef, i32 undef, double* undef, double* undef,\l... double* undef, double* undef, i32 undef, i32* %l_transtime, i32 undef, i32\l... undef, i32 undef, i32 %25, i32 undef, i32 undef, i32 undef,\l... %struct.GlobalMemory* %26)\l  br label %if.end.75\l}"];
	Node0x4a4e970 -> Node0x4a4e9c0;
	Node0x4a4e9c0 [shape=record,label="{if.end.75:                                        \l  ret void\l}"];
}
