digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x480bcb0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  store i32 0, i32* %retval\l  %call = call i8* @malloc(i64 16)\l  %0 = bitcast i8* %call to %struct.GlobalMemory*\l  store %struct.GlobalMemory* %0, %struct.GlobalMemory** @Global, align 8\l  %1 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %1, i32 0, i32 0\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  store volatile i32 1, i32* %gsense, align 4\l  %2 = load %struct.GlobalMemory** @Global, align 8\l  %start1 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 0\l  %count = getelementptr inbounds %struct.barrier_t* %start1, i32 0, i32 1\l  store volatile i64 0, i64* %count, align 8\l  store i32 2, i32* @P, align 4\l  call void @f1()\l  %3 = load i32* %a, align 4\l  %4 = load i32* %b, align 4\l  %add = add nsw i32 %3, %4\l  %tobool = icmp ne i32 %add, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x480bcb0:s0 -> Node0x480bd00;
	Node0x480bcb0:s1 -> Node0x480bd50;
	Node0x480bd00 [shape=record,label="{if.then:                                          \l  call void @exit(i32 0)\l  unreachable\l}"];
	Node0x480bd50 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x480bd50 -> Node0x480bda0;
	Node0x480bda0 [shape=record,label="{while.cond:                                       \l  %5 = load i32* %b, align 4\l  %tobool2 = icmp ne i32 %5, 0\l  br i1 %tobool2, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x480bda0:s0 -> Node0x480bdf0;
	Node0x480bda0:s1 -> Node0x480be40;
	Node0x480bdf0 [shape=record,label="{while.body:                                       \l  %6 = load i32* %a, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %a, align 4\l  br label %while.cond\l}"];
	Node0x480bdf0 -> Node0x480bda0;
	Node0x480be40 [shape=record,label="{while.end:                                        \l  call void @f2()\l  %7 = load i32* %a, align 4\l  %8 = load i32* %b, align 4\l  %add3 = add nsw i32 %7, %8\l  store i32 %add3, i32* %a, align 4\l  %9 = load i32* %a, align 4\l  %cmp = icmp sgt i32 %9, 2\l  br i1 %cmp, label %if.then.4, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x480be40:s0 -> Node0x480be90;
	Node0x480be40:s1 -> Node0x480bee0;
	Node0x480be90 [shape=record,label="{if.then.4:                                        \l  %call5 = call i32 (i8*, ...) *@printf(i8* getelementptr inbounds ([21 x i8]*\l... @.str, i32 0, i32 0))\l  store i32 3, i32* %a, align 4\l  br label %if.end.7\l}"];
	Node0x480be90 -> Node0x480bf30;
	Node0x480bee0 [shape=record,label="{if.else:                                          \l  %call6 = call i32 (i8*, ...) *@printf(i8* getelementptr inbounds ([13 x i8]*\l... @.str.1, i32 0, i32 0))\l  br label %if.end.7\l}"];
	Node0x480bee0 -> Node0x480bf30;
	Node0x480bf30 [shape=record,label="{if.end.7:                                         \l  ret i32 0\l}"];
}
