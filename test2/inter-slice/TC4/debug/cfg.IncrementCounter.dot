digraph "CFG for 'IncrementCounter' function" {
	label="CFG for 'IncrementCounter' function";

	Node0x5ca5cf0 [shape=record,label="{entry:\l  %idx = alloca i32, align 4\l  %i = alloca i32, align 4\l  br label %if.end.7\l}"];
	Node0x5ca5cf0 -> Node0x5ca5fc0;
	Node0x5ca5d40 [shape=record,label="{if.then:                                          \l  br label %if.end\l}"];
	Node0x5ca5d40 -> Node0x5ca5f20;
	Node0x5ca5d90 [shape=record,label="{if.then.1:                                        \l  br label %for.cond\l}"];
	Node0x5ca5d90 -> Node0x5ca5de0;
	Node0x5ca5de0 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5ca5de0 -> Node0x5ca5ed0;
	Node0x5ca5e30 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x5ca5e30 -> Node0x5ca5e80;
	Node0x5ca5e80 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5ca5e80 -> Node0x5ca5de0;
	Node0x5ca5ed0 [shape=record,label="{for.end:                                          \l  br label %if.end\l}"];
	Node0x5ca5ed0 -> Node0x5ca5f20;
	Node0x5ca5f20 [shape=record,label="{if.end:                                           \l  br label %if.end.7\l}"];
	Node0x5ca5f20 -> Node0x5ca5fc0;
	Node0x5ca5f70 [shape=record,label="{if.else:                                          \l  br label %if.end.7\l}"];
	Node0x5ca5f70 -> Node0x5ca5fc0;
	Node0x5ca5fc0 [shape=record,label="{if.end.7:                                         \l  ret void\l}"];
}
