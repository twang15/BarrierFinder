digraph "CFG for 'SlaveStart' function" {
	label="CFG for 'SlaveStart' function";

	Node0x5698a10 [shape=record,label="{entry:\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %MyNum = alloca i32, align 4\l  %error = alloca double, align 8\l  %upriv = alloca double*, align 8\l  %initdone = alloca i32, align 4\l  %finish = alloca i32, align 4\l  %l_transtime = alloca i32, align 4\l  %MyFirst = alloca i32, align 4\l  %MyLast = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %retVal = alloca i32, align 4\l  %lsense49 = alloca i32, align 4\l  %oldcount54 = alloca i32, align 4\l  %newcount58 = alloca i32, align 4\l  %updatedcount60 = alloca i32, align 4\l  call void @printChar(i8 signext 49)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %0 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %1 = load volatile i32* %gsense, align 4\l  %call = call i32 @sleep(i32 1)\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x5698a10 -> Node0x5698a60;
	Node0x5698a60 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** @Global, align 8\l  %start6 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start6, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %call1 = call i32 @sleep(i32 1)\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call7 = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  %call6 = call i32 @sleep(i32 1)\l  store i32 %call7, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %if.end.21\l|{<s0>T|<s1>F}}"];
	Node0x5698a60:s0 -> Node0x5698ab0;
	Node0x5698a60:s1 -> Node0x5698c90;
	Node0x5698ab0 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* @P, align 4\l  %call2 = call i32 @sleep(i32 1)\l  %cmp9 = icmp eq i32 %10, %11\l  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5698ab0:s0 -> Node0x5698b00;
	Node0x5698ab0:s1 -> Node0x5698b50;
	Node0x5698b00 [shape=record,label="{land.lhs.true:                                    \l  %12 = load i32* %lsense, align 4\l  %cmp11 = icmp eq i32 %12, 1\l  br i1 %cmp11, label %if.then.18, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5698b00:s0 -> Node0x5698bf0;
	Node0x5698b00:s1 -> Node0x5698b50;
	Node0x5698b50 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp13 = icmp eq i32 %13, 0\l  br i1 %cmp13, label %land.lhs.true.15, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5698b50:s0 -> Node0x5698ba0;
	Node0x5698b50:s1 -> Node0x5698c40;
	Node0x5698ba0 [shape=record,label="{land.lhs.true.15:                                 \l  %14 = load i32* %lsense, align 4\l  %cmp16 = icmp eq i32 %14, -1\l  br i1 %cmp16, label %if.then.18, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5698ba0:s0 -> Node0x5698bf0;
	Node0x5698ba0:s1 -> Node0x5698c40;
	Node0x5698bf0 [shape=record,label="{if.then.18:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** @Global, align 8\l  %start19 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense20 = getelementptr inbounds %struct.barrier_t* %start19, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub, i32* %gsense20, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call3 = call i32 @sleep(i32 3)\l  br label %if.end\l}"];
	Node0x5698bf0 -> Node0x5698c40;
	Node0x5698c40 [shape=record,label="{if.end:                                           \l  br label %while.end\l}"];
	Node0x5698c40 -> Node0x5698ce0;
	Node0x5698c90 [shape=record,label="{if.end.21:                                        \l  br label %while.body\l}"];
	Node0x5698c90 -> Node0x5698a60;
	Node0x5698ce0 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x5698ce0 -> Node0x5698d30;
	Node0x5698d30 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** @Global, align 8\l  %start22 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense23 = getelementptr inbounds %struct.barrier_t* %start22, i32 0, i32 0\l  %18 = load volatile i32* %gsense23, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp24 = icmp eq i32 %18, %19\l  br i1 %cmp24, label %while.body.26, label %while.end.27\l|{<s0>T|<s1>F}}"];
	Node0x5698d30:s0 -> Node0x5698d80;
	Node0x5698d30:s1 -> Node0x5698dd0;
	Node0x5698d80 [shape=record,label="{while.body.26:                                    \l  %call4 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x5698d80 -> Node0x5698d30;
	Node0x5698dd0 [shape=record,label="{while.end.27:                                     \l  call void @printY()\l  %call5 = call i32 @sleep(i32 1)\l  %20 = load i32* @rootN, align 4\l  %sub28 = sub nsw i32 %20, 1\l  %mul = mul nsw i32 2, %sub28\l  %conv29 = sext i32 %mul to i64\l  %mul30 = mul i64 %conv29, 8\l  %call31 = call i8* @malloc(i64 %mul30)\l  %21 = bitcast i8* %call31 to double*\l  store double* %21, double** %upriv, align 8\l  %22 = load double** %upriv, align 8\l  %cmp32 = icmp eq double* %22, null\l  br i1 %cmp32, label %if.then.34, label %if.end.36\l|{<s0>T|<s1>F}}"];
	Node0x5698dd0:s0 -> Node0x5698e20;
	Node0x5698dd0:s1 -> Node0x5698e70;
	Node0x5698e20 [shape=record,label="{if.then.34:                                       \l  unreachable\l}"];
	Node0x5698e70 [shape=record,label="{if.end.36:                                        \l  br label %for.cond\l}"];
	Node0x5698e70 -> Node0x5698ec0;
	Node0x5698ec0 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5698ec0 -> Node0x5698fb0;
	Node0x5698f10 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x5698f10 -> Node0x5698f60;
	Node0x5698f60 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5698f60 -> Node0x5698ec0;
	Node0x5698fb0 [shape=record,label="{for.end:                                          \l  call void @printChar(i8 signext 50)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %23 = load %struct.GlobalMemory** @Global, align 8\l  %start50 = getelementptr inbounds %struct.GlobalMemory* %23, i32 0, i32 2\l  %gsense51 = getelementptr inbounds %struct.barrier_t* %start50, i32 0, i32 0\l  %24 = load volatile i32* %gsense51, align 4\l  %call8 = call i32 @sleep(i32 1)\l  store i32 %24, i32* %lsense49, align 4\l  br label %while.body.53\l}"];
	Node0x5698fb0 -> Node0x5699000;
	Node0x5699000 [shape=record,label="{while.body.53:                                    \l  %25 = load %struct.GlobalMemory** @Global, align 8\l  %start55 = getelementptr inbounds %struct.GlobalMemory* %25, i32 0, i32 2\l  %count56 = getelementptr inbounds %struct.barrier_t* %start55, i32 0, i32 1\l  %26 = load volatile i64* %count56, align 8\l  %call9 = call i32 @sleep(i32 1)\l  %conv57 = trunc i64 %26 to i32\l  store i32 %conv57, i32* %oldcount54, align 4\l  %27 = load i32* %oldcount54, align 4\l  %28 = load i32* %lsense49, align 4\l  %add59 = add nsw i32 %27, %28\l  store i32 %add59, i32* %newcount58, align 4\l  %29 = load i32* %oldcount54, align 4\l  %30 = load i32* %newcount58, align 4\l  %call61 = call i32 @atomic_cmpxchg(i32 %29, i32 %30)\l  %call14 = call i32 @sleep(i32 1)\l  store i32 %call61, i32* %updatedcount60, align 4\l  %31 = load i32* %updatedcount60, align 4\l  %32 = load i32* %oldcount54, align 4\l  %cmp62 = icmp eq i32 %31, %32\l  br i1 %cmp62, label %if.then.64, label %if.end.81\l|{<s0>T|<s1>F}}"];
	Node0x5699000:s0 -> Node0x5699050;
	Node0x5699000:s1 -> Node0x5699230;
	Node0x5699050 [shape=record,label="{if.then.64:                                       \l  %33 = load i32* %newcount58, align 4\l  %34 = load i32* @P, align 4\l  %call10 = call i32 @sleep(i32 1)\l  %cmp65 = icmp eq i32 %33, %34\l  br i1 %cmp65, label %land.lhs.true.67, label %lor.lhs.false.70\l|{<s0>T|<s1>F}}"];
	Node0x5699050:s0 -> Node0x56990a0;
	Node0x5699050:s1 -> Node0x56990f0;
	Node0x56990a0 [shape=record,label="{land.lhs.true.67:                                 \l  %35 = load i32* %lsense49, align 4\l  %cmp68 = icmp eq i32 %35, 1\l  br i1 %cmp68, label %if.then.76, label %lor.lhs.false.70\l|{<s0>T|<s1>F}}"];
	Node0x56990a0:s0 -> Node0x5699190;
	Node0x56990a0:s1 -> Node0x56990f0;
	Node0x56990f0 [shape=record,label="{lor.lhs.false.70:                                 \l  %36 = load i32* %newcount58, align 4\l  %cmp71 = icmp eq i32 %36, 0\l  br i1 %cmp71, label %land.lhs.true.73, label %if.end.80\l|{<s0>T|<s1>F}}"];
	Node0x56990f0:s0 -> Node0x5699140;
	Node0x56990f0:s1 -> Node0x56991e0;
	Node0x5699140 [shape=record,label="{land.lhs.true.73:                                 \l  %37 = load i32* %lsense49, align 4\l  %cmp74 = icmp eq i32 %37, -1\l  br i1 %cmp74, label %if.then.76, label %if.end.80\l|{<s0>T|<s1>F}}"];
	Node0x5699140:s0 -> Node0x5699190;
	Node0x5699140:s1 -> Node0x56991e0;
	Node0x5699190 [shape=record,label="{if.then.76:                                       \l  %38 = load i32* %lsense49, align 4\l  %sub77 = sub nsw i32 0, %38\l  %39 = load %struct.GlobalMemory** @Global, align 8\l  %start78 = getelementptr inbounds %struct.GlobalMemory* %39, i32 0, i32 2\l  %gsense79 = getelementptr inbounds %struct.barrier_t* %start78, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub77, i32* %gsense79, align 4\l  call void @snapshot(i32 %sub77, i32 1)\l  %call11 = call i32 @sleep(i32 3)\l  br label %if.end.80\l}"];
	Node0x5699190 -> Node0x56991e0;
	Node0x56991e0 [shape=record,label="{if.end.80:                                        \l  br label %while.end.82\l}"];
	Node0x56991e0 -> Node0x5699280;
	Node0x5699230 [shape=record,label="{if.end.81:                                        \l  br label %while.body.53\l}"];
	Node0x5699230 -> Node0x5699000;
	Node0x5699280 [shape=record,label="{while.end.82:                                     \l  br label %while.cond.83\l}"];
	Node0x5699280 -> Node0x56992d0;
	Node0x56992d0 [shape=record,label="{while.cond.83:                                    \l  %40 = load %struct.GlobalMemory** @Global, align 8\l  %start84 = getelementptr inbounds %struct.GlobalMemory* %40, i32 0, i32 2\l  %gsense85 = getelementptr inbounds %struct.barrier_t* %start84, i32 0, i32 0\l  %41 = load volatile i32* %gsense85, align 4\l  %42 = load i32* %lsense49, align 4\l  %cmp86 = icmp eq i32 %41, %42\l  br i1 %cmp86, label %while.body.88, label %while.end.89\l|{<s0>T|<s1>F}}"];
	Node0x56992d0:s0 -> Node0x5699320;
	Node0x56992d0:s1 -> Node0x5699370;
	Node0x5699320 [shape=record,label="{while.body.88:                                    \l  %call12 = call i32 @sleep(i32 2)\l  br label %while.cond.83\l}"];
	Node0x5699320 -> Node0x56992d0;
	Node0x5699370 [shape=record,label="{while.end.89:                                     \l  call void @printY()\l  %call13 = call i32 @sleep(i32 1)\l  br label %if.end.96\l}"];
	Node0x5699370 -> Node0x5699460;
	Node0x56993c0 [shape=record,label="{lor.lhs.false.92:                                 \l  br label %if.end.96\l}"];
	Node0x56993c0 -> Node0x5699460;
	Node0x5699410 [shape=record,label="{if.then.93:                                       \l  br label %if.end.96\l}"];
	Node0x5699410 -> Node0x5699460;
	Node0x5699460 [shape=record,label="{if.end.96:                                        \l  %43 = load i32* @P, align 4\l  %44 = load %struct.GlobalMemory** @Global, align 8\l  call void @FFT1D(i32 1, i32 undef, i32 undef, double* undef, double* undef,\l... double* undef, double* undef, i32 undef, i32* %l_transtime, i32 undef, i32\l... undef, i32 undef, i32 %43, i32 undef, i32 undef, i32 undef,\l... %struct.GlobalMemory* %44)\l  ret void\l}"];
}
