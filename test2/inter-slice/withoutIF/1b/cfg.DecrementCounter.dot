digraph "CFG for 'DecrementCounter' function" {
	label="CFG for 'DecrementCounter' function";

	Node0x6046be0 [shape=record,label="{entry:\l  %idx = alloca i32, align 4\l  %i = alloca i32, align 4\l  %i13 = alloca i32, align 4\l  %call = call i32 (...) *bitcast (i64 ()* @pthread_self to i32 (...)*)()\l  store i32 %call, i32* %idx, align 4\l  %0 = load i32* %idx, align 4\l  %idxprom = zext i32 %0 to i64\l  %arrayidx = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %idxprom\l  store i8 0, i8* %arrayidx, align 1\l  %1 = load i32* %idx, align 4\l  %idxprom1 = zext i32 %1 to i64\l  %arrayidx2 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %idxprom1\l  %2 = load i32* %arrayidx2, align 4\l  %cmp = icmp eq i32 %2, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6046be0:s0 -> Node0x6046c30;
	Node0x6046be0:s1 -> Node0x6046e60;
	Node0x6046c30 [shape=record,label="{if.then:                                          \l  %3 = load i32* @counter0, align 4\l  %dec = add nsw i32 %3, -1\l  store i32 %dec, i32* @counter0, align 4\l  %4 = load i32* @counter0, align 4\l  %cmp3 = icmp eq i32 %4, 0\l  br i1 %cmp3, label %if.then.4, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6046c30:s0 -> Node0x6046c80;
	Node0x6046c30:s1 -> Node0x6046e10;
	Node0x6046c80 [shape=record,label="{if.then.4:                                        \l  call void @DeriveInvariant()\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x6046c80 -> Node0x6046cd0;
	Node0x6046cd0 [shape=record,label="{for.cond:                                         \l  %5 = load i32* %i, align 4\l  %cmp5 = icmp slt i32 %5, 3\l  br i1 %cmp5, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6046cd0:s0 -> Node0x6046d20;
	Node0x6046cd0:s1 -> Node0x6046dc0;
	Node0x6046d20 [shape=record,label="{for.body:                                         \l  %6 = load i32* %i, align 4\l  %idxprom6 = sext i32 %6 to i64\l  %arrayidx7 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %idxprom6\l  store i8 1, i8* %arrayidx7, align 1\l  br label %for.inc\l}"];
	Node0x6046d20 -> Node0x6046d70;
	Node0x6046d70 [shape=record,label="{for.inc:                                          \l  %7 = load i32* %i, align 4\l  %inc = add nsw i32 %7, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x6046d70 -> Node0x6046cd0;
	Node0x6046dc0 [shape=record,label="{for.end:                                          \l  br label %if.end\l}"];
	Node0x6046dc0 -> Node0x6046e10;
	Node0x6046e10 [shape=record,label="{if.end:                                           \l  %8 = load i32* %idx, align 4\l  %idxprom8 = zext i32 %8 to i64\l  %arrayidx9 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %idxprom8\l  store i32 1, i32* %arrayidx9, align 4\l  br label %if.end.25\l}"];
	Node0x6046e10 -> Node0x6047090;
	Node0x6046e60 [shape=record,label="{if.else:                                          \l  %9 = load i32* @counter1, align 4\l  %dec10 = add nsw i32 %9, -1\l  store i32 %dec10, i32* @counter1, align 4\l  %10 = load i32* @counter1, align 4\l  %cmp11 = icmp eq i32 %10, 0\l  br i1 %cmp11, label %if.then.12, label %if.end.22\l|{<s0>T|<s1>F}}"];
	Node0x6046e60:s0 -> Node0x6046eb0;
	Node0x6046e60:s1 -> Node0x6047040;
	Node0x6046eb0 [shape=record,label="{if.then.12:                                       \l  call void @DeriveInvariant()\l  store i32 0, i32* %i13, align 4\l  br label %for.cond.14\l}"];
	Node0x6046eb0 -> Node0x6046f00;
	Node0x6046f00 [shape=record,label="{for.cond.14:                                      \l  %11 = load i32* %i13, align 4\l  %cmp15 = icmp slt i32 %11, 3\l  br i1 %cmp15, label %for.body.16, label %for.end.21\l|{<s0>T|<s1>F}}"];
	Node0x6046f00:s0 -> Node0x6046f50;
	Node0x6046f00:s1 -> Node0x6046ff0;
	Node0x6046f50 [shape=record,label="{for.body.16:                                      \l  %12 = load i32* %i13, align 4\l  %idxprom17 = sext i32 %12 to i64\l  %arrayidx18 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64\l... %idxprom17\l  store i8 1, i8* %arrayidx18, align 1\l  br label %for.inc.19\l}"];
	Node0x6046f50 -> Node0x6046fa0;
	Node0x6046fa0 [shape=record,label="{for.inc.19:                                       \l  %13 = load i32* %i13, align 4\l  %inc20 = add nsw i32 %13, 1\l  store i32 %inc20, i32* %i13, align 4\l  br label %for.cond.14\l}"];
	Node0x6046fa0 -> Node0x6046f00;
	Node0x6046ff0 [shape=record,label="{for.end.21:                                       \l  br label %if.end.22\l}"];
	Node0x6046ff0 -> Node0x6047040;
	Node0x6047040 [shape=record,label="{if.end.22:                                        \l  %14 = load i32* %idx, align 4\l  %idxprom23 = zext i32 %14 to i64\l  %arrayidx24 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64\l... %idxprom23\l  store i32 0, i32* %arrayidx24, align 4\l  br label %if.end.25\l}"];
	Node0x6047040 -> Node0x6047090;
	Node0x6047090 [shape=record,label="{if.end.25:                                        \l  ret void\l}"];
}
