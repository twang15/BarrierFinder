digraph "CFG for 'FFT1D' function" {
	label="CFG for 'FFT1D' function";

	Node0x4284470 [shape=record,label="{entry:\l  %direction.addr = alloca i32, align 4\l  %M.addr = alloca i32, align 4\l  %N.addr = alloca i32, align 4\l  %x.addr = alloca double*, align 8\l  %scratch.addr = alloca double*, align 8\l  %upriv.addr = alloca double*, align 8\l  %umain2.addr = alloca double*, align 8\l  %MyNum.addr = alloca i32, align 4\l  %l_transtime.addr = alloca i32*, align 8\l  %MyFirst.addr = alloca i32, align 4\l  %MyLast.addr = alloca i32, align 4\l  %pad_length.addr = alloca i32, align 4\l  %P.addr = alloca i32, align 4\l  %test_result.addr = alloca i32, align 4\l  %doprint.addr = alloca i32, align 4\l  %dostats.addr = alloca i32, align 4\l  %Global.addr = alloca %struct.GlobalMemory*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %m1 = alloca i32, align 4\l  %n1 = alloca i32, align 4\l  %flag = alloca i32, align 4\l  %clocktime1 = alloca i32, align 4\l  %clocktime2 = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %lsense51 = alloca i32, align 4\l  %oldcount56 = alloca i32, align 4\l  %newcount60 = alloca i32, align 4\l  %updatedcount62 = alloca i32, align 4\l  %lsense134 = alloca i32, align 4\l  %oldcount139 = alloca i32, align 4\l  %newcount143 = alloca i32, align 4\l  %updatedcount145 = alloca i32, align 4\l  %lsense194 = alloca i32, align 4\l  %oldcount199 = alloca i32, align 4\l  %newcount203 = alloca i32, align 4\l  %updatedcount205 = alloca i32, align 4\l  %lsense258 = alloca i32, align 4\l  %oldcount263 = alloca i32, align 4\l  %newcount267 = alloca i32, align 4\l  %updatedcount269 = alloca i32, align 4\l  store i32 %MyFirst, i32* %MyFirst.addr, align 4\l  store i32 %MyLast, i32* %MyLast.addr, align 4\l  store i32 %P, i32* %P.addr, align 4\l  store %struct.GlobalMemory* %Global, %struct.GlobalMemory** %Global.addr,\l... align 8\l  call void @printChar(i8 signext 51)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %0 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %1 = load volatile i32* %gsense, align 4\l  %call1 = call i32 @sleep(i32 1)\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x4284470 -> Node0x42844c0;
	Node0x42844c0 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start1 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start1, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %call2 = call i32 @sleep(i32 1)\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  %call6 = call i32 @sleep(i32 1)\l  store i32 %call, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %if.end.15\l|{<s0>T|<s1>F}}"];
	Node0x42844c0:s0 -> Node0x4284510;
	Node0x42844c0:s1 -> Node0x42846f0;
	Node0x4284510 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* %P.addr, align 4\l  %cmp3 = icmp eq i32 %10, %11\l  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x4284510:s0 -> Node0x4284560;
	Node0x4284510:s1 -> Node0x42845b0;
	Node0x4284560 [shape=record,label="{land.lhs.true:                                    \l  %12 = load i32* %lsense, align 4\l  %cmp5 = icmp eq i32 %12, 1\l  br i1 %cmp5, label %if.then.12, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x4284560:s0 -> Node0x4284650;
	Node0x4284560:s1 -> Node0x42845b0;
	Node0x42845b0 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp7 = icmp eq i32 %13, 0\l  br i1 %cmp7, label %land.lhs.true.9, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x42845b0:s0 -> Node0x4284600;
	Node0x42845b0:s1 -> Node0x42846a0;
	Node0x4284600 [shape=record,label="{land.lhs.true.9:                                  \l  %14 = load i32* %lsense, align 4\l  %cmp10 = icmp eq i32 %14, -1\l  br i1 %cmp10, label %if.then.12, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4284600:s0 -> Node0x4284650;
	Node0x4284600:s1 -> Node0x42846a0;
	Node0x4284650 [shape=record,label="{if.then.12:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start13 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense14 = getelementptr inbounds %struct.barrier_t* %start13, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub, i32* %gsense14, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call3 = call i32 @sleep(i32 3)\l  br label %if.end\l}"];
	Node0x4284650 -> Node0x42846a0;
	Node0x42846a0 [shape=record,label="{if.end:                                           \l  br label %while.end\l}"];
	Node0x42846a0 -> Node0x4284740;
	Node0x42846f0 [shape=record,label="{if.end.15:                                        \l  br label %while.body\l}"];
	Node0x42846f0 -> Node0x42844c0;
	Node0x4284740 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x4284740 -> Node0x4284790;
	Node0x4284790 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start16 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense17 = getelementptr inbounds %struct.barrier_t* %start16, i32 0, i32 0\l  %18 = load volatile i32* %gsense17, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp18 = icmp eq i32 %18, %19\l  br i1 %cmp18, label %while.body.20, label %while.end.21\l|{<s0>T|<s1>F}}"];
	Node0x4284790:s0 -> Node0x42847e0;
	Node0x4284790:s1 -> Node0x4284830;
	Node0x42847e0 [shape=record,label="{while.body.20:                                    \l  %call4 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x42847e0 -> Node0x4284790;
	Node0x4284830 [shape=record,label="{while.end.21:                                     \l  call void @printY()\l  %call5 = call i32 @sleep(i32 1)\l  br label %if.end.28\l}"];
	Node0x4284830 -> Node0x4284920;
	Node0x4284880 [shape=record,label="{lor.lhs.false.24:                                 \l  br label %if.end.28\l}"];
	Node0x4284880 -> Node0x4284920;
	Node0x42848d0 [shape=record,label="{if.then.25:                                       \l  br label %if.end.28\l}"];
	Node0x42848d0 -> Node0x4284920;
	Node0x4284920 [shape=record,label="{if.end.28:                                        \l  %call29 = call i32 @Transpose(i32 undef, double* undef, double* undef, i32\l... undef, i32 undef, i32 undef, i32 undef)\l  br label %if.end.39\l}"];
	Node0x4284920 -> Node0x4284a10;
	Node0x4284970 [shape=record,label="{lor.lhs.false.32:                                 \l  br label %if.end.39\l}"];
	Node0x4284970 -> Node0x4284a10;
	Node0x42849c0 [shape=record,label="{if.then.34:                                       \l  br label %if.end.39\l}"];
	Node0x42849c0 -> Node0x4284a10;
	Node0x4284a10 [shape=record,label="{if.end.39:                                        \l  %20 = load i32* %MyFirst.addr, align 4\l  store i32 %20, i32* %j, align 4\l  br label %for.cond\l}"];
	Node0x4284a10 -> Node0x4284a60;
	Node0x4284a60 [shape=record,label="{for.cond:                                         \l  %21 = load i32* %j, align 4\l  %22 = load i32* %MyLast.addr, align 4\l  %cmp40 = icmp slt i32 %21, %22\l  br i1 %cmp40, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x4284a60:s0 -> Node0x4284ab0;
	Node0x4284a60:s1 -> Node0x4284b50;
	Node0x4284ab0 [shape=record,label="{for.body:                                         \l  %call44 = call i32 @FFT1DOnce(i32 undef, i32 undef, i32 undef, double*\l... undef, double* undef)\l  br label %for.inc\l}"];
	Node0x4284ab0 -> Node0x4284b00;
	Node0x4284b00 [shape=record,label="{for.inc:                                          \l  %23 = load i32* %j, align 4\l  %inc = add nsw i32 %23, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond\l}"];
	Node0x4284b00 -> Node0x4284a60;
	Node0x4284b50 [shape=record,label="{for.end:                                          \l  call void @printChar(i8 signext 52)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %24 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start52 = getelementptr inbounds %struct.GlobalMemory* %24, i32 0, i32 2\l  %gsense53 = getelementptr inbounds %struct.barrier_t* %start52, i32 0, i32 0\l  %25 = load volatile i32* %gsense53, align 4\l  %call7 = call i32 @sleep(i32 1)\l  store i32 %25, i32* %lsense51, align 4\l  br label %while.body.55\l}"];
	Node0x4284b50 -> Node0x4284ba0;
	Node0x4284ba0 [shape=record,label="{while.body.55:                                    \l  %26 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start57 = getelementptr inbounds %struct.GlobalMemory* %26, i32 0, i32 2\l  %count58 = getelementptr inbounds %struct.barrier_t* %start57, i32 0, i32 1\l  %27 = load volatile i64* %count58, align 8\l  %call8 = call i32 @sleep(i32 1)\l  %conv59 = trunc i64 %27 to i32\l  store i32 %conv59, i32* %oldcount56, align 4\l  %28 = load i32* %oldcount56, align 4\l  %29 = load i32* %lsense51, align 4\l  %add61 = add nsw i32 %28, %29\l  store i32 %add61, i32* %newcount60, align 4\l  %30 = load i32* %oldcount56, align 4\l  %31 = load i32* %newcount60, align 4\l  %call63 = call i32 @atomic_cmpxchg(i32 %30, i32 %31)\l  %call12 = call i32 @sleep(i32 1)\l  store i32 %call63, i32* %updatedcount62, align 4\l  %32 = load i32* %updatedcount62, align 4\l  %33 = load i32* %oldcount56, align 4\l  %cmp64 = icmp eq i32 %32, %33\l  br i1 %cmp64, label %if.then.66, label %if.end.83\l|{<s0>T|<s1>F}}"];
	Node0x4284ba0:s0 -> Node0x4284bf0;
	Node0x4284ba0:s1 -> Node0x4284dd0;
	Node0x4284bf0 [shape=record,label="{if.then.66:                                       \l  %34 = load i32* %newcount60, align 4\l  %35 = load i32* %P.addr, align 4\l  %cmp67 = icmp eq i32 %34, %35\l  br i1 %cmp67, label %land.lhs.true.69, label %lor.lhs.false.72\l|{<s0>T|<s1>F}}"];
	Node0x4284bf0:s0 -> Node0x4284c40;
	Node0x4284bf0:s1 -> Node0x4284c90;
	Node0x4284c40 [shape=record,label="{land.lhs.true.69:                                 \l  %36 = load i32* %lsense51, align 4\l  %cmp70 = icmp eq i32 %36, 1\l  br i1 %cmp70, label %if.then.78, label %lor.lhs.false.72\l|{<s0>T|<s1>F}}"];
	Node0x4284c40:s0 -> Node0x4284d30;
	Node0x4284c40:s1 -> Node0x4284c90;
	Node0x4284c90 [shape=record,label="{lor.lhs.false.72:                                 \l  %37 = load i32* %newcount60, align 4\l  %cmp73 = icmp eq i32 %37, 0\l  br i1 %cmp73, label %land.lhs.true.75, label %if.end.82\l|{<s0>T|<s1>F}}"];
	Node0x4284c90:s0 -> Node0x4284ce0;
	Node0x4284c90:s1 -> Node0x4284d80;
	Node0x4284ce0 [shape=record,label="{land.lhs.true.75:                                 \l  %38 = load i32* %lsense51, align 4\l  %cmp76 = icmp eq i32 %38, -1\l  br i1 %cmp76, label %if.then.78, label %if.end.82\l|{<s0>T|<s1>F}}"];
	Node0x4284ce0:s0 -> Node0x4284d30;
	Node0x4284ce0:s1 -> Node0x4284d80;
	Node0x4284d30 [shape=record,label="{if.then.78:                                       \l  %39 = load i32* %lsense51, align 4\l  %sub79 = sub nsw i32 0, %39\l  %40 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start80 = getelementptr inbounds %struct.GlobalMemory* %40, i32 0, i32 2\l  %gsense81 = getelementptr inbounds %struct.barrier_t* %start80, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub79, i32* %gsense81, align 4\l  call void @snapshot(i32 %sub79, i32 1)\l  %call9 = call i32 @sleep(i32 3)\l  br label %if.end.82\l}"];
	Node0x4284d30 -> Node0x4284d80;
	Node0x4284d80 [shape=record,label="{if.end.82:                                        \l  br label %while.end.84\l}"];
	Node0x4284d80 -> Node0x4284e20;
	Node0x4284dd0 [shape=record,label="{if.end.83:                                        \l  br label %while.body.55\l}"];
	Node0x4284dd0 -> Node0x4284ba0;
	Node0x4284e20 [shape=record,label="{while.end.84:                                     \l  br label %while.cond.85\l}"];
	Node0x4284e20 -> Node0x4284e70;
	Node0x4284e70 [shape=record,label="{while.cond.85:                                    \l  %41 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start86 = getelementptr inbounds %struct.GlobalMemory* %41, i32 0, i32 2\l  %gsense87 = getelementptr inbounds %struct.barrier_t* %start86, i32 0, i32 0\l  %42 = load volatile i32* %gsense87, align 4\l  %43 = load i32* %lsense51, align 4\l  %cmp88 = icmp eq i32 %42, %43\l  br i1 %cmp88, label %while.body.90, label %while.end.91\l|{<s0>T|<s1>F}}"];
	Node0x4284e70:s0 -> Node0x4284ec0;
	Node0x4284e70:s1 -> Node0x4284f10;
	Node0x4284ec0 [shape=record,label="{while.body.90:                                    \l  %call10 = call i32 @sleep(i32 2)\l  br label %while.cond.85\l}"];
	Node0x4284ec0 -> Node0x4284e70;
	Node0x4284f10 [shape=record,label="{while.end.91:                                     \l  call void @printY()\l  %call11 = call i32 @sleep(i32 1)\l  br label %if.end.99\l}"];
	Node0x4284f10 -> Node0x4285000;
	Node0x4284f60 [shape=record,label="{lor.lhs.false.94:                                 \l  br label %if.end.99\l}"];
	Node0x4284f60 -> Node0x4285000;
	Node0x4284fb0 [shape=record,label="{if.then.96:                                       \l  br label %if.end.99\l}"];
	Node0x4284fb0 -> Node0x4285000;
	Node0x4285000 [shape=record,label="{if.end.99:                                        \l  %call100 = call i32 @Transpose(i32 undef, double* undef, double* undef, i32\l... undef, i32 undef, i32 undef, i32 undef)\l  br label %if.end.110\l}"];
	Node0x4285000 -> Node0x42850f0;
	Node0x4285050 [shape=record,label="{lor.lhs.false.103:                                \l  br label %if.end.110\l}"];
	Node0x4285050 -> Node0x42850f0;
	Node0x42850a0 [shape=record,label="{if.then.105:                                      \l  br label %if.end.110\l}"];
	Node0x42850a0 -> Node0x42850f0;
	Node0x42850f0 [shape=record,label="{if.end.110:                                       \l  %44 = load i32* %MyFirst.addr, align 4\l  store i32 %44, i32* %j, align 4\l  br label %for.cond.111\l}"];
	Node0x42850f0 -> Node0x4285140;
	Node0x4285140 [shape=record,label="{for.cond.111:                                     \l  %45 = load i32* %j, align 4\l  %46 = load i32* %MyLast.addr, align 4\l  %cmp112 = icmp slt i32 %45, %46\l  br i1 %cmp112, label %for.body.114, label %for.end.133\l|{<s0>T|<s1>F}}"];
	Node0x4285140:s0 -> Node0x4285190;
	Node0x4285140:s1 -> Node0x42852d0;
	Node0x4285190 [shape=record,label="{for.body.114:                                     \l  %call120 = call i32 @FFT1DOnce(i32 undef, i32 undef, i32 undef, double*\l... undef, double* undef)\l  br label %if.end.130\l}"];
	Node0x4285190 -> Node0x4285230;
	Node0x42851e0 [shape=record,label="{if.then.123:                                      \l  br label %if.end.130\l}"];
	Node0x42851e0 -> Node0x4285230;
	Node0x4285230 [shape=record,label="{if.end.130:                                       \l  br label %for.inc.131\l}"];
	Node0x4285230 -> Node0x4285280;
	Node0x4285280 [shape=record,label="{for.inc.131:                                      \l  %47 = load i32* %j, align 4\l  %inc132 = add nsw i32 %47, 1\l  store i32 %inc132, i32* %j, align 4\l  br label %for.cond.111\l}"];
	Node0x4285280 -> Node0x4285140;
	Node0x42852d0 [shape=record,label="{for.end.133:                                      \l  call void @printChar(i8 signext 53)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %48 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start135 = getelementptr inbounds %struct.GlobalMemory* %48, i32 0, i32 2\l  %gsense136 = getelementptr inbounds %struct.barrier_t* %start135, i32 0, i32\l... 0\l  %49 = load volatile i32* %gsense136, align 4\l  %call13 = call i32 @sleep(i32 1)\l  store i32 %49, i32* %lsense134, align 4\l  br label %while.body.138\l}"];
	Node0x42852d0 -> Node0x4285320;
	Node0x4285320 [shape=record,label="{while.body.138:                                   \l  %50 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start140 = getelementptr inbounds %struct.GlobalMemory* %50, i32 0, i32 2\l  %count141 = getelementptr inbounds %struct.barrier_t* %start140, i32 0, i32 1\l  %51 = load volatile i64* %count141, align 8\l  %call14 = call i32 @sleep(i32 1)\l  %conv142 = trunc i64 %51 to i32\l  store i32 %conv142, i32* %oldcount139, align 4\l  %52 = load i32* %oldcount139, align 4\l  %53 = load i32* %lsense134, align 4\l  %add144 = add nsw i32 %52, %53\l  store i32 %add144, i32* %newcount143, align 4\l  %54 = load i32* %oldcount139, align 4\l  %55 = load i32* %newcount143, align 4\l  %call146 = call i32 @atomic_cmpxchg(i32 %54, i32 %55)\l  %call18 = call i32 @sleep(i32 1)\l  store i32 %call146, i32* %updatedcount145, align 4\l  %56 = load i32* %updatedcount145, align 4\l  %57 = load i32* %oldcount139, align 4\l  %cmp147 = icmp eq i32 %56, %57\l  br i1 %cmp147, label %if.then.149, label %if.end.166\l|{<s0>T|<s1>F}}"];
	Node0x4285320:s0 -> Node0x4285370;
	Node0x4285320:s1 -> Node0x4285550;
	Node0x4285370 [shape=record,label="{if.then.149:                                      \l  %58 = load i32* %newcount143, align 4\l  %59 = load i32* %P.addr, align 4\l  %cmp150 = icmp eq i32 %58, %59\l  br i1 %cmp150, label %land.lhs.true.152, label %lor.lhs.false.155\l|{<s0>T|<s1>F}}"];
	Node0x4285370:s0 -> Node0x42853c0;
	Node0x4285370:s1 -> Node0x4285410;
	Node0x42853c0 [shape=record,label="{land.lhs.true.152:                                \l  %60 = load i32* %lsense134, align 4\l  %cmp153 = icmp eq i32 %60, 1\l  br i1 %cmp153, label %if.then.161, label %lor.lhs.false.155\l|{<s0>T|<s1>F}}"];
	Node0x42853c0:s0 -> Node0x42854b0;
	Node0x42853c0:s1 -> Node0x4285410;
	Node0x4285410 [shape=record,label="{lor.lhs.false.155:                                \l  %61 = load i32* %newcount143, align 4\l  %cmp156 = icmp eq i32 %61, 0\l  br i1 %cmp156, label %land.lhs.true.158, label %if.end.165\l|{<s0>T|<s1>F}}"];
	Node0x4285410:s0 -> Node0x4285460;
	Node0x4285410:s1 -> Node0x4285500;
	Node0x4285460 [shape=record,label="{land.lhs.true.158:                                \l  %62 = load i32* %lsense134, align 4\l  %cmp159 = icmp eq i32 %62, -1\l  br i1 %cmp159, label %if.then.161, label %if.end.165\l|{<s0>T|<s1>F}}"];
	Node0x4285460:s0 -> Node0x42854b0;
	Node0x4285460:s1 -> Node0x4285500;
	Node0x42854b0 [shape=record,label="{if.then.161:                                      \l  %63 = load i32* %lsense134, align 4\l  %sub162 = sub nsw i32 0, %63\l  %64 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start163 = getelementptr inbounds %struct.GlobalMemory* %64, i32 0, i32 2\l  %gsense164 = getelementptr inbounds %struct.barrier_t* %start163, i32 0, i32\l... 0\l  call void @printX()\l  store volatile i32 %sub162, i32* %gsense164, align 4\l  call void @snapshot(i32 %sub162, i32 1)\l  %call15 = call i32 @sleep(i32 3)\l  br label %if.end.165\l}"];
	Node0x42854b0 -> Node0x4285500;
	Node0x4285500 [shape=record,label="{if.end.165:                                       \l  br label %while.end.167\l}"];
	Node0x4285500 -> Node0x42855a0;
	Node0x4285550 [shape=record,label="{if.end.166:                                       \l  br label %while.body.138\l}"];
	Node0x4285550 -> Node0x4285320;
	Node0x42855a0 [shape=record,label="{while.end.167:                                    \l  br label %while.cond.168\l}"];
	Node0x42855a0 -> Node0x42855f0;
	Node0x42855f0 [shape=record,label="{while.cond.168:                                   \l  %65 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start169 = getelementptr inbounds %struct.GlobalMemory* %65, i32 0, i32 2\l  %gsense170 = getelementptr inbounds %struct.barrier_t* %start169, i32 0, i32\l... 0\l  %66 = load volatile i32* %gsense170, align 4\l  %67 = load i32* %lsense134, align 4\l  %cmp171 = icmp eq i32 %66, %67\l  br i1 %cmp171, label %while.body.173, label %while.end.174\l|{<s0>T|<s1>F}}"];
	Node0x42855f0:s0 -> Node0x4285640;
	Node0x42855f0:s1 -> Node0x4285690;
	Node0x4285640 [shape=record,label="{while.body.173:                                   \l  %call16 = call i32 @sleep(i32 2)\l  br label %while.cond.168\l}"];
	Node0x4285640 -> Node0x42855f0;
	Node0x4285690 [shape=record,label="{while.end.174:                                    \l  call void @printY()\l  %call17 = call i32 @sleep(i32 1)\l  br label %if.end.182\l}"];
	Node0x4285690 -> Node0x4285780;
	Node0x42856e0 [shape=record,label="{lor.lhs.false.177:                                \l  br label %if.end.182\l}"];
	Node0x42856e0 -> Node0x4285780;
	Node0x4285730 [shape=record,label="{if.then.179:                                      \l  br label %if.end.182\l}"];
	Node0x4285730 -> Node0x4285780;
	Node0x4285780 [shape=record,label="{if.end.182:                                       \l  %call183 = call i32 @Transpose(i32 undef, double* undef, double* undef, i32\l... undef, i32 undef, i32 undef, i32 undef)\l  br label %if.end.193\l}"];
	Node0x4285780 -> Node0x4285870;
	Node0x42857d0 [shape=record,label="{lor.lhs.false.186:                                \l  br label %if.end.193\l}"];
	Node0x42857d0 -> Node0x4285870;
	Node0x4285820 [shape=record,label="{if.then.188:                                      \l  br label %if.end.193\l}"];
	Node0x4285820 -> Node0x4285870;
	Node0x4285870 [shape=record,label="{if.end.193:                                       \l  call void @printChar(i8 signext 54)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %68 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start195 = getelementptr inbounds %struct.GlobalMemory* %68, i32 0, i32 2\l  %gsense196 = getelementptr inbounds %struct.barrier_t* %start195, i32 0, i32\l... 0\l  %69 = load volatile i32* %gsense196, align 4\l  %call19 = call i32 @sleep(i32 1)\l  store i32 %69, i32* %lsense194, align 4\l  br label %while.body.198\l}"];
	Node0x4285870 -> Node0x42858c0;
	Node0x42858c0 [shape=record,label="{while.body.198:                                   \l  %70 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start200 = getelementptr inbounds %struct.GlobalMemory* %70, i32 0, i32 2\l  %count201 = getelementptr inbounds %struct.barrier_t* %start200, i32 0, i32 1\l  %71 = load volatile i64* %count201, align 8\l  %call20 = call i32 @sleep(i32 1)\l  %conv202 = trunc i64 %71 to i32\l  store i32 %conv202, i32* %oldcount199, align 4\l  %72 = load i32* %oldcount199, align 4\l  %73 = load i32* %lsense194, align 4\l  %add204 = add nsw i32 %72, %73\l  store i32 %add204, i32* %newcount203, align 4\l  %74 = load i32* %oldcount199, align 4\l  %75 = load i32* %newcount203, align 4\l  %call206 = call i32 @atomic_cmpxchg(i32 %74, i32 %75)\l  %call24 = call i32 @sleep(i32 1)\l  store i32 %call206, i32* %updatedcount205, align 4\l  %76 = load i32* %updatedcount205, align 4\l  %77 = load i32* %oldcount199, align 4\l  %cmp207 = icmp eq i32 %76, %77\l  br i1 %cmp207, label %if.then.209, label %if.end.226\l|{<s0>T|<s1>F}}"];
	Node0x42858c0:s0 -> Node0x4285910;
	Node0x42858c0:s1 -> Node0x4285af0;
	Node0x4285910 [shape=record,label="{if.then.209:                                      \l  %78 = load i32* %newcount203, align 4\l  %79 = load i32* %P.addr, align 4\l  %cmp210 = icmp eq i32 %78, %79\l  br i1 %cmp210, label %land.lhs.true.212, label %lor.lhs.false.215\l|{<s0>T|<s1>F}}"];
	Node0x4285910:s0 -> Node0x4285960;
	Node0x4285910:s1 -> Node0x42859b0;
	Node0x4285960 [shape=record,label="{land.lhs.true.212:                                \l  %80 = load i32* %lsense194, align 4\l  %cmp213 = icmp eq i32 %80, 1\l  br i1 %cmp213, label %if.then.221, label %lor.lhs.false.215\l|{<s0>T|<s1>F}}"];
	Node0x4285960:s0 -> Node0x4285a50;
	Node0x4285960:s1 -> Node0x42859b0;
	Node0x42859b0 [shape=record,label="{lor.lhs.false.215:                                \l  %81 = load i32* %newcount203, align 4\l  %cmp216 = icmp eq i32 %81, 0\l  br i1 %cmp216, label %land.lhs.true.218, label %if.end.225\l|{<s0>T|<s1>F}}"];
	Node0x42859b0:s0 -> Node0x4285a00;
	Node0x42859b0:s1 -> Node0x4285aa0;
	Node0x4285a00 [shape=record,label="{land.lhs.true.218:                                \l  %82 = load i32* %lsense194, align 4\l  %cmp219 = icmp eq i32 %82, -1\l  br i1 %cmp219, label %if.then.221, label %if.end.225\l|{<s0>T|<s1>F}}"];
	Node0x4285a00:s0 -> Node0x4285a50;
	Node0x4285a00:s1 -> Node0x4285aa0;
	Node0x4285a50 [shape=record,label="{if.then.221:                                      \l  %83 = load i32* %lsense194, align 4\l  %sub222 = sub nsw i32 0, %83\l  %84 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start223 = getelementptr inbounds %struct.GlobalMemory* %84, i32 0, i32 2\l  %gsense224 = getelementptr inbounds %struct.barrier_t* %start223, i32 0, i32\l... 0\l  call void @printX()\l  store volatile i32 %sub222, i32* %gsense224, align 4\l  call void @snapshot(i32 %sub222, i32 1)\l  %call21 = call i32 @sleep(i32 3)\l  br label %if.end.225\l}"];
	Node0x4285a50 -> Node0x4285aa0;
	Node0x4285aa0 [shape=record,label="{if.end.225:                                       \l  br label %while.end.227\l}"];
	Node0x4285aa0 -> Node0x4285b40;
	Node0x4285af0 [shape=record,label="{if.end.226:                                       \l  br label %while.body.198\l}"];
	Node0x4285af0 -> Node0x42858c0;
	Node0x4285b40 [shape=record,label="{while.end.227:                                    \l  br label %while.cond.228\l}"];
	Node0x4285b40 -> Node0x4285b90;
	Node0x4285b90 [shape=record,label="{while.cond.228:                                   \l  %85 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start229 = getelementptr inbounds %struct.GlobalMemory* %85, i32 0, i32 2\l  %gsense230 = getelementptr inbounds %struct.barrier_t* %start229, i32 0, i32\l... 0\l  %86 = load volatile i32* %gsense230, align 4\l  %87 = load i32* %lsense194, align 4\l  %cmp231 = icmp eq i32 %86, %87\l  br i1 %cmp231, label %while.body.233, label %while.end.234\l|{<s0>T|<s1>F}}"];
	Node0x4285b90:s0 -> Node0x4285be0;
	Node0x4285b90:s1 -> Node0x4285c30;
	Node0x4285be0 [shape=record,label="{while.body.233:                                   \l  %call22 = call i32 @sleep(i32 2)\l  br label %while.cond.228\l}"];
	Node0x4285be0 -> Node0x4285b90;
	Node0x4285c30 [shape=record,label="{while.end.234:                                    \l  call void @printY()\l  %call23 = call i32 @sleep(i32 1)\l  br label %if.end.257\l}"];
	Node0x4285c30 -> Node0x4285e60;
	Node0x4285c80 [shape=record,label="{lor.lhs.false.236:                                \l  br label %if.end.257\l}"];
	Node0x4285c80 -> Node0x4285e60;
	Node0x4285cd0 [shape=record,label="{if.then.238:                                      \l  br label %for.cond.239\l}"];
	Node0x4285cd0 -> Node0x4285d20;
	Node0x4285d20 [shape=record,label="{for.cond.239:                                     \l  br label %for.end.256\l}"];
	Node0x4285d20 -> Node0x4285e10;
	Node0x4285d70 [shape=record,label="{for.body.242:                                     \l  br label %for.inc.254\l}"];
	Node0x4285d70 -> Node0x4285dc0;
	Node0x4285dc0 [shape=record,label="{for.inc.254:                                      \l  br label %for.cond.239\l}"];
	Node0x4285dc0 -> Node0x4285d20;
	Node0x4285e10 [shape=record,label="{for.end.256:                                      \l  br label %if.end.257\l}"];
	Node0x4285e10 -> Node0x4285e60;
	Node0x4285e60 [shape=record,label="{if.end.257:                                       \l  call void @printChar(i8 signext 55)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %88 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start259 = getelementptr inbounds %struct.GlobalMemory* %88, i32 0, i32 2\l  %gsense260 = getelementptr inbounds %struct.barrier_t* %start259, i32 0, i32\l... 0\l  %89 = load volatile i32* %gsense260, align 4\l  %call25 = call i32 @sleep(i32 1)\l  store i32 %89, i32* %lsense258, align 4\l  br label %while.body.262\l}"];
	Node0x4285e60 -> Node0x4285eb0;
	Node0x4285eb0 [shape=record,label="{while.body.262:                                   \l  %90 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start264 = getelementptr inbounds %struct.GlobalMemory* %90, i32 0, i32 2\l  %count265 = getelementptr inbounds %struct.barrier_t* %start264, i32 0, i32 1\l  %91 = load volatile i64* %count265, align 8\l  %call26 = call i32 @sleep(i32 1)\l  %conv266 = trunc i64 %91 to i32\l  store i32 %conv266, i32* %oldcount263, align 4\l  %92 = load i32* %oldcount263, align 4\l  %93 = load i32* %lsense258, align 4\l  %add268 = add nsw i32 %92, %93\l  store i32 %add268, i32* %newcount267, align 4\l  %94 = load i32* %oldcount263, align 4\l  %95 = load i32* %newcount267, align 4\l  %call270 = call i32 @atomic_cmpxchg(i32 %94, i32 %95)\l  %call31 = call i32 @sleep(i32 1)\l  store i32 %call270, i32* %updatedcount269, align 4\l  %96 = load i32* %updatedcount269, align 4\l  %97 = load i32* %oldcount263, align 4\l  %cmp271 = icmp eq i32 %96, %97\l  br i1 %cmp271, label %if.then.273, label %if.end.290\l|{<s0>T|<s1>F}}"];
	Node0x4285eb0:s0 -> Node0x4285f00;
	Node0x4285eb0:s1 -> Node0x42860e0;
	Node0x4285f00 [shape=record,label="{if.then.273:                                      \l  %98 = load i32* %newcount267, align 4\l  %99 = load i32* %P.addr, align 4\l  %cmp274 = icmp eq i32 %98, %99\l  br i1 %cmp274, label %land.lhs.true.276, label %lor.lhs.false.279\l|{<s0>T|<s1>F}}"];
	Node0x4285f00:s0 -> Node0x4285f50;
	Node0x4285f00:s1 -> Node0x4285fa0;
	Node0x4285f50 [shape=record,label="{land.lhs.true.276:                                \l  %100 = load i32* %lsense258, align 4\l  %cmp277 = icmp eq i32 %100, 1\l  br i1 %cmp277, label %if.then.285, label %lor.lhs.false.279\l|{<s0>T|<s1>F}}"];
	Node0x4285f50:s0 -> Node0x4286040;
	Node0x4285f50:s1 -> Node0x4285fa0;
	Node0x4285fa0 [shape=record,label="{lor.lhs.false.279:                                \l  %101 = load i32* %newcount267, align 4\l  %cmp280 = icmp eq i32 %101, 0\l  br i1 %cmp280, label %land.lhs.true.282, label %if.end.289\l|{<s0>T|<s1>F}}"];
	Node0x4285fa0:s0 -> Node0x4285ff0;
	Node0x4285fa0:s1 -> Node0x4286090;
	Node0x4285ff0 [shape=record,label="{land.lhs.true.282:                                \l  %102 = load i32* %lsense258, align 4\l  %cmp283 = icmp eq i32 %102, -1\l  br i1 %cmp283, label %if.then.285, label %if.end.289\l|{<s0>T|<s1>F}}"];
	Node0x4285ff0:s0 -> Node0x4286040;
	Node0x4285ff0:s1 -> Node0x4286090;
	Node0x4286040 [shape=record,label="{if.then.285:                                      \l  %103 = load i32* %lsense258, align 4\l  %sub286 = sub nsw i32 0, %103\l  %104 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start287 = getelementptr inbounds %struct.GlobalMemory* %104, i32 0, i32 2\l  %gsense288 = getelementptr inbounds %struct.barrier_t* %start287, i32 0, i32\l... 0\l  call void @printX()\l  store volatile i32 %sub286, i32* %gsense288, align 4\l  call void @snapshot(i32 %sub286, i32 1)\l  %call27 = call i32 @sleep(i32 3)\l  br label %if.end.289\l}"];
	Node0x4286040 -> Node0x4286090;
	Node0x4286090 [shape=record,label="{if.end.289:                                       \l  br label %while.end.291\l}"];
	Node0x4286090 -> Node0x4286130;
	Node0x42860e0 [shape=record,label="{if.end.290:                                       \l  br label %while.body.262\l}"];
	Node0x42860e0 -> Node0x4285eb0;
	Node0x4286130 [shape=record,label="{while.end.291:                                    \l  br label %while.cond.292\l}"];
	Node0x4286130 -> Node0x4286180;
	Node0x4286180 [shape=record,label="{while.cond.292:                                   \l  %105 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start293 = getelementptr inbounds %struct.GlobalMemory* %105, i32 0, i32 2\l  %gsense294 = getelementptr inbounds %struct.barrier_t* %start293, i32 0, i32\l... 0\l  %106 = load volatile i32* %gsense294, align 4\l  %107 = load i32* %lsense258, align 4\l  %cmp295 = icmp eq i32 %106, %107\l  br i1 %cmp295, label %while.body.297, label %while.end.298\l|{<s0>T|<s1>F}}"];
	Node0x4286180:s0 -> Node0x42861d0;
	Node0x4286180:s1 -> Node0x4286220;
	Node0x42861d0 [shape=record,label="{while.body.297:                                   \l  %call28 = call i32 @sleep(i32 2)\l  br label %while.cond.292\l}"];
	Node0x42861d0 -> Node0x4286180;
	Node0x4286220 [shape=record,label="{while.end.298:                                    \l  call void @printY()\l  %call30 = call i32 @sleep(i32 1)\l  ret void\l}"];
}
