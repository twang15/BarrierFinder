digraph "CFG for 'FFT1D' function" {
	label="CFG for 'FFT1D' function";

	Node0x56a2510 [shape=record,label="{entry:\l  %direction.addr = alloca i32, align 4\l  %M.addr = alloca i32, align 4\l  %N.addr = alloca i32, align 4\l  %x.addr = alloca double*, align 8\l  %scratch.addr = alloca double*, align 8\l  %upriv.addr = alloca double*, align 8\l  %umain2.addr = alloca double*, align 8\l  %MyNum.addr = alloca i32, align 4\l  %l_transtime.addr = alloca i32*, align 8\l  %MyFirst.addr = alloca i32, align 4\l  %MyLast.addr = alloca i32, align 4\l  %pad_length.addr = alloca i32, align 4\l  %P.addr = alloca i32, align 4\l  %test_result.addr = alloca i32, align 4\l  %doprint.addr = alloca i32, align 4\l  %dostats.addr = alloca i32, align 4\l  %Global.addr = alloca %struct.GlobalMemory*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %m1 = alloca i32, align 4\l  %n1 = alloca i32, align 4\l  %flag = alloca i32, align 4\l  %clocktime1 = alloca i32, align 4\l  %clocktime2 = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %lsense51 = alloca i32, align 4\l  %oldcount56 = alloca i32, align 4\l  %newcount60 = alloca i32, align 4\l  %updatedcount62 = alloca i32, align 4\l  store i32 %P, i32* %P.addr, align 4\l  store %struct.GlobalMemory* %Global, %struct.GlobalMemory** %Global.addr,\l... align 8\l  call void @printChar(i8 signext 51)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %0 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %1 = load volatile i32* %gsense, align 4\l  %call1 = call i32 @sleep(i32 1)\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x56a2510 -> Node0x56a2560;
	Node0x56a2560 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start1 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start1, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %call2 = call i32 @sleep(i32 1)\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  %call6 = call i32 @sleep(i32 1)\l  store i32 %call, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %if.end.15\l|{<s0>T|<s1>F}}"];
	Node0x56a2560:s0 -> Node0x56a25b0;
	Node0x56a2560:s1 -> Node0x56a2790;
	Node0x56a25b0 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* %P.addr, align 4\l  %cmp3 = icmp eq i32 %10, %11\l  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x56a25b0:s0 -> Node0x56a2600;
	Node0x56a25b0:s1 -> Node0x56a2650;
	Node0x56a2600 [shape=record,label="{land.lhs.true:                                    \l  %12 = load i32* %lsense, align 4\l  %cmp5 = icmp eq i32 %12, 1\l  br i1 %cmp5, label %if.then.12, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x56a2600:s0 -> Node0x56a26f0;
	Node0x56a2600:s1 -> Node0x56a2650;
	Node0x56a2650 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp7 = icmp eq i32 %13, 0\l  br i1 %cmp7, label %land.lhs.true.9, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56a2650:s0 -> Node0x56a26a0;
	Node0x56a2650:s1 -> Node0x56a2740;
	Node0x56a26a0 [shape=record,label="{land.lhs.true.9:                                  \l  %14 = load i32* %lsense, align 4\l  %cmp10 = icmp eq i32 %14, -1\l  br i1 %cmp10, label %if.then.12, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x56a26a0:s0 -> Node0x56a26f0;
	Node0x56a26a0:s1 -> Node0x56a2740;
	Node0x56a26f0 [shape=record,label="{if.then.12:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start13 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense14 = getelementptr inbounds %struct.barrier_t* %start13, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub, i32* %gsense14, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call3 = call i32 @sleep(i32 3)\l  br label %if.end\l}"];
	Node0x56a26f0 -> Node0x56a2740;
	Node0x56a2740 [shape=record,label="{if.end:                                           \l  br label %while.end\l}"];
	Node0x56a2740 -> Node0x56a27e0;
	Node0x56a2790 [shape=record,label="{if.end.15:                                        \l  br label %while.body\l}"];
	Node0x56a2790 -> Node0x56a2560;
	Node0x56a27e0 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x56a27e0 -> Node0x56a2830;
	Node0x56a2830 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start16 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense17 = getelementptr inbounds %struct.barrier_t* %start16, i32 0, i32 0\l  %18 = load volatile i32* %gsense17, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp18 = icmp eq i32 %18, %19\l  br i1 %cmp18, label %while.body.20, label %while.end.21\l|{<s0>T|<s1>F}}"];
	Node0x56a2830:s0 -> Node0x56a2880;
	Node0x56a2830:s1 -> Node0x56a28d0;
	Node0x56a2880 [shape=record,label="{while.body.20:                                    \l  %call4 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x56a2880 -> Node0x56a2830;
	Node0x56a28d0 [shape=record,label="{while.end.21:                                     \l  call void @printY()\l  %call5 = call i32 @sleep(i32 1)\l  br label %if.end.28\l}"];
	Node0x56a28d0 -> Node0x56a29c0;
	Node0x56a2920 [shape=record,label="{lor.lhs.false.24:                                 \l  br label %if.end.28\l}"];
	Node0x56a2920 -> Node0x56a29c0;
	Node0x56a2970 [shape=record,label="{if.then.25:                                       \l  br label %if.end.28\l}"];
	Node0x56a2970 -> Node0x56a29c0;
	Node0x56a29c0 [shape=record,label="{if.end.28:                                        \l  br label %if.end.39\l}"];
	Node0x56a29c0 -> Node0x56a2ab0;
	Node0x56a2a10 [shape=record,label="{lor.lhs.false.32:                                 \l  br label %if.end.39\l}"];
	Node0x56a2a10 -> Node0x56a2ab0;
	Node0x56a2a60 [shape=record,label="{if.then.34:                                       \l  br label %if.end.39\l}"];
	Node0x56a2a60 -> Node0x56a2ab0;
	Node0x56a2ab0 [shape=record,label="{if.end.39:                                        \l  br label %for.cond\l}"];
	Node0x56a2ab0 -> Node0x56a2b00;
	Node0x56a2b00 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x56a2b00 -> Node0x56a2bf0;
	Node0x56a2b50 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x56a2b50 -> Node0x56a2ba0;
	Node0x56a2ba0 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x56a2ba0 -> Node0x56a2b00;
	Node0x56a2bf0 [shape=record,label="{for.end:                                          \l  call void @printChar(i8 signext 52)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %20 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start52 = getelementptr inbounds %struct.GlobalMemory* %20, i32 0, i32 2\l  %gsense53 = getelementptr inbounds %struct.barrier_t* %start52, i32 0, i32 0\l  %21 = load volatile i32* %gsense53, align 4\l  %call7 = call i32 @sleep(i32 1)\l  store i32 %21, i32* %lsense51, align 4\l  br label %while.body.55\l}"];
	Node0x56a2bf0 -> Node0x56a2c40;
	Node0x56a2c40 [shape=record,label="{while.body.55:                                    \l  %22 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start57 = getelementptr inbounds %struct.GlobalMemory* %22, i32 0, i32 2\l  %count58 = getelementptr inbounds %struct.barrier_t* %start57, i32 0, i32 1\l  %23 = load volatile i64* %count58, align 8\l  %call8 = call i32 @sleep(i32 1)\l  %conv59 = trunc i64 %23 to i32\l  store i32 %conv59, i32* %oldcount56, align 4\l  %24 = load i32* %oldcount56, align 4\l  %25 = load i32* %lsense51, align 4\l  %add61 = add nsw i32 %24, %25\l  store i32 %add61, i32* %newcount60, align 4\l  %26 = load i32* %oldcount56, align 4\l  %27 = load i32* %newcount60, align 4\l  %call63 = call i32 @atomic_cmpxchg(i32 %26, i32 %27)\l  %call12 = call i32 @sleep(i32 1)\l  store i32 %call63, i32* %updatedcount62, align 4\l  %28 = load i32* %updatedcount62, align 4\l  %29 = load i32* %oldcount56, align 4\l  %cmp64 = icmp eq i32 %28, %29\l  br i1 %cmp64, label %if.then.66, label %if.end.83\l|{<s0>T|<s1>F}}"];
	Node0x56a2c40:s0 -> Node0x56a2c90;
	Node0x56a2c40:s1 -> Node0x56a2e70;
	Node0x56a2c90 [shape=record,label="{if.then.66:                                       \l  %30 = load i32* %newcount60, align 4\l  %31 = load i32* %P.addr, align 4\l  %cmp67 = icmp eq i32 %30, %31\l  br i1 %cmp67, label %land.lhs.true.69, label %lor.lhs.false.72\l|{<s0>T|<s1>F}}"];
	Node0x56a2c90:s0 -> Node0x56a2ce0;
	Node0x56a2c90:s1 -> Node0x56a2d30;
	Node0x56a2ce0 [shape=record,label="{land.lhs.true.69:                                 \l  %32 = load i32* %lsense51, align 4\l  %cmp70 = icmp eq i32 %32, 1\l  br i1 %cmp70, label %if.then.78, label %lor.lhs.false.72\l|{<s0>T|<s1>F}}"];
	Node0x56a2ce0:s0 -> Node0x56a2dd0;
	Node0x56a2ce0:s1 -> Node0x56a2d30;
	Node0x56a2d30 [shape=record,label="{lor.lhs.false.72:                                 \l  %33 = load i32* %newcount60, align 4\l  %cmp73 = icmp eq i32 %33, 0\l  br i1 %cmp73, label %land.lhs.true.75, label %if.end.82\l|{<s0>T|<s1>F}}"];
	Node0x56a2d30:s0 -> Node0x56a2d80;
	Node0x56a2d30:s1 -> Node0x56a2e20;
	Node0x56a2d80 [shape=record,label="{land.lhs.true.75:                                 \l  %34 = load i32* %lsense51, align 4\l  %cmp76 = icmp eq i32 %34, -1\l  br i1 %cmp76, label %if.then.78, label %if.end.82\l|{<s0>T|<s1>F}}"];
	Node0x56a2d80:s0 -> Node0x56a2dd0;
	Node0x56a2d80:s1 -> Node0x56a2e20;
	Node0x56a2dd0 [shape=record,label="{if.then.78:                                       \l  %35 = load i32* %lsense51, align 4\l  %sub79 = sub nsw i32 0, %35\l  %36 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start80 = getelementptr inbounds %struct.GlobalMemory* %36, i32 0, i32 2\l  %gsense81 = getelementptr inbounds %struct.barrier_t* %start80, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub79, i32* %gsense81, align 4\l  call void @snapshot(i32 %sub79, i32 1)\l  %call9 = call i32 @sleep(i32 3)\l  br label %if.end.82\l}"];
	Node0x56a2dd0 -> Node0x56a2e20;
	Node0x56a2e20 [shape=record,label="{if.end.82:                                        \l  br label %while.end.84\l}"];
	Node0x56a2e20 -> Node0x56a2ec0;
	Node0x56a2e70 [shape=record,label="{if.end.83:                                        \l  br label %while.body.55\l}"];
	Node0x56a2e70 -> Node0x56a2c40;
	Node0x56a2ec0 [shape=record,label="{while.end.84:                                     \l  br label %while.cond.85\l}"];
	Node0x56a2ec0 -> Node0x56a2f10;
	Node0x56a2f10 [shape=record,label="{while.cond.85:                                    \l  %37 = load %struct.GlobalMemory** %Global.addr, align 8\l  %start86 = getelementptr inbounds %struct.GlobalMemory* %37, i32 0, i32 2\l  %gsense87 = getelementptr inbounds %struct.barrier_t* %start86, i32 0, i32 0\l  %38 = load volatile i32* %gsense87, align 4\l  %39 = load i32* %lsense51, align 4\l  %cmp88 = icmp eq i32 %38, %39\l  br i1 %cmp88, label %while.body.90, label %while.end.91\l|{<s0>T|<s1>F}}"];
	Node0x56a2f10:s0 -> Node0x56a2f60;
	Node0x56a2f10:s1 -> Node0x56a2fb0;
	Node0x56a2f60 [shape=record,label="{while.body.90:                                    \l  %call10 = call i32 @sleep(i32 2)\l  br label %while.cond.85\l}"];
	Node0x56a2f60 -> Node0x56a2f10;
	Node0x56a2fb0 [shape=record,label="{while.end.91:                                     \l  call void @printY()\l  %call11 = call i32 @sleep(i32 1)\l  ret void\l}"];
}
