digraph "CFG for 'SlaveStart' function" {
	label="CFG for 'SlaveStart' function";

	Node0x43bff90 [shape=record,label="{entry:\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %MyNum = alloca i32, align 4\l  %error = alloca double, align 8\l  %upriv = alloca double*, align 8\l  %initdone = alloca i32, align 4\l  %finish = alloca i32, align 4\l  %l_transtime = alloca i32, align 4\l  %MyFirst = alloca i32, align 4\l  %MyLast = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %retVal = alloca i32, align 4\l  %0 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  call void @InitializeSwitchesAndCounter(i32 1)\l  call void @IncrementCounter()\l  call void @printChar(i8 signext 49)\l  call void @printChar(i8 signext 90)\l  %1 = load volatile i32* %gsense, align 4\l  store i32 %1, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x43bff90 -> Node0x43bffe0;
	Node0x43bffe0 [shape=record,label="{while.body:                                       \l  %2 = load %struct.GlobalMemory** @Global, align 8\l  %start6 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start6, i32 0, i32 1\l  %3 = load volatile i64* %count, align 8\l  %call = call i32 @sleep(i32 1)\l  %conv = trunc i64 %3 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %4 = load i32* %oldcount, align 4\l  %5 = load i32* %lsense, align 4\l  %add = add nsw i32 %4, %5\l  store i32 %add, i32* %newcount, align 4\l  %6 = load i32* %oldcount, align 4\l  %7 = load i32* %newcount, align 4\l  %call7 = call i32 @atomic_cmpxchg(i32 %6, i32 %7)\l  %call5 = call i32 @sleep(i32 1)\l  store i32 %call7, i32* %updatedcount, align 4\l  %8 = load i32* %updatedcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %8, %9\l  br i1 %cmp, label %if.then, label %if.end.21\l|{<s0>T|<s1>F}}"];
	Node0x43bffe0:s0 -> Node0x43c0030;
	Node0x43bffe0:s1 -> Node0x43c0210;
	Node0x43c0030 [shape=record,label="{if.then:                                          \l  %10 = load i32* %newcount, align 4\l  %11 = load i32* @P, align 4\l  %call1 = call i32 @sleep(i32 1)\l  %cmp9 = icmp eq i32 %10, %11\l  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x43c0030:s0 -> Node0x43c0080;
	Node0x43c0030:s1 -> Node0x43c00d0;
	Node0x43c0080 [shape=record,label="{land.lhs.true:                                    \l  %12 = load i32* %lsense, align 4\l  %cmp11 = icmp eq i32 %12, 1\l  br i1 %cmp11, label %if.then.18, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x43c0080:s0 -> Node0x43c0170;
	Node0x43c0080:s1 -> Node0x43c00d0;
	Node0x43c00d0 [shape=record,label="{lor.lhs.false:                                    \l  %13 = load i32* %newcount, align 4\l  %cmp13 = icmp eq i32 %13, 0\l  br i1 %cmp13, label %land.lhs.true.15, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x43c00d0:s0 -> Node0x43c0120;
	Node0x43c00d0:s1 -> Node0x43c01c0;
	Node0x43c0120 [shape=record,label="{land.lhs.true.15:                                 \l  %14 = load i32* %lsense, align 4\l  %cmp16 = icmp eq i32 %14, -1\l  br i1 %cmp16, label %if.then.18, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x43c0120:s0 -> Node0x43c0170;
	Node0x43c0120:s1 -> Node0x43c01c0;
	Node0x43c0170 [shape=record,label="{if.then.18:                                       \l  %15 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %15\l  %16 = load %struct.GlobalMemory** @Global, align 8\l  %start19 = getelementptr inbounds %struct.GlobalMemory* %16, i32 0, i32 2\l  %gsense20 = getelementptr inbounds %struct.barrier_t* %start19, i32 0, i32 0\l  call void @printX()\l  call void @RecordSyncVariable()\l  store volatile i32 %sub, i32* %gsense20, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call2 = call i32 @sleep(i32 3)\l  br label %if.end\l}"];
	Node0x43c0170 -> Node0x43c01c0;
	Node0x43c01c0 [shape=record,label="{if.end:                                           \l  br label %while.end\l}"];
	Node0x43c01c0 -> Node0x43c0260;
	Node0x43c0210 [shape=record,label="{if.end.21:                                        \l  br label %while.body\l}"];
	Node0x43c0210 -> Node0x43bffe0;
	Node0x43c0260 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x43c0260 -> Node0x43c02b0;
	Node0x43c02b0 [shape=record,label="{while.cond:                                       \l  %17 = load %struct.GlobalMemory** @Global, align 8\l  %start22 = getelementptr inbounds %struct.GlobalMemory* %17, i32 0, i32 2\l  %gsense23 = getelementptr inbounds %struct.barrier_t* %start22, i32 0, i32 0\l  %18 = load volatile i32* %gsense23, align 4\l  %19 = load i32* %lsense, align 4\l  %cmp24 = icmp eq i32 %18, %19\l  br i1 %cmp24, label %while.body.26, label %while.end.27\l|{<s0>T|<s1>F}}"];
	Node0x43c02b0:s0 -> Node0x43c0300;
	Node0x43c02b0:s1 -> Node0x43c0350;
	Node0x43c0300 [shape=record,label="{while.body.26:                                    \l  %call3 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x43c0300 -> Node0x43c02b0;
	Node0x43c0350 [shape=record,label="{while.end.27:                                     \l  call void @printY()\l  %call4 = call i32 @sleep(i32 4)\l  ret void\l}"];
}
