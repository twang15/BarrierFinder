digraph "CFG for 'SlaveStart' function" {
	label="CFG for 'SlaveStart' function";

	Node0x5dacbf0 [shape=record,label="{entry:\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %MyNum = alloca i32, align 4\l  %error = alloca double, align 8\l  %upriv = alloca double*, align 8\l  %initdone = alloca i32, align 4\l  %finish = alloca i32, align 4\l  %l_transtime = alloca i32, align 4\l  %MyFirst = alloca i32, align 4\l  %MyLast = alloca i32, align 4\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %retVal = alloca i32, align 4\l  %lsense49 = alloca i32, align 4\l  %oldcount54 = alloca i32, align 4\l  %newcount58 = alloca i32, align 4\l  %updatedcount60 = alloca i32, align 4\l  %0 = load %struct.GlobalMemory** @Global, align 8\l  %id = getelementptr inbounds %struct.GlobalMemory* %0, i32 0, i32 0\l  %1 = load i32* %id, align 4\l  store i32 %1, i32* %MyNum, align 4\l  %2 = load %struct.GlobalMemory** @Global, align 8\l  %id3 = getelementptr inbounds %struct.GlobalMemory* %2, i32 0, i32 0\l  %3 = load i32* %id3, align 4\l  %inc = add nsw i32 %3, 1\l  store i32 %inc, i32* %id3, align 4\l  call void @printChar(i8 signext 49)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %4 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %4, i32 0, i32 2\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %5 = load volatile i32* %gsense, align 4\l  %call = call i32 @sleep(i32 1)\l  store i32 %5, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x5dacbf0 -> Node0x5dacc40;
	Node0x5dacc40 [shape=record,label="{while.body:                                       \l  %6 = load %struct.GlobalMemory** @Global, align 8\l  %start6 = getelementptr inbounds %struct.GlobalMemory* %6, i32 0, i32 2\l  %count = getelementptr inbounds %struct.barrier_t* %start6, i32 0, i32 1\l  %7 = load volatile i64* %count, align 8\l  %call1 = call i32 @sleep(i32 1)\l  %conv = trunc i64 %7 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %8 = load i32* %oldcount, align 4\l  %9 = load i32* %lsense, align 4\l  %add = add nsw i32 %8, %9\l  store i32 %add, i32* %newcount, align 4\l  %10 = load i32* %oldcount, align 4\l  %11 = load i32* %newcount, align 4\l  %call7 = call i32 @atomic_cmpxchg(i32 %10, i32 %11)\l  %call6 = call i32 @sleep(i32 1)\l  store i32 %call7, i32* %updatedcount, align 4\l  %12 = load i32* %updatedcount, align 4\l  %13 = load i32* %oldcount, align 4\l  %cmp = icmp eq i32 %12, %13\l  br i1 %cmp, label %if.then, label %if.end.21\l|{<s0>T|<s1>F}}"];
	Node0x5dacc40:s0 -> Node0x5dacc90;
	Node0x5dacc40:s1 -> Node0x5dace70;
	Node0x5dacc90 [shape=record,label="{if.then:                                          \l  %14 = load i32* %newcount, align 4\l  %15 = load i32* @P, align 4\l  %call2 = call i32 @sleep(i32 1)\l  %cmp9 = icmp eq i32 %14, %15\l  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5dacc90:s0 -> Node0x5dacce0;
	Node0x5dacc90:s1 -> Node0x5dacd30;
	Node0x5dacce0 [shape=record,label="{land.lhs.true:                                    \l  %16 = load i32* %lsense, align 4\l  %cmp11 = icmp eq i32 %16, 1\l  br i1 %cmp11, label %if.then.18, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5dacce0:s0 -> Node0x5dacdd0;
	Node0x5dacce0:s1 -> Node0x5dacd30;
	Node0x5dacd30 [shape=record,label="{lor.lhs.false:                                    \l  %17 = load i32* %newcount, align 4\l  %cmp13 = icmp eq i32 %17, 0\l  br i1 %cmp13, label %land.lhs.true.15, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5dacd30:s0 -> Node0x5dacd80;
	Node0x5dacd30:s1 -> Node0x5dace20;
	Node0x5dacd80 [shape=record,label="{land.lhs.true.15:                                 \l  %18 = load i32* %lsense, align 4\l  %cmp16 = icmp eq i32 %18, -1\l  br i1 %cmp16, label %if.then.18, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5dacd80:s0 -> Node0x5dacdd0;
	Node0x5dacd80:s1 -> Node0x5dace20;
	Node0x5dacdd0 [shape=record,label="{if.then.18:                                       \l  %19 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %19\l  %20 = load %struct.GlobalMemory** @Global, align 8\l  %start19 = getelementptr inbounds %struct.GlobalMemory* %20, i32 0, i32 2\l  %gsense20 = getelementptr inbounds %struct.barrier_t* %start19, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub, i32* %gsense20, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call3 = call i32 @sleep(i32 3)\l  br label %if.end\l}"];
	Node0x5dacdd0 -> Node0x5dace20;
	Node0x5dace20 [shape=record,label="{if.end:                                           \l  br label %while.end\l}"];
	Node0x5dace20 -> Node0x5dacec0;
	Node0x5dace70 [shape=record,label="{if.end.21:                                        \l  br label %while.body\l}"];
	Node0x5dace70 -> Node0x5dacc40;
	Node0x5dacec0 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x5dacec0 -> Node0x5dacf10;
	Node0x5dacf10 [shape=record,label="{while.cond:                                       \l  %21 = load %struct.GlobalMemory** @Global, align 8\l  %start22 = getelementptr inbounds %struct.GlobalMemory* %21, i32 0, i32 2\l  %gsense23 = getelementptr inbounds %struct.barrier_t* %start22, i32 0, i32 0\l  %22 = load volatile i32* %gsense23, align 4\l  %23 = load i32* %lsense, align 4\l  %cmp24 = icmp eq i32 %22, %23\l  br i1 %cmp24, label %while.body.26, label %while.end.27\l|{<s0>T|<s1>F}}"];
	Node0x5dacf10:s0 -> Node0x5dacf60;
	Node0x5dacf10:s1 -> Node0x5dacfb0;
	Node0x5dacf60 [shape=record,label="{while.body.26:                                    \l  %call4 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x5dacf60 -> Node0x5dacf10;
	Node0x5dacfb0 [shape=record,label="{while.end.27:                                     \l  call void @printY()\l  %call5 = call i32 @sleep(i32 1)\l  %24 = load i32* @rootN, align 4\l  %sub28 = sub nsw i32 %24, 1\l  %mul = mul nsw i32 2, %sub28\l  %conv29 = sext i32 %mul to i64\l  %mul30 = mul i64 %conv29, 8\l  %call31 = call i8* @malloc(i64 %mul30)\l  %25 = bitcast i8* %call31 to double*\l  store double* %25, double** %upriv, align 8\l  %26 = load double** %upriv, align 8\l  %cmp32 = icmp eq double* %26, null\l  br i1 %cmp32, label %if.then.34, label %if.end.36\l|{<s0>T|<s1>F}}"];
	Node0x5dacfb0:s0 -> Node0x5dad000;
	Node0x5dacfb0:s1 -> Node0x5dad050;
	Node0x5dad000 [shape=record,label="{if.then.34:                                       \l  unreachable\l}"];
	Node0x5dad050 [shape=record,label="{if.end.36:                                        \l  br label %for.cond\l}"];
	Node0x5dad050 -> Node0x5dad0a0;
	Node0x5dad0a0 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5dad0a0 -> Node0x5dad190;
	Node0x5dad0f0 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x5dad0f0 -> Node0x5dad140;
	Node0x5dad140 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5dad140 -> Node0x5dad0a0;
	Node0x5dad190 [shape=record,label="{for.end:                                          \l  %27 = load i32* @rootN, align 4\l  %28 = load i32* %MyNum, align 4\l  %mul44 = mul nsw i32 %27, %28\l  %29 = load i32* @P, align 4\l  %div = sdiv i32 %mul44, %29\l  store i32 %div, i32* %MyFirst, align 4\l  %30 = load i32* @rootN, align 4\l  %31 = load i32* %MyNum, align 4\l  %add45 = add nsw i32 %31, 1\l  %mul46 = mul nsw i32 %30, %add45\l  %32 = load i32* @P, align 4\l  %div47 = sdiv i32 %mul46, %32\l  store i32 %div47, i32* %MyLast, align 4\l  call void @printChar(i8 signext 50)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %33 = load %struct.GlobalMemory** @Global, align 8\l  %start50 = getelementptr inbounds %struct.GlobalMemory* %33, i32 0, i32 2\l  %gsense51 = getelementptr inbounds %struct.barrier_t* %start50, i32 0, i32 0\l  %34 = load volatile i32* %gsense51, align 4\l  %call8 = call i32 @sleep(i32 1)\l  store i32 %34, i32* %lsense49, align 4\l  br label %while.body.53\l}"];
	Node0x5dad190 -> Node0x5dad1e0;
	Node0x5dad1e0 [shape=record,label="{while.body.53:                                    \l  %35 = load %struct.GlobalMemory** @Global, align 8\l  %start55 = getelementptr inbounds %struct.GlobalMemory* %35, i32 0, i32 2\l  %count56 = getelementptr inbounds %struct.barrier_t* %start55, i32 0, i32 1\l  %36 = load volatile i64* %count56, align 8\l  %call9 = call i32 @sleep(i32 1)\l  %conv57 = trunc i64 %36 to i32\l  store i32 %conv57, i32* %oldcount54, align 4\l  %37 = load i32* %oldcount54, align 4\l  %38 = load i32* %lsense49, align 4\l  %add59 = add nsw i32 %37, %38\l  store i32 %add59, i32* %newcount58, align 4\l  %39 = load i32* %oldcount54, align 4\l  %40 = load i32* %newcount58, align 4\l  %call61 = call i32 @atomic_cmpxchg(i32 %39, i32 %40)\l  %call14 = call i32 @sleep(i32 1)\l  store i32 %call61, i32* %updatedcount60, align 4\l  %41 = load i32* %updatedcount60, align 4\l  %42 = load i32* %oldcount54, align 4\l  %cmp62 = icmp eq i32 %41, %42\l  br i1 %cmp62, label %if.then.64, label %if.end.81\l|{<s0>T|<s1>F}}"];
	Node0x5dad1e0:s0 -> Node0x5dad230;
	Node0x5dad1e0:s1 -> Node0x5dad410;
	Node0x5dad230 [shape=record,label="{if.then.64:                                       \l  %43 = load i32* %newcount58, align 4\l  %44 = load i32* @P, align 4\l  %call10 = call i32 @sleep(i32 1)\l  %cmp65 = icmp eq i32 %43, %44\l  br i1 %cmp65, label %land.lhs.true.67, label %lor.lhs.false.70\l|{<s0>T|<s1>F}}"];
	Node0x5dad230:s0 -> Node0x5dad280;
	Node0x5dad230:s1 -> Node0x5dad2d0;
	Node0x5dad280 [shape=record,label="{land.lhs.true.67:                                 \l  %45 = load i32* %lsense49, align 4\l  %cmp68 = icmp eq i32 %45, 1\l  br i1 %cmp68, label %if.then.76, label %lor.lhs.false.70\l|{<s0>T|<s1>F}}"];
	Node0x5dad280:s0 -> Node0x5dad370;
	Node0x5dad280:s1 -> Node0x5dad2d0;
	Node0x5dad2d0 [shape=record,label="{lor.lhs.false.70:                                 \l  %46 = load i32* %newcount58, align 4\l  %cmp71 = icmp eq i32 %46, 0\l  br i1 %cmp71, label %land.lhs.true.73, label %if.end.80\l|{<s0>T|<s1>F}}"];
	Node0x5dad2d0:s0 -> Node0x5dad320;
	Node0x5dad2d0:s1 -> Node0x5dad3c0;
	Node0x5dad320 [shape=record,label="{land.lhs.true.73:                                 \l  %47 = load i32* %lsense49, align 4\l  %cmp74 = icmp eq i32 %47, -1\l  br i1 %cmp74, label %if.then.76, label %if.end.80\l|{<s0>T|<s1>F}}"];
	Node0x5dad320:s0 -> Node0x5dad370;
	Node0x5dad320:s1 -> Node0x5dad3c0;
	Node0x5dad370 [shape=record,label="{if.then.76:                                       \l  %48 = load i32* %lsense49, align 4\l  %sub77 = sub nsw i32 0, %48\l  %49 = load %struct.GlobalMemory** @Global, align 8\l  %start78 = getelementptr inbounds %struct.GlobalMemory* %49, i32 0, i32 2\l  %gsense79 = getelementptr inbounds %struct.barrier_t* %start78, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub77, i32* %gsense79, align 4\l  call void @snapshot(i32 %sub77, i32 1)\l  %call11 = call i32 @sleep(i32 3)\l  br label %if.end.80\l}"];
	Node0x5dad370 -> Node0x5dad3c0;
	Node0x5dad3c0 [shape=record,label="{if.end.80:                                        \l  br label %while.end.82\l}"];
	Node0x5dad3c0 -> Node0x5dad460;
	Node0x5dad410 [shape=record,label="{if.end.81:                                        \l  br label %while.body.53\l}"];
	Node0x5dad410 -> Node0x5dad1e0;
	Node0x5dad460 [shape=record,label="{while.end.82:                                     \l  br label %while.cond.83\l}"];
	Node0x5dad460 -> Node0x5dad4b0;
	Node0x5dad4b0 [shape=record,label="{while.cond.83:                                    \l  %50 = load %struct.GlobalMemory** @Global, align 8\l  %start84 = getelementptr inbounds %struct.GlobalMemory* %50, i32 0, i32 2\l  %gsense85 = getelementptr inbounds %struct.barrier_t* %start84, i32 0, i32 0\l  %51 = load volatile i32* %gsense85, align 4\l  %52 = load i32* %lsense49, align 4\l  %cmp86 = icmp eq i32 %51, %52\l  br i1 %cmp86, label %while.body.88, label %while.end.89\l|{<s0>T|<s1>F}}"];
	Node0x5dad4b0:s0 -> Node0x5dad500;
	Node0x5dad4b0:s1 -> Node0x5dad550;
	Node0x5dad500 [shape=record,label="{while.body.88:                                    \l  %call12 = call i32 @sleep(i32 2)\l  br label %while.cond.83\l}"];
	Node0x5dad500 -> Node0x5dad4b0;
	Node0x5dad550 [shape=record,label="{while.end.89:                                     \l  call void @printY()\l  %call13 = call i32 @sleep(i32 1)\l  br label %if.end.96\l}"];
	Node0x5dad550 -> Node0x5dad640;
	Node0x5dad5a0 [shape=record,label="{lor.lhs.false.92:                                 \l  br label %if.end.96\l}"];
	Node0x5dad5a0 -> Node0x5dad640;
	Node0x5dad5f0 [shape=record,label="{if.then.93:                                       \l  br label %if.end.96\l}"];
	Node0x5dad5f0 -> Node0x5dad640;
	Node0x5dad640 [shape=record,label="{if.end.96:                                        \l  %53 = load i32* %MyFirst, align 4\l  %54 = load i32* %MyLast, align 4\l  %55 = load i32* @P, align 4\l  %56 = load %struct.GlobalMemory** @Global, align 8\l  call void @FFT1D(i32 1, i32 undef, i32 undef, double* undef, double* undef,\l... double* undef, double* undef, i32 undef, i32* %l_transtime, i32 %53, i32 %54,\l... i32 undef, i32 %55, i32 undef, i32 undef, i32 undef, %struct.GlobalMemory*\l... %56)\l  %57 = load i32* @test_result, align 4\l  %tobool97 = icmp ne i32 %57, 0\l  br i1 %tobool97, label %if.then.98, label %if.end.99\l|{<s0>T|<s1>F}}"];
	Node0x5dad640:s0 -> Node0x5dad690;
	Node0x5dad640:s1 -> Node0x5dad6e0;
	Node0x5dad690 [shape=record,label="{if.then.98:                                       \l  %58 = load i32* %MyFirst, align 4\l  %59 = load i32* %MyLast, align 4\l  %60 = load i32* @P, align 4\l  %61 = load %struct.GlobalMemory** @Global, align 8\l  call void @FFT1D(i32 -1, i32 undef, i32 undef, double* undef, double* undef,\l... double* undef, double* undef, i32 undef, i32* %l_transtime, i32 %58, i32 %59,\l... i32 undef, i32 %60, i32 undef, i32 undef, i32 undef, %struct.GlobalMemory*\l... %61)\l  br label %if.end.99\l}"];
	Node0x5dad690 -> Node0x5dad6e0;
	Node0x5dad6e0 [shape=record,label="{if.end.99:                                        \l  br label %if.end.112\l}"];
	Node0x5dad6e0 -> Node0x5dad7d0;
	Node0x5dad730 [shape=record,label="{lor.lhs.false.102:                                \l  br label %if.end.112\l}"];
	Node0x5dad730 -> Node0x5dad7d0;
	Node0x5dad780 [shape=record,label="{if.then.104:                                      \l  br label %if.end.112\l}"];
	Node0x5dad780 -> Node0x5dad7d0;
	Node0x5dad7d0 [shape=record,label="{if.end.112:                                       \l  br label %if.end.116\l}"];
	Node0x5dad7d0 -> Node0x5dad870;
	Node0x5dad820 [shape=record,label="{if.then.115:                                      \l  br label %if.end.116\l}"];
	Node0x5dad820 -> Node0x5dad870;
	Node0x5dad870 [shape=record,label="{if.end.116:                                       \l  ret void\l}"];
}
