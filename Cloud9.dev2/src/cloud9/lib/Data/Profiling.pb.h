// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Profiling.proto

#ifndef PROTOBUF_Profiling_2eproto__INCLUDED
#define PROTOBUF_Profiling_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "DebugInfo.pb.h"
// @@protoc_insertion_point(includes)

namespace klee {
namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Profiling_2eproto();
void protobuf_AssignDesc_Profiling_2eproto();
void protobuf_ShutdownFile_Profiling_2eproto();

class CallSiteProfile;
class LineProfile;
class FunctionProfile;
class GlobalProfile;

// ===================================================================

class CallSiteProfile : public ::google::protobuf::Message {
 public:
  CallSiteProfile();
  virtual ~CallSiteProfile();

  CallSiteProfile(const CallSiteProfile& from);

  inline CallSiteProfile& operator=(const CallSiteProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CallSiteProfile& default_instance();

  void Swap(CallSiteProfile* other);

  // implements Message ----------------------------------------------

  CallSiteProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallSiteProfile& from);
  void MergeFrom(const CallSiteProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .klee.data.DebugInfo debug_info = 6;
  inline bool has_debug_info() const;
  inline void clear_debug_info();
  static const int kDebugInfoFieldNumber = 6;
  inline const ::klee::data::DebugInfo& debug_info() const;
  inline ::klee::data::DebugInfo* mutable_debug_info();
  inline ::klee::data::DebugInfo* release_debug_info();
  inline void set_allocated_debug_info(::klee::data::DebugInfo* debug_info);

  // required int64 call_count = 2;
  inline bool has_call_count() const;
  inline void clear_call_count();
  static const int kCallCountFieldNumber = 2;
  inline ::google::protobuf::int64 call_count() const;
  inline void set_call_count(::google::protobuf::int64 value);

  // repeated int64 cost_value = 5;
  inline int cost_value_size() const;
  inline void clear_cost_value();
  static const int kCostValueFieldNumber = 5;
  inline ::google::protobuf::int64 cost_value(int index) const;
  inline void set_cost_value(int index, ::google::protobuf::int64 value);
  inline void add_cost_value(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      cost_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_cost_value();

  // @@protoc_insertion_point(class_scope:klee.data.CallSiteProfile)
 private:
  inline void set_has_debug_info();
  inline void clear_has_debug_info();
  inline void set_has_call_count();
  inline void clear_has_call_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::klee::data::DebugInfo* debug_info_;
  ::google::protobuf::int64 call_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > cost_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Profiling_2eproto();
  friend void protobuf_AssignDesc_Profiling_2eproto();
  friend void protobuf_ShutdownFile_Profiling_2eproto();

  void InitAsDefaultInstance();
  static CallSiteProfile* default_instance_;
};
// -------------------------------------------------------------------

class LineProfile : public ::google::protobuf::Message {
 public:
  LineProfile();
  virtual ~LineProfile();

  LineProfile(const LineProfile& from);

  inline LineProfile& operator=(const LineProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LineProfile& default_instance();

  void Swap(LineProfile* other);

  // implements Message ----------------------------------------------

  LineProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LineProfile& from);
  void MergeFrom(const LineProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .klee.data.DebugInfo debug_info = 6;
  inline bool has_debug_info() const;
  inline void clear_debug_info();
  static const int kDebugInfoFieldNumber = 6;
  inline const ::klee::data::DebugInfo& debug_info() const;
  inline ::klee::data::DebugInfo* mutable_debug_info();
  inline ::klee::data::DebugInfo* release_debug_info();
  inline void set_allocated_debug_info(::klee::data::DebugInfo* debug_info);

  // repeated int64 cost_value = 3;
  inline int cost_value_size() const;
  inline void clear_cost_value();
  static const int kCostValueFieldNumber = 3;
  inline ::google::protobuf::int64 cost_value(int index) const;
  inline void set_cost_value(int index, ::google::protobuf::int64 value);
  inline void add_cost_value(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      cost_value() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_cost_value();

  // repeated .klee.data.CallSiteProfile call_site_profile = 5;
  inline int call_site_profile_size() const;
  inline void clear_call_site_profile();
  static const int kCallSiteProfileFieldNumber = 5;
  inline const ::klee::data::CallSiteProfile& call_site_profile(int index) const;
  inline ::klee::data::CallSiteProfile* mutable_call_site_profile(int index);
  inline ::klee::data::CallSiteProfile* add_call_site_profile();
  inline const ::google::protobuf::RepeatedPtrField< ::klee::data::CallSiteProfile >&
      call_site_profile() const;
  inline ::google::protobuf::RepeatedPtrField< ::klee::data::CallSiteProfile >*
      mutable_call_site_profile();

  // @@protoc_insertion_point(class_scope:klee.data.LineProfile)
 private:
  inline void set_has_debug_info();
  inline void clear_has_debug_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::klee::data::DebugInfo* debug_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > cost_value_;
  ::google::protobuf::RepeatedPtrField< ::klee::data::CallSiteProfile > call_site_profile_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Profiling_2eproto();
  friend void protobuf_AssignDesc_Profiling_2eproto();
  friend void protobuf_ShutdownFile_Profiling_2eproto();

  void InitAsDefaultInstance();
  static LineProfile* default_instance_;
};
// -------------------------------------------------------------------

class FunctionProfile : public ::google::protobuf::Message {
 public:
  FunctionProfile();
  virtual ~FunctionProfile();

  FunctionProfile(const FunctionProfile& from);

  inline FunctionProfile& operator=(const FunctionProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionProfile& default_instance();

  void Swap(FunctionProfile* other);

  // implements Message ----------------------------------------------

  FunctionProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionProfile& from);
  void MergeFrom(const FunctionProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 function_id = 3;
  inline bool has_function_id() const;
  inline void clear_function_id();
  static const int kFunctionIdFieldNumber = 3;
  inline ::google::protobuf::int32 function_id() const;
  inline void set_function_id(::google::protobuf::int32 value);

  // repeated .klee.data.LineProfile line_profile = 2;
  inline int line_profile_size() const;
  inline void clear_line_profile();
  static const int kLineProfileFieldNumber = 2;
  inline const ::klee::data::LineProfile& line_profile(int index) const;
  inline ::klee::data::LineProfile* mutable_line_profile(int index);
  inline ::klee::data::LineProfile* add_line_profile();
  inline const ::google::protobuf::RepeatedPtrField< ::klee::data::LineProfile >&
      line_profile() const;
  inline ::google::protobuf::RepeatedPtrField< ::klee::data::LineProfile >*
      mutable_line_profile();

  // @@protoc_insertion_point(class_scope:klee.data.FunctionProfile)
 private:
  inline void set_has_function_id();
  inline void clear_has_function_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::klee::data::LineProfile > line_profile_;
  ::google::protobuf::int32 function_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Profiling_2eproto();
  friend void protobuf_AssignDesc_Profiling_2eproto();
  friend void protobuf_ShutdownFile_Profiling_2eproto();

  void InitAsDefaultInstance();
  static FunctionProfile* default_instance_;
};
// -------------------------------------------------------------------

class GlobalProfile : public ::google::protobuf::Message {
 public:
  GlobalProfile();
  virtual ~GlobalProfile();

  GlobalProfile(const GlobalProfile& from);

  inline GlobalProfile& operator=(const GlobalProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalProfile& default_instance();

  void Swap(GlobalProfile* other);

  // implements Message ----------------------------------------------

  GlobalProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalProfile& from);
  void MergeFrom(const GlobalProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 time_stamp = 3;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 3;
  inline ::google::protobuf::uint64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint64 value);

  // repeated string cost_label = 2;
  inline int cost_label_size() const;
  inline void clear_cost_label();
  static const int kCostLabelFieldNumber = 2;
  inline const ::std::string& cost_label(int index) const;
  inline ::std::string* mutable_cost_label(int index);
  inline void set_cost_label(int index, const ::std::string& value);
  inline void set_cost_label(int index, const char* value);
  inline void set_cost_label(int index, const char* value, size_t size);
  inline ::std::string* add_cost_label();
  inline void add_cost_label(const ::std::string& value);
  inline void add_cost_label(const char* value);
  inline void add_cost_label(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& cost_label() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cost_label();

  // repeated .klee.data.FunctionProfile function_profile = 1;
  inline int function_profile_size() const;
  inline void clear_function_profile();
  static const int kFunctionProfileFieldNumber = 1;
  inline const ::klee::data::FunctionProfile& function_profile(int index) const;
  inline ::klee::data::FunctionProfile* mutable_function_profile(int index);
  inline ::klee::data::FunctionProfile* add_function_profile();
  inline const ::google::protobuf::RepeatedPtrField< ::klee::data::FunctionProfile >&
      function_profile() const;
  inline ::google::protobuf::RepeatedPtrField< ::klee::data::FunctionProfile >*
      mutable_function_profile();

  // @@protoc_insertion_point(class_scope:klee.data.GlobalProfile)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 time_stamp_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cost_label_;
  ::google::protobuf::RepeatedPtrField< ::klee::data::FunctionProfile > function_profile_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Profiling_2eproto();
  friend void protobuf_AssignDesc_Profiling_2eproto();
  friend void protobuf_ShutdownFile_Profiling_2eproto();

  void InitAsDefaultInstance();
  static GlobalProfile* default_instance_;
};
// ===================================================================


// ===================================================================

// CallSiteProfile

// required .klee.data.DebugInfo debug_info = 6;
inline bool CallSiteProfile::has_debug_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallSiteProfile::set_has_debug_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallSiteProfile::clear_has_debug_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallSiteProfile::clear_debug_info() {
  if (debug_info_ != NULL) debug_info_->::klee::data::DebugInfo::Clear();
  clear_has_debug_info();
}
inline const ::klee::data::DebugInfo& CallSiteProfile::debug_info() const {
  return debug_info_ != NULL ? *debug_info_ : *default_instance_->debug_info_;
}
inline ::klee::data::DebugInfo* CallSiteProfile::mutable_debug_info() {
  set_has_debug_info();
  if (debug_info_ == NULL) debug_info_ = new ::klee::data::DebugInfo;
  return debug_info_;
}
inline ::klee::data::DebugInfo* CallSiteProfile::release_debug_info() {
  clear_has_debug_info();
  ::klee::data::DebugInfo* temp = debug_info_;
  debug_info_ = NULL;
  return temp;
}
inline void CallSiteProfile::set_allocated_debug_info(::klee::data::DebugInfo* debug_info) {
  delete debug_info_;
  debug_info_ = debug_info;
  if (debug_info) {
    set_has_debug_info();
  } else {
    clear_has_debug_info();
  }
}

// required int64 call_count = 2;
inline bool CallSiteProfile::has_call_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallSiteProfile::set_has_call_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallSiteProfile::clear_has_call_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallSiteProfile::clear_call_count() {
  call_count_ = GOOGLE_LONGLONG(0);
  clear_has_call_count();
}
inline ::google::protobuf::int64 CallSiteProfile::call_count() const {
  return call_count_;
}
inline void CallSiteProfile::set_call_count(::google::protobuf::int64 value) {
  set_has_call_count();
  call_count_ = value;
}

// repeated int64 cost_value = 5;
inline int CallSiteProfile::cost_value_size() const {
  return cost_value_.size();
}
inline void CallSiteProfile::clear_cost_value() {
  cost_value_.Clear();
}
inline ::google::protobuf::int64 CallSiteProfile::cost_value(int index) const {
  return cost_value_.Get(index);
}
inline void CallSiteProfile::set_cost_value(int index, ::google::protobuf::int64 value) {
  cost_value_.Set(index, value);
}
inline void CallSiteProfile::add_cost_value(::google::protobuf::int64 value) {
  cost_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
CallSiteProfile::cost_value() const {
  return cost_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
CallSiteProfile::mutable_cost_value() {
  return &cost_value_;
}

// -------------------------------------------------------------------

// LineProfile

// required .klee.data.DebugInfo debug_info = 6;
inline bool LineProfile::has_debug_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LineProfile::set_has_debug_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LineProfile::clear_has_debug_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LineProfile::clear_debug_info() {
  if (debug_info_ != NULL) debug_info_->::klee::data::DebugInfo::Clear();
  clear_has_debug_info();
}
inline const ::klee::data::DebugInfo& LineProfile::debug_info() const {
  return debug_info_ != NULL ? *debug_info_ : *default_instance_->debug_info_;
}
inline ::klee::data::DebugInfo* LineProfile::mutable_debug_info() {
  set_has_debug_info();
  if (debug_info_ == NULL) debug_info_ = new ::klee::data::DebugInfo;
  return debug_info_;
}
inline ::klee::data::DebugInfo* LineProfile::release_debug_info() {
  clear_has_debug_info();
  ::klee::data::DebugInfo* temp = debug_info_;
  debug_info_ = NULL;
  return temp;
}
inline void LineProfile::set_allocated_debug_info(::klee::data::DebugInfo* debug_info) {
  delete debug_info_;
  debug_info_ = debug_info;
  if (debug_info) {
    set_has_debug_info();
  } else {
    clear_has_debug_info();
  }
}

// repeated int64 cost_value = 3;
inline int LineProfile::cost_value_size() const {
  return cost_value_.size();
}
inline void LineProfile::clear_cost_value() {
  cost_value_.Clear();
}
inline ::google::protobuf::int64 LineProfile::cost_value(int index) const {
  return cost_value_.Get(index);
}
inline void LineProfile::set_cost_value(int index, ::google::protobuf::int64 value) {
  cost_value_.Set(index, value);
}
inline void LineProfile::add_cost_value(::google::protobuf::int64 value) {
  cost_value_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LineProfile::cost_value() const {
  return cost_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LineProfile::mutable_cost_value() {
  return &cost_value_;
}

// repeated .klee.data.CallSiteProfile call_site_profile = 5;
inline int LineProfile::call_site_profile_size() const {
  return call_site_profile_.size();
}
inline void LineProfile::clear_call_site_profile() {
  call_site_profile_.Clear();
}
inline const ::klee::data::CallSiteProfile& LineProfile::call_site_profile(int index) const {
  return call_site_profile_.Get(index);
}
inline ::klee::data::CallSiteProfile* LineProfile::mutable_call_site_profile(int index) {
  return call_site_profile_.Mutable(index);
}
inline ::klee::data::CallSiteProfile* LineProfile::add_call_site_profile() {
  return call_site_profile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::data::CallSiteProfile >&
LineProfile::call_site_profile() const {
  return call_site_profile_;
}
inline ::google::protobuf::RepeatedPtrField< ::klee::data::CallSiteProfile >*
LineProfile::mutable_call_site_profile() {
  return &call_site_profile_;
}

// -------------------------------------------------------------------

// FunctionProfile

// required int32 function_id = 3;
inline bool FunctionProfile::has_function_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionProfile::set_has_function_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionProfile::clear_has_function_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionProfile::clear_function_id() {
  function_id_ = 0;
  clear_has_function_id();
}
inline ::google::protobuf::int32 FunctionProfile::function_id() const {
  return function_id_;
}
inline void FunctionProfile::set_function_id(::google::protobuf::int32 value) {
  set_has_function_id();
  function_id_ = value;
}

// repeated .klee.data.LineProfile line_profile = 2;
inline int FunctionProfile::line_profile_size() const {
  return line_profile_.size();
}
inline void FunctionProfile::clear_line_profile() {
  line_profile_.Clear();
}
inline const ::klee::data::LineProfile& FunctionProfile::line_profile(int index) const {
  return line_profile_.Get(index);
}
inline ::klee::data::LineProfile* FunctionProfile::mutable_line_profile(int index) {
  return line_profile_.Mutable(index);
}
inline ::klee::data::LineProfile* FunctionProfile::add_line_profile() {
  return line_profile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::data::LineProfile >&
FunctionProfile::line_profile() const {
  return line_profile_;
}
inline ::google::protobuf::RepeatedPtrField< ::klee::data::LineProfile >*
FunctionProfile::mutable_line_profile() {
  return &line_profile_;
}

// -------------------------------------------------------------------

// GlobalProfile

// required uint64 time_stamp = 3;
inline bool GlobalProfile::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalProfile::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalProfile::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalProfile::clear_time_stamp() {
  time_stamp_ = GOOGLE_ULONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::uint64 GlobalProfile::time_stamp() const {
  return time_stamp_;
}
inline void GlobalProfile::set_time_stamp(::google::protobuf::uint64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
}

// repeated string cost_label = 2;
inline int GlobalProfile::cost_label_size() const {
  return cost_label_.size();
}
inline void GlobalProfile::clear_cost_label() {
  cost_label_.Clear();
}
inline const ::std::string& GlobalProfile::cost_label(int index) const {
  return cost_label_.Get(index);
}
inline ::std::string* GlobalProfile::mutable_cost_label(int index) {
  return cost_label_.Mutable(index);
}
inline void GlobalProfile::set_cost_label(int index, const ::std::string& value) {
  cost_label_.Mutable(index)->assign(value);
}
inline void GlobalProfile::set_cost_label(int index, const char* value) {
  cost_label_.Mutable(index)->assign(value);
}
inline void GlobalProfile::set_cost_label(int index, const char* value, size_t size) {
  cost_label_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GlobalProfile::add_cost_label() {
  return cost_label_.Add();
}
inline void GlobalProfile::add_cost_label(const ::std::string& value) {
  cost_label_.Add()->assign(value);
}
inline void GlobalProfile::add_cost_label(const char* value) {
  cost_label_.Add()->assign(value);
}
inline void GlobalProfile::add_cost_label(const char* value, size_t size) {
  cost_label_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GlobalProfile::cost_label() const {
  return cost_label_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GlobalProfile::mutable_cost_label() {
  return &cost_label_;
}

// repeated .klee.data.FunctionProfile function_profile = 1;
inline int GlobalProfile::function_profile_size() const {
  return function_profile_.size();
}
inline void GlobalProfile::clear_function_profile() {
  function_profile_.Clear();
}
inline const ::klee::data::FunctionProfile& GlobalProfile::function_profile(int index) const {
  return function_profile_.Get(index);
}
inline ::klee::data::FunctionProfile* GlobalProfile::mutable_function_profile(int index) {
  return function_profile_.Mutable(index);
}
inline ::klee::data::FunctionProfile* GlobalProfile::add_function_profile() {
  return function_profile_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::klee::data::FunctionProfile >&
GlobalProfile::function_profile() const {
  return function_profile_;
}
inline ::google::protobuf::RepeatedPtrField< ::klee::data::FunctionProfile >*
GlobalProfile::mutable_function_profile() {
  return &function_profile_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace klee

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Profiling_2eproto__INCLUDED
