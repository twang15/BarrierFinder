// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Cloud9Data.proto

#ifndef PROTOBUF_Cloud9Data_2eproto__INCLUDED
#define PROTOBUF_Cloud9Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cloud9 {
namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Cloud9Data_2eproto();
void protobuf_AssignDesc_Cloud9Data_2eproto();
void protobuf_ShutdownFile_Cloud9Data_2eproto();

class PathData;
class ExecutionPathSet;
class ExecutionPathSet_ExecutionPath;
class StatisticData;
class StatisticUpdate;
class PartitionData;
class WorkerReportMessage;
class WorkerReportMessage_Registration;
class WorkerReportMessage_NodeSetUpdate;
class WorkerReportMessage_NodeDataUpdate;
class WorkerReportMessage_TargetUpdate;
class LBResponseMessage;
class LBResponseMessage_JobTransfer;
class LBResponseMessage_JobSeed;
class PeerTransferMessage;

// ===================================================================

class PathData : public ::google::protobuf::Message {
 public:
  PathData();
  virtual ~PathData();

  PathData(const PathData& from);

  inline PathData& operator=(const PathData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathData& default_instance();

  void Swap(PathData* other);

  // implements Message ----------------------------------------------

  PathData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathData& from);
  void MergeFrom(const PathData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // required bytes path = 2;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const void* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:cloud9.data.PathData)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_path();
  inline void clear_has_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* path_;
  ::google::protobuf::uint32 length_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static PathData* default_instance_;
};
// -------------------------------------------------------------------

class ExecutionPathSet_ExecutionPath : public ::google::protobuf::Message {
 public:
  ExecutionPathSet_ExecutionPath();
  virtual ~ExecutionPathSet_ExecutionPath();

  ExecutionPathSet_ExecutionPath(const ExecutionPathSet_ExecutionPath& from);

  inline ExecutionPathSet_ExecutionPath& operator=(const ExecutionPathSet_ExecutionPath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionPathSet_ExecutionPath& default_instance();

  void Swap(ExecutionPathSet_ExecutionPath* other);

  // implements Message ----------------------------------------------

  ExecutionPathSet_ExecutionPath* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecutionPathSet_ExecutionPath& from);
  void MergeFrom(const ExecutionPathSet_ExecutionPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 parent = 3;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 3;
  inline ::google::protobuf::uint32 parent() const;
  inline void set_parent(::google::protobuf::uint32 value);

  // optional uint32 parent_pos = 4;
  inline bool has_parent_pos() const;
  inline void clear_parent_pos();
  static const int kParentPosFieldNumber = 4;
  inline ::google::protobuf::uint32 parent_pos() const;
  inline void set_parent_pos(::google::protobuf::uint32 value);

  // required .cloud9.data.PathData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::cloud9::data::PathData& data() const;
  inline ::cloud9::data::PathData* mutable_data();
  inline ::cloud9::data::PathData* release_data();
  inline void set_allocated_data(::cloud9::data::PathData* data);

  // @@protoc_insertion_point(class_scope:cloud9.data.ExecutionPathSet.ExecutionPath)
 private:
  inline void set_has_parent();
  inline void clear_has_parent();
  inline void set_has_parent_pos();
  inline void clear_has_parent_pos();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 parent_;
  ::google::protobuf::uint32 parent_pos_;
  ::cloud9::data::PathData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static ExecutionPathSet_ExecutionPath* default_instance_;
};
// -------------------------------------------------------------------

class ExecutionPathSet : public ::google::protobuf::Message {
 public:
  ExecutionPathSet();
  virtual ~ExecutionPathSet();

  ExecutionPathSet(const ExecutionPathSet& from);

  inline ExecutionPathSet& operator=(const ExecutionPathSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionPathSet& default_instance();

  void Swap(ExecutionPathSet* other);

  // implements Message ----------------------------------------------

  ExecutionPathSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecutionPathSet& from);
  void MergeFrom(const ExecutionPathSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExecutionPathSet_ExecutionPath ExecutionPath;

  // accessors -------------------------------------------------------

  // repeated .cloud9.data.ExecutionPathSet.ExecutionPath path = 1;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::cloud9::data::ExecutionPathSet_ExecutionPath& path(int index) const;
  inline ::cloud9::data::ExecutionPathSet_ExecutionPath* mutable_path(int index);
  inline ::cloud9::data::ExecutionPathSet_ExecutionPath* add_path();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::ExecutionPathSet_ExecutionPath >&
      path() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::ExecutionPathSet_ExecutionPath >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:cloud9.data.ExecutionPathSet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::cloud9::data::ExecutionPathSet_ExecutionPath > path_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static ExecutionPathSet* default_instance_;
};
// -------------------------------------------------------------------

class StatisticData : public ::google::protobuf::Message {
 public:
  StatisticData();
  virtual ~StatisticData();

  StatisticData(const StatisticData& from);

  inline StatisticData& operator=(const StatisticData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticData& default_instance();

  void Swap(StatisticData* other);

  // implements Message ----------------------------------------------

  StatisticData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticData& from);
  void MergeFrom(const StatisticData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:cloud9.data.StatisticData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static StatisticData* default_instance_;
};
// -------------------------------------------------------------------

class StatisticUpdate : public ::google::protobuf::Message {
 public:
  StatisticUpdate();
  virtual ~StatisticUpdate();

  StatisticUpdate(const StatisticUpdate& from);

  inline StatisticUpdate& operator=(const StatisticUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatisticUpdate& default_instance();

  void Swap(StatisticUpdate* other);

  // implements Message ----------------------------------------------

  StatisticUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatisticUpdate& from);
  void MergeFrom(const StatisticUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .cloud9.data.StatisticData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::cloud9::data::StatisticData& data(int index) const;
  inline ::cloud9::data::StatisticData* mutable_data(int index);
  inline ::cloud9::data::StatisticData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:cloud9.data.StatisticUpdate)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static StatisticUpdate* default_instance_;
};
// -------------------------------------------------------------------

class PartitionData : public ::google::protobuf::Message {
 public:
  PartitionData();
  virtual ~PartitionData();

  PartitionData(const PartitionData& from);

  inline PartitionData& operator=(const PartitionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PartitionData& default_instance();

  void Swap(PartitionData* other);

  // implements Message ----------------------------------------------

  PartitionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartitionData& from);
  void MergeFrom(const PartitionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 partition = 1;
  inline bool has_partition() const;
  inline void clear_partition();
  static const int kPartitionFieldNumber = 1;
  inline ::google::protobuf::uint32 partition() const;
  inline void set_partition(::google::protobuf::uint32 value);

  // required uint32 total = 2;
  inline bool has_total() const;
  inline void clear_total();
  static const int kTotalFieldNumber = 2;
  inline ::google::protobuf::uint32 total() const;
  inline void set_total(::google::protobuf::uint32 value);

  // required uint32 active = 3;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline ::google::protobuf::uint32 active() const;
  inline void set_active(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cloud9.data.PartitionData)
 private:
  inline void set_has_partition();
  inline void clear_has_partition();
  inline void set_has_total();
  inline void clear_has_total();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 partition_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 active_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static PartitionData* default_instance_;
};
// -------------------------------------------------------------------

class WorkerReportMessage_Registration : public ::google::protobuf::Message {
 public:
  WorkerReportMessage_Registration();
  virtual ~WorkerReportMessage_Registration();

  WorkerReportMessage_Registration(const WorkerReportMessage_Registration& from);

  inline WorkerReportMessage_Registration& operator=(const WorkerReportMessage_Registration& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerReportMessage_Registration& default_instance();

  void Swap(WorkerReportMessage_Registration* other);

  // implements Message ----------------------------------------------

  WorkerReportMessage_Registration* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerReportMessage_Registration& from);
  void MergeFrom(const WorkerReportMessage_Registration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // required bool wants_updates = 5;
  inline bool has_wants_updates() const;
  inline void clear_wants_updates();
  static const int kWantsUpdatesFieldNumber = 5;
  inline bool wants_updates() const;
  inline void set_wants_updates(bool value);

  // required bool has_partitions = 7;
  inline bool has_has_partitions() const;
  inline void clear_has_partitions();
  static const int kHasPartitionsFieldNumber = 7;
  inline bool has_partitions() const;
  inline void set_has_partitions(bool value);

  // required string prog_name = 3;
  inline bool has_prog_name() const;
  inline void clear_prog_name();
  static const int kProgNameFieldNumber = 3;
  inline const ::std::string& prog_name() const;
  inline void set_prog_name(const ::std::string& value);
  inline void set_prog_name(const char* value);
  inline void set_prog_name(const char* value, size_t size);
  inline ::std::string* mutable_prog_name();
  inline ::std::string* release_prog_name();
  inline void set_allocated_prog_name(::std::string* prog_name);

  // required uint32 prog_crc = 6;
  inline bool has_prog_crc() const;
  inline void clear_prog_crc();
  static const int kProgCrcFieldNumber = 6;
  inline ::google::protobuf::uint32 prog_crc() const;
  inline void set_prog_crc(::google::protobuf::uint32 value);

  // required uint32 stat_id_count = 4;
  inline bool has_stat_id_count() const;
  inline void clear_stat_id_count();
  static const int kStatIdCountFieldNumber = 4;
  inline ::google::protobuf::uint32 stat_id_count() const;
  inline void set_stat_id_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cloud9.data.WorkerReportMessage.Registration)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_wants_updates();
  inline void clear_has_wants_updates();
  inline void set_has_has_partitions();
  inline void clear_has_has_partitions();
  inline void set_has_prog_name();
  inline void clear_has_prog_name();
  inline void set_has_prog_crc();
  inline void clear_has_prog_crc();
  inline void set_has_stat_id_count();
  inline void clear_has_stat_id_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* address_;
  ::google::protobuf::uint32 port_;
  bool wants_updates_;
  bool has_partitions_;
  ::std::string* prog_name_;
  ::google::protobuf::uint32 prog_crc_;
  ::google::protobuf::uint32 stat_id_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static WorkerReportMessage_Registration* default_instance_;
};
// -------------------------------------------------------------------

class WorkerReportMessage_NodeSetUpdate : public ::google::protobuf::Message {
 public:
  WorkerReportMessage_NodeSetUpdate();
  virtual ~WorkerReportMessage_NodeSetUpdate();

  WorkerReportMessage_NodeSetUpdate(const WorkerReportMessage_NodeSetUpdate& from);

  inline WorkerReportMessage_NodeSetUpdate& operator=(const WorkerReportMessage_NodeSetUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerReportMessage_NodeSetUpdate& default_instance();

  void Swap(WorkerReportMessage_NodeSetUpdate* other);

  // implements Message ----------------------------------------------

  WorkerReportMessage_NodeSetUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerReportMessage_NodeSetUpdate& from);
  void MergeFrom(const WorkerReportMessage_NodeSetUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .cloud9.data.ExecutionPathSet pathSet = 1;
  inline bool has_pathset() const;
  inline void clear_pathset();
  static const int kPathSetFieldNumber = 1;
  inline const ::cloud9::data::ExecutionPathSet& pathset() const;
  inline ::cloud9::data::ExecutionPathSet* mutable_pathset();
  inline ::cloud9::data::ExecutionPathSet* release_pathset();
  inline void set_allocated_pathset(::cloud9::data::ExecutionPathSet* pathset);

  // @@protoc_insertion_point(class_scope:cloud9.data.WorkerReportMessage.NodeSetUpdate)
 private:
  inline void set_has_pathset();
  inline void clear_has_pathset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::cloud9::data::ExecutionPathSet* pathset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static WorkerReportMessage_NodeSetUpdate* default_instance_;
};
// -------------------------------------------------------------------

class WorkerReportMessage_NodeDataUpdate : public ::google::protobuf::Message {
 public:
  WorkerReportMessage_NodeDataUpdate();
  virtual ~WorkerReportMessage_NodeDataUpdate();

  WorkerReportMessage_NodeDataUpdate(const WorkerReportMessage_NodeDataUpdate& from);

  inline WorkerReportMessage_NodeDataUpdate& operator=(const WorkerReportMessage_NodeDataUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerReportMessage_NodeDataUpdate& default_instance();

  void Swap(WorkerReportMessage_NodeDataUpdate* other);

  // implements Message ----------------------------------------------

  WorkerReportMessage_NodeDataUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerReportMessage_NodeDataUpdate& from);
  void MergeFrom(const WorkerReportMessage_NodeDataUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline ::google::protobuf::uint32 data(int index) const;
  inline void set_data(int index, ::google::protobuf::uint32 value);
  inline void add_data(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:cloud9.data.WorkerReportMessage.NodeDataUpdate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static WorkerReportMessage_NodeDataUpdate* default_instance_;
};
// -------------------------------------------------------------------

class WorkerReportMessage_TargetUpdate : public ::google::protobuf::Message {
 public:
  WorkerReportMessage_TargetUpdate();
  virtual ~WorkerReportMessage_TargetUpdate();

  WorkerReportMessage_TargetUpdate(const WorkerReportMessage_TargetUpdate& from);

  inline WorkerReportMessage_TargetUpdate& operator=(const WorkerReportMessage_TargetUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerReportMessage_TargetUpdate& default_instance();

  void Swap(WorkerReportMessage_TargetUpdate* other);

  // implements Message ----------------------------------------------

  WorkerReportMessage_TargetUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerReportMessage_TargetUpdate& from);
  void MergeFrom(const WorkerReportMessage_TargetUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string targetName = 1;
  inline bool has_targetname() const;
  inline void clear_targetname();
  static const int kTargetNameFieldNumber = 1;
  inline const ::std::string& targetname() const;
  inline void set_targetname(const ::std::string& value);
  inline void set_targetname(const char* value);
  inline void set_targetname(const char* value, size_t size);
  inline ::std::string* mutable_targetname();
  inline ::std::string* release_targetname();
  inline void set_allocated_targetname(::std::string* targetname);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cloud9.data.WorkerReportMessage.TargetUpdate)
 private:
  inline void set_has_targetname();
  inline void clear_has_targetname();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* targetname_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static WorkerReportMessage_TargetUpdate* default_instance_;
};
// -------------------------------------------------------------------

class WorkerReportMessage : public ::google::protobuf::Message {
 public:
  WorkerReportMessage();
  virtual ~WorkerReportMessage();

  WorkerReportMessage(const WorkerReportMessage& from);

  inline WorkerReportMessage& operator=(const WorkerReportMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkerReportMessage& default_instance();

  void Swap(WorkerReportMessage* other);

  // implements Message ----------------------------------------------

  WorkerReportMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkerReportMessage& from);
  void MergeFrom(const WorkerReportMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorkerReportMessage_Registration Registration;
  typedef WorkerReportMessage_NodeSetUpdate NodeSetUpdate;
  typedef WorkerReportMessage_NodeDataUpdate NodeDataUpdate;
  typedef WorkerReportMessage_TargetUpdate TargetUpdate;

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .cloud9.data.WorkerReportMessage.NodeSetUpdate nodeSetUpdate = 2;
  inline bool has_nodesetupdate() const;
  inline void clear_nodesetupdate();
  static const int kNodeSetUpdateFieldNumber = 2;
  inline const ::cloud9::data::WorkerReportMessage_NodeSetUpdate& nodesetupdate() const;
  inline ::cloud9::data::WorkerReportMessage_NodeSetUpdate* mutable_nodesetupdate();
  inline ::cloud9::data::WorkerReportMessage_NodeSetUpdate* release_nodesetupdate();
  inline void set_allocated_nodesetupdate(::cloud9::data::WorkerReportMessage_NodeSetUpdate* nodesetupdate);

  // optional .cloud9.data.WorkerReportMessage.NodeDataUpdate nodeDataUpdate = 3;
  inline bool has_nodedataupdate() const;
  inline void clear_nodedataupdate();
  static const int kNodeDataUpdateFieldNumber = 3;
  inline const ::cloud9::data::WorkerReportMessage_NodeDataUpdate& nodedataupdate() const;
  inline ::cloud9::data::WorkerReportMessage_NodeDataUpdate* mutable_nodedataupdate();
  inline ::cloud9::data::WorkerReportMessage_NodeDataUpdate* release_nodedataupdate();
  inline void set_allocated_nodedataupdate(::cloud9::data::WorkerReportMessage_NodeDataUpdate* nodedataupdate);

  // optional .cloud9.data.WorkerReportMessage.Registration registration = 4;
  inline bool has_registration() const;
  inline void clear_registration();
  static const int kRegistrationFieldNumber = 4;
  inline const ::cloud9::data::WorkerReportMessage_Registration& registration() const;
  inline ::cloud9::data::WorkerReportMessage_Registration* mutable_registration();
  inline ::cloud9::data::WorkerReportMessage_Registration* release_registration();
  inline void set_allocated_registration(::cloud9::data::WorkerReportMessage_Registration* registration);

  // repeated .cloud9.data.StatisticUpdate localUpdates = 5;
  inline int localupdates_size() const;
  inline void clear_localupdates();
  static const int kLocalUpdatesFieldNumber = 5;
  inline const ::cloud9::data::StatisticUpdate& localupdates(int index) const;
  inline ::cloud9::data::StatisticUpdate* mutable_localupdates(int index);
  inline ::cloud9::data::StatisticUpdate* add_localupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >&
      localupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >*
      mutable_localupdates();

  // repeated .cloud9.data.WorkerReportMessage.TargetUpdate targetUpdates = 6;
  inline int targetupdates_size() const;
  inline void clear_targetupdates();
  static const int kTargetUpdatesFieldNumber = 6;
  inline const ::cloud9::data::WorkerReportMessage_TargetUpdate& targetupdates(int index) const;
  inline ::cloud9::data::WorkerReportMessage_TargetUpdate* mutable_targetupdates(int index);
  inline ::cloud9::data::WorkerReportMessage_TargetUpdate* add_targetupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::WorkerReportMessage_TargetUpdate >&
      targetupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::WorkerReportMessage_TargetUpdate >*
      mutable_targetupdates();

  // repeated .cloud9.data.PartitionData partitionUpdates = 7;
  inline int partitionupdates_size() const;
  inline void clear_partitionupdates();
  static const int kPartitionUpdatesFieldNumber = 7;
  inline const ::cloud9::data::PartitionData& partitionupdates(int index) const;
  inline ::cloud9::data::PartitionData* mutable_partitionupdates(int index);
  inline ::cloud9::data::PartitionData* add_partitionupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >&
      partitionupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >*
      mutable_partitionupdates();

  // @@protoc_insertion_point(class_scope:cloud9.data.WorkerReportMessage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nodesetupdate();
  inline void clear_has_nodesetupdate();
  inline void set_has_nodedataupdate();
  inline void clear_has_nodedataupdate();
  inline void set_has_registration();
  inline void clear_has_registration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::cloud9::data::WorkerReportMessage_NodeSetUpdate* nodesetupdate_;
  ::cloud9::data::WorkerReportMessage_NodeDataUpdate* nodedataupdate_;
  ::cloud9::data::WorkerReportMessage_Registration* registration_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate > localupdates_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::WorkerReportMessage_TargetUpdate > targetupdates_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData > partitionupdates_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static WorkerReportMessage* default_instance_;
};
// -------------------------------------------------------------------

class LBResponseMessage_JobTransfer : public ::google::protobuf::Message {
 public:
  LBResponseMessage_JobTransfer();
  virtual ~LBResponseMessage_JobTransfer();

  LBResponseMessage_JobTransfer(const LBResponseMessage_JobTransfer& from);

  inline LBResponseMessage_JobTransfer& operator=(const LBResponseMessage_JobTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBResponseMessage_JobTransfer& default_instance();

  void Swap(LBResponseMessage_JobTransfer* other);

  // implements Message ----------------------------------------------

  LBResponseMessage_JobTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LBResponseMessage_JobTransfer& from);
  void MergeFrom(const LBResponseMessage_JobTransfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string dest_address = 2;
  inline bool has_dest_address() const;
  inline void clear_dest_address();
  static const int kDestAddressFieldNumber = 2;
  inline const ::std::string& dest_address() const;
  inline void set_dest_address(const ::std::string& value);
  inline void set_dest_address(const char* value);
  inline void set_dest_address(const char* value, size_t size);
  inline ::std::string* mutable_dest_address();
  inline ::std::string* release_dest_address();
  inline void set_allocated_dest_address(::std::string* dest_address);

  // required uint32 dest_port = 3;
  inline bool has_dest_port() const;
  inline void clear_dest_port();
  static const int kDestPortFieldNumber = 3;
  inline ::google::protobuf::uint32 dest_port() const;
  inline void set_dest_port(::google::protobuf::uint32 value);

  // required uint32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // repeated .cloud9.data.PartitionData partitions = 6;
  inline int partitions_size() const;
  inline void clear_partitions();
  static const int kPartitionsFieldNumber = 6;
  inline const ::cloud9::data::PartitionData& partitions(int index) const;
  inline ::cloud9::data::PartitionData* mutable_partitions(int index);
  inline ::cloud9::data::PartitionData* add_partitions();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >&
      partitions() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >*
      mutable_partitions();

  // @@protoc_insertion_point(class_scope:cloud9.data.LBResponseMessage.JobTransfer)
 private:
  inline void set_has_dest_address();
  inline void clear_has_dest_address();
  inline void set_has_dest_port();
  inline void clear_has_dest_port();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* dest_address_;
  ::google::protobuf::uint32 dest_port_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData > partitions_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static LBResponseMessage_JobTransfer* default_instance_;
};
// -------------------------------------------------------------------

class LBResponseMessage_JobSeed : public ::google::protobuf::Message {
 public:
  LBResponseMessage_JobSeed();
  virtual ~LBResponseMessage_JobSeed();

  LBResponseMessage_JobSeed(const LBResponseMessage_JobSeed& from);

  inline LBResponseMessage_JobSeed& operator=(const LBResponseMessage_JobSeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBResponseMessage_JobSeed& default_instance();

  void Swap(LBResponseMessage_JobSeed* other);

  // implements Message ----------------------------------------------

  LBResponseMessage_JobSeed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LBResponseMessage_JobSeed& from);
  void MergeFrom(const LBResponseMessage_JobSeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .cloud9.data.ExecutionPathSet path_set = 1;
  inline bool has_path_set() const;
  inline void clear_path_set();
  static const int kPathSetFieldNumber = 1;
  inline const ::cloud9::data::ExecutionPathSet& path_set() const;
  inline ::cloud9::data::ExecutionPathSet* mutable_path_set();
  inline ::cloud9::data::ExecutionPathSet* release_path_set();
  inline void set_allocated_path_set(::cloud9::data::ExecutionPathSet* path_set);

  // @@protoc_insertion_point(class_scope:cloud9.data.LBResponseMessage.JobSeed)
 private:
  inline void set_has_path_set();
  inline void clear_has_path_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::cloud9::data::ExecutionPathSet* path_set_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static LBResponseMessage_JobSeed* default_instance_;
};
// -------------------------------------------------------------------

class LBResponseMessage : public ::google::protobuf::Message {
 public:
  LBResponseMessage();
  virtual ~LBResponseMessage();

  LBResponseMessage(const LBResponseMessage& from);

  inline LBResponseMessage& operator=(const LBResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBResponseMessage& default_instance();

  void Swap(LBResponseMessage* other);

  // implements Message ----------------------------------------------

  LBResponseMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LBResponseMessage& from);
  void MergeFrom(const LBResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LBResponseMessage_JobTransfer JobTransfer;
  typedef LBResponseMessage_JobSeed JobSeed;

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // repeated .cloud9.data.LBResponseMessage.JobTransfer jobTransfer = 2;
  inline int jobtransfer_size() const;
  inline void clear_jobtransfer();
  static const int kJobTransferFieldNumber = 2;
  inline const ::cloud9::data::LBResponseMessage_JobTransfer& jobtransfer(int index) const;
  inline ::cloud9::data::LBResponseMessage_JobTransfer* mutable_jobtransfer(int index);
  inline ::cloud9::data::LBResponseMessage_JobTransfer* add_jobtransfer();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::LBResponseMessage_JobTransfer >&
      jobtransfer() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::LBResponseMessage_JobTransfer >*
      mutable_jobtransfer();

  // optional .cloud9.data.LBResponseMessage.JobSeed jobSeed = 3;
  inline bool has_jobseed() const;
  inline void clear_jobseed();
  static const int kJobSeedFieldNumber = 3;
  inline const ::cloud9::data::LBResponseMessage_JobSeed& jobseed() const;
  inline ::cloud9::data::LBResponseMessage_JobSeed* mutable_jobseed();
  inline ::cloud9::data::LBResponseMessage_JobSeed* release_jobseed();
  inline void set_allocated_jobseed(::cloud9::data::LBResponseMessage_JobSeed* jobseed);

  // required bool more_details = 4;
  inline bool has_more_details() const;
  inline void clear_more_details();
  static const int kMoreDetailsFieldNumber = 4;
  inline bool more_details() const;
  inline void set_more_details(bool value);

  // required bool terminate = 7;
  inline bool has_terminate() const;
  inline void clear_terminate();
  static const int kTerminateFieldNumber = 7;
  inline bool terminate() const;
  inline void set_terminate(bool value);

  // repeated .cloud9.data.StatisticUpdate globalUpdates = 5;
  inline int globalupdates_size() const;
  inline void clear_globalupdates();
  static const int kGlobalUpdatesFieldNumber = 5;
  inline const ::cloud9::data::StatisticUpdate& globalupdates(int index) const;
  inline ::cloud9::data::StatisticUpdate* mutable_globalupdates(int index);
  inline ::cloud9::data::StatisticUpdate* add_globalupdates();
  inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >&
      globalupdates() const;
  inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >*
      mutable_globalupdates();

  // repeated string targets = 6;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 6;
  inline const ::std::string& targets(int index) const;
  inline ::std::string* mutable_targets(int index);
  inline void set_targets(int index, const ::std::string& value);
  inline void set_targets(int index, const char* value);
  inline void set_targets(int index, const char* value, size_t size);
  inline ::std::string* add_targets();
  inline void add_targets(const ::std::string& value);
  inline void add_targets(const char* value);
  inline void add_targets(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_targets();

  // @@protoc_insertion_point(class_scope:cloud9.data.LBResponseMessage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_jobseed();
  inline void clear_has_jobseed();
  inline void set_has_more_details();
  inline void clear_has_more_details();
  inline void set_has_terminate();
  inline void clear_has_terminate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::cloud9::data::LBResponseMessage_JobTransfer > jobtransfer_;
  ::cloud9::data::LBResponseMessage_JobSeed* jobseed_;
  ::google::protobuf::uint32 id_;
  bool more_details_;
  bool terminate_;
  ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate > globalupdates_;
  ::google::protobuf::RepeatedPtrField< ::std::string> targets_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static LBResponseMessage* default_instance_;
};
// -------------------------------------------------------------------

class PeerTransferMessage : public ::google::protobuf::Message {
 public:
  PeerTransferMessage();
  virtual ~PeerTransferMessage();

  PeerTransferMessage(const PeerTransferMessage& from);

  inline PeerTransferMessage& operator=(const PeerTransferMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PeerTransferMessage& default_instance();

  void Swap(PeerTransferMessage* other);

  // implements Message ----------------------------------------------

  PeerTransferMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PeerTransferMessage& from);
  void MergeFrom(const PeerTransferMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .cloud9.data.ExecutionPathSet path_set = 1;
  inline bool has_path_set() const;
  inline void clear_path_set();
  static const int kPathSetFieldNumber = 1;
  inline const ::cloud9::data::ExecutionPathSet& path_set() const;
  inline ::cloud9::data::ExecutionPathSet* mutable_path_set();
  inline ::cloud9::data::ExecutionPathSet* release_path_set();
  inline void set_allocated_path_set(::cloud9::data::ExecutionPathSet* path_set);

  // repeated uint64 instr_since_fork = 2;
  inline int instr_since_fork_size() const;
  inline void clear_instr_since_fork();
  static const int kInstrSinceForkFieldNumber = 2;
  inline ::google::protobuf::uint64 instr_since_fork(int index) const;
  inline void set_instr_since_fork(int index, ::google::protobuf::uint64 value);
  inline void add_instr_since_fork(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      instr_since_fork() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_instr_since_fork();

  // @@protoc_insertion_point(class_scope:cloud9.data.PeerTransferMessage)
 private:
  inline void set_has_path_set();
  inline void clear_has_path_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::cloud9::data::ExecutionPathSet* path_set_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > instr_since_fork_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Cloud9Data_2eproto();
  friend void protobuf_AssignDesc_Cloud9Data_2eproto();
  friend void protobuf_ShutdownFile_Cloud9Data_2eproto();

  void InitAsDefaultInstance();
  static PeerTransferMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// PathData

// required uint32 length = 1;
inline bool PathData::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PathData::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PathData::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PathData::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 PathData::length() const {
  return length_;
}
inline void PathData::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
}

// required bytes path = 2;
inline bool PathData::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PathData::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PathData::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PathData::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& PathData::path() const {
  return *path_;
}
inline void PathData::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void PathData::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void PathData::set_path(const void* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PathData::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* PathData::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PathData::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ExecutionPathSet_ExecutionPath

// optional uint32 parent = 3;
inline bool ExecutionPathSet_ExecutionPath::has_parent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecutionPathSet_ExecutionPath::set_has_parent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecutionPathSet_ExecutionPath::clear_has_parent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecutionPathSet_ExecutionPath::clear_parent() {
  parent_ = 0u;
  clear_has_parent();
}
inline ::google::protobuf::uint32 ExecutionPathSet_ExecutionPath::parent() const {
  return parent_;
}
inline void ExecutionPathSet_ExecutionPath::set_parent(::google::protobuf::uint32 value) {
  set_has_parent();
  parent_ = value;
}

// optional uint32 parent_pos = 4;
inline bool ExecutionPathSet_ExecutionPath::has_parent_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecutionPathSet_ExecutionPath::set_has_parent_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecutionPathSet_ExecutionPath::clear_has_parent_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecutionPathSet_ExecutionPath::clear_parent_pos() {
  parent_pos_ = 0u;
  clear_has_parent_pos();
}
inline ::google::protobuf::uint32 ExecutionPathSet_ExecutionPath::parent_pos() const {
  return parent_pos_;
}
inline void ExecutionPathSet_ExecutionPath::set_parent_pos(::google::protobuf::uint32 value) {
  set_has_parent_pos();
  parent_pos_ = value;
}

// required .cloud9.data.PathData data = 2;
inline bool ExecutionPathSet_ExecutionPath::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExecutionPathSet_ExecutionPath::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExecutionPathSet_ExecutionPath::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExecutionPathSet_ExecutionPath::clear_data() {
  if (data_ != NULL) data_->::cloud9::data::PathData::Clear();
  clear_has_data();
}
inline const ::cloud9::data::PathData& ExecutionPathSet_ExecutionPath::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::cloud9::data::PathData* ExecutionPathSet_ExecutionPath::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::cloud9::data::PathData;
  return data_;
}
inline ::cloud9::data::PathData* ExecutionPathSet_ExecutionPath::release_data() {
  clear_has_data();
  ::cloud9::data::PathData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ExecutionPathSet_ExecutionPath::set_allocated_data(::cloud9::data::PathData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// ExecutionPathSet

// repeated .cloud9.data.ExecutionPathSet.ExecutionPath path = 1;
inline int ExecutionPathSet::path_size() const {
  return path_.size();
}
inline void ExecutionPathSet::clear_path() {
  path_.Clear();
}
inline const ::cloud9::data::ExecutionPathSet_ExecutionPath& ExecutionPathSet::path(int index) const {
  return path_.Get(index);
}
inline ::cloud9::data::ExecutionPathSet_ExecutionPath* ExecutionPathSet::mutable_path(int index) {
  return path_.Mutable(index);
}
inline ::cloud9::data::ExecutionPathSet_ExecutionPath* ExecutionPathSet::add_path() {
  return path_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::ExecutionPathSet_ExecutionPath >&
ExecutionPathSet::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::ExecutionPathSet_ExecutionPath >*
ExecutionPathSet::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// StatisticData

// required uint32 id = 1;
inline bool StatisticData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 StatisticData::id() const {
  return id_;
}
inline void StatisticData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint64 value = 2;
inline bool StatisticData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatisticData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatisticData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatisticData::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 StatisticData::value() const {
  return value_;
}
inline void StatisticData::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// StatisticUpdate

// required string name = 1;
inline bool StatisticUpdate::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatisticUpdate::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatisticUpdate::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatisticUpdate::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& StatisticUpdate::name() const {
  return *name_;
}
inline void StatisticUpdate::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StatisticUpdate::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StatisticUpdate::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StatisticUpdate::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* StatisticUpdate::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StatisticUpdate::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .cloud9.data.StatisticData data = 2;
inline int StatisticUpdate::data_size() const {
  return data_.size();
}
inline void StatisticUpdate::clear_data() {
  data_.Clear();
}
inline const ::cloud9::data::StatisticData& StatisticUpdate::data(int index) const {
  return data_.Get(index);
}
inline ::cloud9::data::StatisticData* StatisticUpdate::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::cloud9::data::StatisticData* StatisticUpdate::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticData >&
StatisticUpdate::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticData >*
StatisticUpdate::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// PartitionData

// required uint32 partition = 1;
inline bool PartitionData::has_partition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PartitionData::set_has_partition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PartitionData::clear_has_partition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PartitionData::clear_partition() {
  partition_ = 0u;
  clear_has_partition();
}
inline ::google::protobuf::uint32 PartitionData::partition() const {
  return partition_;
}
inline void PartitionData::set_partition(::google::protobuf::uint32 value) {
  set_has_partition();
  partition_ = value;
}

// required uint32 total = 2;
inline bool PartitionData::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PartitionData::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PartitionData::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PartitionData::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 PartitionData::total() const {
  return total_;
}
inline void PartitionData::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
}

// required uint32 active = 3;
inline bool PartitionData::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PartitionData::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PartitionData::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PartitionData::clear_active() {
  active_ = 0u;
  clear_has_active();
}
inline ::google::protobuf::uint32 PartitionData::active() const {
  return active_;
}
inline void PartitionData::set_active(::google::protobuf::uint32 value) {
  set_has_active();
  active_ = value;
}

// -------------------------------------------------------------------

// WorkerReportMessage_Registration

// required string address = 1;
inline bool WorkerReportMessage_Registration::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerReportMessage_Registration::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerReportMessage_Registration::clear_address() {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& WorkerReportMessage_Registration::address() const {
  return *address_;
}
inline void WorkerReportMessage_Registration::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void WorkerReportMessage_Registration::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void WorkerReportMessage_Registration::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorkerReportMessage_Registration::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  return address_;
}
inline ::std::string* WorkerReportMessage_Registration::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorkerReportMessage_Registration::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 port = 2;
inline bool WorkerReportMessage_Registration::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkerReportMessage_Registration::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkerReportMessage_Registration::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 WorkerReportMessage_Registration::port() const {
  return port_;
}
inline void WorkerReportMessage_Registration::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// required bool wants_updates = 5;
inline bool WorkerReportMessage_Registration::has_wants_updates() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_wants_updates() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkerReportMessage_Registration::clear_has_wants_updates() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkerReportMessage_Registration::clear_wants_updates() {
  wants_updates_ = false;
  clear_has_wants_updates();
}
inline bool WorkerReportMessage_Registration::wants_updates() const {
  return wants_updates_;
}
inline void WorkerReportMessage_Registration::set_wants_updates(bool value) {
  set_has_wants_updates();
  wants_updates_ = value;
}

// required bool has_partitions = 7;
inline bool WorkerReportMessage_Registration::has_has_partitions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_has_partitions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkerReportMessage_Registration::clear_has_has_partitions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkerReportMessage_Registration::clear_has_partitions() {
  has_partitions_ = false;
  clear_has_has_partitions();
}
inline bool WorkerReportMessage_Registration::has_partitions() const {
  return has_partitions_;
}
inline void WorkerReportMessage_Registration::set_has_partitions(bool value) {
  set_has_has_partitions();
  has_partitions_ = value;
}

// required string prog_name = 3;
inline bool WorkerReportMessage_Registration::has_prog_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_prog_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkerReportMessage_Registration::clear_has_prog_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkerReportMessage_Registration::clear_prog_name() {
  if (prog_name_ != &::google::protobuf::internal::kEmptyString) {
    prog_name_->clear();
  }
  clear_has_prog_name();
}
inline const ::std::string& WorkerReportMessage_Registration::prog_name() const {
  return *prog_name_;
}
inline void WorkerReportMessage_Registration::set_prog_name(const ::std::string& value) {
  set_has_prog_name();
  if (prog_name_ == &::google::protobuf::internal::kEmptyString) {
    prog_name_ = new ::std::string;
  }
  prog_name_->assign(value);
}
inline void WorkerReportMessage_Registration::set_prog_name(const char* value) {
  set_has_prog_name();
  if (prog_name_ == &::google::protobuf::internal::kEmptyString) {
    prog_name_ = new ::std::string;
  }
  prog_name_->assign(value);
}
inline void WorkerReportMessage_Registration::set_prog_name(const char* value, size_t size) {
  set_has_prog_name();
  if (prog_name_ == &::google::protobuf::internal::kEmptyString) {
    prog_name_ = new ::std::string;
  }
  prog_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorkerReportMessage_Registration::mutable_prog_name() {
  set_has_prog_name();
  if (prog_name_ == &::google::protobuf::internal::kEmptyString) {
    prog_name_ = new ::std::string;
  }
  return prog_name_;
}
inline ::std::string* WorkerReportMessage_Registration::release_prog_name() {
  clear_has_prog_name();
  if (prog_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = prog_name_;
    prog_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorkerReportMessage_Registration::set_allocated_prog_name(::std::string* prog_name) {
  if (prog_name_ != &::google::protobuf::internal::kEmptyString) {
    delete prog_name_;
  }
  if (prog_name) {
    set_has_prog_name();
    prog_name_ = prog_name;
  } else {
    clear_has_prog_name();
    prog_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prog_crc = 6;
inline bool WorkerReportMessage_Registration::has_prog_crc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_prog_crc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorkerReportMessage_Registration::clear_has_prog_crc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorkerReportMessage_Registration::clear_prog_crc() {
  prog_crc_ = 0u;
  clear_has_prog_crc();
}
inline ::google::protobuf::uint32 WorkerReportMessage_Registration::prog_crc() const {
  return prog_crc_;
}
inline void WorkerReportMessage_Registration::set_prog_crc(::google::protobuf::uint32 value) {
  set_has_prog_crc();
  prog_crc_ = value;
}

// required uint32 stat_id_count = 4;
inline bool WorkerReportMessage_Registration::has_stat_id_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorkerReportMessage_Registration::set_has_stat_id_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorkerReportMessage_Registration::clear_has_stat_id_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorkerReportMessage_Registration::clear_stat_id_count() {
  stat_id_count_ = 0u;
  clear_has_stat_id_count();
}
inline ::google::protobuf::uint32 WorkerReportMessage_Registration::stat_id_count() const {
  return stat_id_count_;
}
inline void WorkerReportMessage_Registration::set_stat_id_count(::google::protobuf::uint32 value) {
  set_has_stat_id_count();
  stat_id_count_ = value;
}

// -------------------------------------------------------------------

// WorkerReportMessage_NodeSetUpdate

// required .cloud9.data.ExecutionPathSet pathSet = 1;
inline bool WorkerReportMessage_NodeSetUpdate::has_pathset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerReportMessage_NodeSetUpdate::set_has_pathset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerReportMessage_NodeSetUpdate::clear_has_pathset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerReportMessage_NodeSetUpdate::clear_pathset() {
  if (pathset_ != NULL) pathset_->::cloud9::data::ExecutionPathSet::Clear();
  clear_has_pathset();
}
inline const ::cloud9::data::ExecutionPathSet& WorkerReportMessage_NodeSetUpdate::pathset() const {
  return pathset_ != NULL ? *pathset_ : *default_instance_->pathset_;
}
inline ::cloud9::data::ExecutionPathSet* WorkerReportMessage_NodeSetUpdate::mutable_pathset() {
  set_has_pathset();
  if (pathset_ == NULL) pathset_ = new ::cloud9::data::ExecutionPathSet;
  return pathset_;
}
inline ::cloud9::data::ExecutionPathSet* WorkerReportMessage_NodeSetUpdate::release_pathset() {
  clear_has_pathset();
  ::cloud9::data::ExecutionPathSet* temp = pathset_;
  pathset_ = NULL;
  return temp;
}
inline void WorkerReportMessage_NodeSetUpdate::set_allocated_pathset(::cloud9::data::ExecutionPathSet* pathset) {
  delete pathset_;
  pathset_ = pathset;
  if (pathset) {
    set_has_pathset();
  } else {
    clear_has_pathset();
  }
}

// -------------------------------------------------------------------

// WorkerReportMessage_NodeDataUpdate

// repeated uint32 data = 1;
inline int WorkerReportMessage_NodeDataUpdate::data_size() const {
  return data_.size();
}
inline void WorkerReportMessage_NodeDataUpdate::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::uint32 WorkerReportMessage_NodeDataUpdate::data(int index) const {
  return data_.Get(index);
}
inline void WorkerReportMessage_NodeDataUpdate::set_data(int index, ::google::protobuf::uint32 value) {
  data_.Set(index, value);
}
inline void WorkerReportMessage_NodeDataUpdate::add_data(::google::protobuf::uint32 value) {
  data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorkerReportMessage_NodeDataUpdate::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorkerReportMessage_NodeDataUpdate::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// WorkerReportMessage_TargetUpdate

// required string targetName = 1;
inline bool WorkerReportMessage_TargetUpdate::has_targetname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerReportMessage_TargetUpdate::set_has_targetname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerReportMessage_TargetUpdate::clear_has_targetname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerReportMessage_TargetUpdate::clear_targetname() {
  if (targetname_ != &::google::protobuf::internal::kEmptyString) {
    targetname_->clear();
  }
  clear_has_targetname();
}
inline const ::std::string& WorkerReportMessage_TargetUpdate::targetname() const {
  return *targetname_;
}
inline void WorkerReportMessage_TargetUpdate::set_targetname(const ::std::string& value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::kEmptyString) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void WorkerReportMessage_TargetUpdate::set_targetname(const char* value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::kEmptyString) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
}
inline void WorkerReportMessage_TargetUpdate::set_targetname(const char* value, size_t size) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::kEmptyString) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorkerReportMessage_TargetUpdate::mutable_targetname() {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::kEmptyString) {
    targetname_ = new ::std::string;
  }
  return targetname_;
}
inline ::std::string* WorkerReportMessage_TargetUpdate::release_targetname() {
  clear_has_targetname();
  if (targetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = targetname_;
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorkerReportMessage_TargetUpdate::set_allocated_targetname(::std::string* targetname) {
  if (targetname_ != &::google::protobuf::internal::kEmptyString) {
    delete targetname_;
  }
  if (targetname) {
    set_has_targetname();
    targetname_ = targetname;
  } else {
    clear_has_targetname();
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 value = 2;
inline bool WorkerReportMessage_TargetUpdate::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkerReportMessage_TargetUpdate::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkerReportMessage_TargetUpdate::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkerReportMessage_TargetUpdate::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 WorkerReportMessage_TargetUpdate::value() const {
  return value_;
}
inline void WorkerReportMessage_TargetUpdate::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// WorkerReportMessage

// required uint32 id = 1;
inline bool WorkerReportMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkerReportMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkerReportMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkerReportMessage::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WorkerReportMessage::id() const {
  return id_;
}
inline void WorkerReportMessage::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .cloud9.data.WorkerReportMessage.NodeSetUpdate nodeSetUpdate = 2;
inline bool WorkerReportMessage::has_nodesetupdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkerReportMessage::set_has_nodesetupdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkerReportMessage::clear_has_nodesetupdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkerReportMessage::clear_nodesetupdate() {
  if (nodesetupdate_ != NULL) nodesetupdate_->::cloud9::data::WorkerReportMessage_NodeSetUpdate::Clear();
  clear_has_nodesetupdate();
}
inline const ::cloud9::data::WorkerReportMessage_NodeSetUpdate& WorkerReportMessage::nodesetupdate() const {
  return nodesetupdate_ != NULL ? *nodesetupdate_ : *default_instance_->nodesetupdate_;
}
inline ::cloud9::data::WorkerReportMessage_NodeSetUpdate* WorkerReportMessage::mutable_nodesetupdate() {
  set_has_nodesetupdate();
  if (nodesetupdate_ == NULL) nodesetupdate_ = new ::cloud9::data::WorkerReportMessage_NodeSetUpdate;
  return nodesetupdate_;
}
inline ::cloud9::data::WorkerReportMessage_NodeSetUpdate* WorkerReportMessage::release_nodesetupdate() {
  clear_has_nodesetupdate();
  ::cloud9::data::WorkerReportMessage_NodeSetUpdate* temp = nodesetupdate_;
  nodesetupdate_ = NULL;
  return temp;
}
inline void WorkerReportMessage::set_allocated_nodesetupdate(::cloud9::data::WorkerReportMessage_NodeSetUpdate* nodesetupdate) {
  delete nodesetupdate_;
  nodesetupdate_ = nodesetupdate;
  if (nodesetupdate) {
    set_has_nodesetupdate();
  } else {
    clear_has_nodesetupdate();
  }
}

// optional .cloud9.data.WorkerReportMessage.NodeDataUpdate nodeDataUpdate = 3;
inline bool WorkerReportMessage::has_nodedataupdate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorkerReportMessage::set_has_nodedataupdate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorkerReportMessage::clear_has_nodedataupdate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorkerReportMessage::clear_nodedataupdate() {
  if (nodedataupdate_ != NULL) nodedataupdate_->::cloud9::data::WorkerReportMessage_NodeDataUpdate::Clear();
  clear_has_nodedataupdate();
}
inline const ::cloud9::data::WorkerReportMessage_NodeDataUpdate& WorkerReportMessage::nodedataupdate() const {
  return nodedataupdate_ != NULL ? *nodedataupdate_ : *default_instance_->nodedataupdate_;
}
inline ::cloud9::data::WorkerReportMessage_NodeDataUpdate* WorkerReportMessage::mutable_nodedataupdate() {
  set_has_nodedataupdate();
  if (nodedataupdate_ == NULL) nodedataupdate_ = new ::cloud9::data::WorkerReportMessage_NodeDataUpdate;
  return nodedataupdate_;
}
inline ::cloud9::data::WorkerReportMessage_NodeDataUpdate* WorkerReportMessage::release_nodedataupdate() {
  clear_has_nodedataupdate();
  ::cloud9::data::WorkerReportMessage_NodeDataUpdate* temp = nodedataupdate_;
  nodedataupdate_ = NULL;
  return temp;
}
inline void WorkerReportMessage::set_allocated_nodedataupdate(::cloud9::data::WorkerReportMessage_NodeDataUpdate* nodedataupdate) {
  delete nodedataupdate_;
  nodedataupdate_ = nodedataupdate;
  if (nodedataupdate) {
    set_has_nodedataupdate();
  } else {
    clear_has_nodedataupdate();
  }
}

// optional .cloud9.data.WorkerReportMessage.Registration registration = 4;
inline bool WorkerReportMessage::has_registration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkerReportMessage::set_has_registration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkerReportMessage::clear_has_registration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkerReportMessage::clear_registration() {
  if (registration_ != NULL) registration_->::cloud9::data::WorkerReportMessage_Registration::Clear();
  clear_has_registration();
}
inline const ::cloud9::data::WorkerReportMessage_Registration& WorkerReportMessage::registration() const {
  return registration_ != NULL ? *registration_ : *default_instance_->registration_;
}
inline ::cloud9::data::WorkerReportMessage_Registration* WorkerReportMessage::mutable_registration() {
  set_has_registration();
  if (registration_ == NULL) registration_ = new ::cloud9::data::WorkerReportMessage_Registration;
  return registration_;
}
inline ::cloud9::data::WorkerReportMessage_Registration* WorkerReportMessage::release_registration() {
  clear_has_registration();
  ::cloud9::data::WorkerReportMessage_Registration* temp = registration_;
  registration_ = NULL;
  return temp;
}
inline void WorkerReportMessage::set_allocated_registration(::cloud9::data::WorkerReportMessage_Registration* registration) {
  delete registration_;
  registration_ = registration;
  if (registration) {
    set_has_registration();
  } else {
    clear_has_registration();
  }
}

// repeated .cloud9.data.StatisticUpdate localUpdates = 5;
inline int WorkerReportMessage::localupdates_size() const {
  return localupdates_.size();
}
inline void WorkerReportMessage::clear_localupdates() {
  localupdates_.Clear();
}
inline const ::cloud9::data::StatisticUpdate& WorkerReportMessage::localupdates(int index) const {
  return localupdates_.Get(index);
}
inline ::cloud9::data::StatisticUpdate* WorkerReportMessage::mutable_localupdates(int index) {
  return localupdates_.Mutable(index);
}
inline ::cloud9::data::StatisticUpdate* WorkerReportMessage::add_localupdates() {
  return localupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >&
WorkerReportMessage::localupdates() const {
  return localupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >*
WorkerReportMessage::mutable_localupdates() {
  return &localupdates_;
}

// repeated .cloud9.data.WorkerReportMessage.TargetUpdate targetUpdates = 6;
inline int WorkerReportMessage::targetupdates_size() const {
  return targetupdates_.size();
}
inline void WorkerReportMessage::clear_targetupdates() {
  targetupdates_.Clear();
}
inline const ::cloud9::data::WorkerReportMessage_TargetUpdate& WorkerReportMessage::targetupdates(int index) const {
  return targetupdates_.Get(index);
}
inline ::cloud9::data::WorkerReportMessage_TargetUpdate* WorkerReportMessage::mutable_targetupdates(int index) {
  return targetupdates_.Mutable(index);
}
inline ::cloud9::data::WorkerReportMessage_TargetUpdate* WorkerReportMessage::add_targetupdates() {
  return targetupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::WorkerReportMessage_TargetUpdate >&
WorkerReportMessage::targetupdates() const {
  return targetupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::WorkerReportMessage_TargetUpdate >*
WorkerReportMessage::mutable_targetupdates() {
  return &targetupdates_;
}

// repeated .cloud9.data.PartitionData partitionUpdates = 7;
inline int WorkerReportMessage::partitionupdates_size() const {
  return partitionupdates_.size();
}
inline void WorkerReportMessage::clear_partitionupdates() {
  partitionupdates_.Clear();
}
inline const ::cloud9::data::PartitionData& WorkerReportMessage::partitionupdates(int index) const {
  return partitionupdates_.Get(index);
}
inline ::cloud9::data::PartitionData* WorkerReportMessage::mutable_partitionupdates(int index) {
  return partitionupdates_.Mutable(index);
}
inline ::cloud9::data::PartitionData* WorkerReportMessage::add_partitionupdates() {
  return partitionupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >&
WorkerReportMessage::partitionupdates() const {
  return partitionupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >*
WorkerReportMessage::mutable_partitionupdates() {
  return &partitionupdates_;
}

// -------------------------------------------------------------------

// LBResponseMessage_JobTransfer

// required string dest_address = 2;
inline bool LBResponseMessage_JobTransfer::has_dest_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBResponseMessage_JobTransfer::set_has_dest_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBResponseMessage_JobTransfer::clear_has_dest_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBResponseMessage_JobTransfer::clear_dest_address() {
  if (dest_address_ != &::google::protobuf::internal::kEmptyString) {
    dest_address_->clear();
  }
  clear_has_dest_address();
}
inline const ::std::string& LBResponseMessage_JobTransfer::dest_address() const {
  return *dest_address_;
}
inline void LBResponseMessage_JobTransfer::set_dest_address(const ::std::string& value) {
  set_has_dest_address();
  if (dest_address_ == &::google::protobuf::internal::kEmptyString) {
    dest_address_ = new ::std::string;
  }
  dest_address_->assign(value);
}
inline void LBResponseMessage_JobTransfer::set_dest_address(const char* value) {
  set_has_dest_address();
  if (dest_address_ == &::google::protobuf::internal::kEmptyString) {
    dest_address_ = new ::std::string;
  }
  dest_address_->assign(value);
}
inline void LBResponseMessage_JobTransfer::set_dest_address(const char* value, size_t size) {
  set_has_dest_address();
  if (dest_address_ == &::google::protobuf::internal::kEmptyString) {
    dest_address_ = new ::std::string;
  }
  dest_address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LBResponseMessage_JobTransfer::mutable_dest_address() {
  set_has_dest_address();
  if (dest_address_ == &::google::protobuf::internal::kEmptyString) {
    dest_address_ = new ::std::string;
  }
  return dest_address_;
}
inline ::std::string* LBResponseMessage_JobTransfer::release_dest_address() {
  clear_has_dest_address();
  if (dest_address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dest_address_;
    dest_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LBResponseMessage_JobTransfer::set_allocated_dest_address(::std::string* dest_address) {
  if (dest_address_ != &::google::protobuf::internal::kEmptyString) {
    delete dest_address_;
  }
  if (dest_address) {
    set_has_dest_address();
    dest_address_ = dest_address;
  } else {
    clear_has_dest_address();
    dest_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 dest_port = 3;
inline bool LBResponseMessage_JobTransfer::has_dest_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LBResponseMessage_JobTransfer::set_has_dest_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LBResponseMessage_JobTransfer::clear_has_dest_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LBResponseMessage_JobTransfer::clear_dest_port() {
  dest_port_ = 0u;
  clear_has_dest_port();
}
inline ::google::protobuf::uint32 LBResponseMessage_JobTransfer::dest_port() const {
  return dest_port_;
}
inline void LBResponseMessage_JobTransfer::set_dest_port(::google::protobuf::uint32 value) {
  set_has_dest_port();
  dest_port_ = value;
}

// required uint32 count = 5;
inline bool LBResponseMessage_JobTransfer::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LBResponseMessage_JobTransfer::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LBResponseMessage_JobTransfer::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LBResponseMessage_JobTransfer::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 LBResponseMessage_JobTransfer::count() const {
  return count_;
}
inline void LBResponseMessage_JobTransfer::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// repeated .cloud9.data.PartitionData partitions = 6;
inline int LBResponseMessage_JobTransfer::partitions_size() const {
  return partitions_.size();
}
inline void LBResponseMessage_JobTransfer::clear_partitions() {
  partitions_.Clear();
}
inline const ::cloud9::data::PartitionData& LBResponseMessage_JobTransfer::partitions(int index) const {
  return partitions_.Get(index);
}
inline ::cloud9::data::PartitionData* LBResponseMessage_JobTransfer::mutable_partitions(int index) {
  return partitions_.Mutable(index);
}
inline ::cloud9::data::PartitionData* LBResponseMessage_JobTransfer::add_partitions() {
  return partitions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >&
LBResponseMessage_JobTransfer::partitions() const {
  return partitions_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::PartitionData >*
LBResponseMessage_JobTransfer::mutable_partitions() {
  return &partitions_;
}

// -------------------------------------------------------------------

// LBResponseMessage_JobSeed

// required .cloud9.data.ExecutionPathSet path_set = 1;
inline bool LBResponseMessage_JobSeed::has_path_set() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBResponseMessage_JobSeed::set_has_path_set() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBResponseMessage_JobSeed::clear_has_path_set() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBResponseMessage_JobSeed::clear_path_set() {
  if (path_set_ != NULL) path_set_->::cloud9::data::ExecutionPathSet::Clear();
  clear_has_path_set();
}
inline const ::cloud9::data::ExecutionPathSet& LBResponseMessage_JobSeed::path_set() const {
  return path_set_ != NULL ? *path_set_ : *default_instance_->path_set_;
}
inline ::cloud9::data::ExecutionPathSet* LBResponseMessage_JobSeed::mutable_path_set() {
  set_has_path_set();
  if (path_set_ == NULL) path_set_ = new ::cloud9::data::ExecutionPathSet;
  return path_set_;
}
inline ::cloud9::data::ExecutionPathSet* LBResponseMessage_JobSeed::release_path_set() {
  clear_has_path_set();
  ::cloud9::data::ExecutionPathSet* temp = path_set_;
  path_set_ = NULL;
  return temp;
}
inline void LBResponseMessage_JobSeed::set_allocated_path_set(::cloud9::data::ExecutionPathSet* path_set) {
  delete path_set_;
  path_set_ = path_set;
  if (path_set) {
    set_has_path_set();
  } else {
    clear_has_path_set();
  }
}

// -------------------------------------------------------------------

// LBResponseMessage

// required uint32 id = 1;
inline bool LBResponseMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBResponseMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBResponseMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBResponseMessage::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 LBResponseMessage::id() const {
  return id_;
}
inline void LBResponseMessage::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated .cloud9.data.LBResponseMessage.JobTransfer jobTransfer = 2;
inline int LBResponseMessage::jobtransfer_size() const {
  return jobtransfer_.size();
}
inline void LBResponseMessage::clear_jobtransfer() {
  jobtransfer_.Clear();
}
inline const ::cloud9::data::LBResponseMessage_JobTransfer& LBResponseMessage::jobtransfer(int index) const {
  return jobtransfer_.Get(index);
}
inline ::cloud9::data::LBResponseMessage_JobTransfer* LBResponseMessage::mutable_jobtransfer(int index) {
  return jobtransfer_.Mutable(index);
}
inline ::cloud9::data::LBResponseMessage_JobTransfer* LBResponseMessage::add_jobtransfer() {
  return jobtransfer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::LBResponseMessage_JobTransfer >&
LBResponseMessage::jobtransfer() const {
  return jobtransfer_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::LBResponseMessage_JobTransfer >*
LBResponseMessage::mutable_jobtransfer() {
  return &jobtransfer_;
}

// optional .cloud9.data.LBResponseMessage.JobSeed jobSeed = 3;
inline bool LBResponseMessage::has_jobseed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LBResponseMessage::set_has_jobseed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LBResponseMessage::clear_has_jobseed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LBResponseMessage::clear_jobseed() {
  if (jobseed_ != NULL) jobseed_->::cloud9::data::LBResponseMessage_JobSeed::Clear();
  clear_has_jobseed();
}
inline const ::cloud9::data::LBResponseMessage_JobSeed& LBResponseMessage::jobseed() const {
  return jobseed_ != NULL ? *jobseed_ : *default_instance_->jobseed_;
}
inline ::cloud9::data::LBResponseMessage_JobSeed* LBResponseMessage::mutable_jobseed() {
  set_has_jobseed();
  if (jobseed_ == NULL) jobseed_ = new ::cloud9::data::LBResponseMessage_JobSeed;
  return jobseed_;
}
inline ::cloud9::data::LBResponseMessage_JobSeed* LBResponseMessage::release_jobseed() {
  clear_has_jobseed();
  ::cloud9::data::LBResponseMessage_JobSeed* temp = jobseed_;
  jobseed_ = NULL;
  return temp;
}
inline void LBResponseMessage::set_allocated_jobseed(::cloud9::data::LBResponseMessage_JobSeed* jobseed) {
  delete jobseed_;
  jobseed_ = jobseed;
  if (jobseed) {
    set_has_jobseed();
  } else {
    clear_has_jobseed();
  }
}

// required bool more_details = 4;
inline bool LBResponseMessage::has_more_details() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LBResponseMessage::set_has_more_details() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LBResponseMessage::clear_has_more_details() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LBResponseMessage::clear_more_details() {
  more_details_ = false;
  clear_has_more_details();
}
inline bool LBResponseMessage::more_details() const {
  return more_details_;
}
inline void LBResponseMessage::set_more_details(bool value) {
  set_has_more_details();
  more_details_ = value;
}

// required bool terminate = 7;
inline bool LBResponseMessage::has_terminate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LBResponseMessage::set_has_terminate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LBResponseMessage::clear_has_terminate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LBResponseMessage::clear_terminate() {
  terminate_ = false;
  clear_has_terminate();
}
inline bool LBResponseMessage::terminate() const {
  return terminate_;
}
inline void LBResponseMessage::set_terminate(bool value) {
  set_has_terminate();
  terminate_ = value;
}

// repeated .cloud9.data.StatisticUpdate globalUpdates = 5;
inline int LBResponseMessage::globalupdates_size() const {
  return globalupdates_.size();
}
inline void LBResponseMessage::clear_globalupdates() {
  globalupdates_.Clear();
}
inline const ::cloud9::data::StatisticUpdate& LBResponseMessage::globalupdates(int index) const {
  return globalupdates_.Get(index);
}
inline ::cloud9::data::StatisticUpdate* LBResponseMessage::mutable_globalupdates(int index) {
  return globalupdates_.Mutable(index);
}
inline ::cloud9::data::StatisticUpdate* LBResponseMessage::add_globalupdates() {
  return globalupdates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >&
LBResponseMessage::globalupdates() const {
  return globalupdates_;
}
inline ::google::protobuf::RepeatedPtrField< ::cloud9::data::StatisticUpdate >*
LBResponseMessage::mutable_globalupdates() {
  return &globalupdates_;
}

// repeated string targets = 6;
inline int LBResponseMessage::targets_size() const {
  return targets_.size();
}
inline void LBResponseMessage::clear_targets() {
  targets_.Clear();
}
inline const ::std::string& LBResponseMessage::targets(int index) const {
  return targets_.Get(index);
}
inline ::std::string* LBResponseMessage::mutable_targets(int index) {
  return targets_.Mutable(index);
}
inline void LBResponseMessage::set_targets(int index, const ::std::string& value) {
  targets_.Mutable(index)->assign(value);
}
inline void LBResponseMessage::set_targets(int index, const char* value) {
  targets_.Mutable(index)->assign(value);
}
inline void LBResponseMessage::set_targets(int index, const char* value, size_t size) {
  targets_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LBResponseMessage::add_targets() {
  return targets_.Add();
}
inline void LBResponseMessage::add_targets(const ::std::string& value) {
  targets_.Add()->assign(value);
}
inline void LBResponseMessage::add_targets(const char* value) {
  targets_.Add()->assign(value);
}
inline void LBResponseMessage::add_targets(const char* value, size_t size) {
  targets_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LBResponseMessage::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LBResponseMessage::mutable_targets() {
  return &targets_;
}

// -------------------------------------------------------------------

// PeerTransferMessage

// required .cloud9.data.ExecutionPathSet path_set = 1;
inline bool PeerTransferMessage::has_path_set() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PeerTransferMessage::set_has_path_set() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PeerTransferMessage::clear_has_path_set() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PeerTransferMessage::clear_path_set() {
  if (path_set_ != NULL) path_set_->::cloud9::data::ExecutionPathSet::Clear();
  clear_has_path_set();
}
inline const ::cloud9::data::ExecutionPathSet& PeerTransferMessage::path_set() const {
  return path_set_ != NULL ? *path_set_ : *default_instance_->path_set_;
}
inline ::cloud9::data::ExecutionPathSet* PeerTransferMessage::mutable_path_set() {
  set_has_path_set();
  if (path_set_ == NULL) path_set_ = new ::cloud9::data::ExecutionPathSet;
  return path_set_;
}
inline ::cloud9::data::ExecutionPathSet* PeerTransferMessage::release_path_set() {
  clear_has_path_set();
  ::cloud9::data::ExecutionPathSet* temp = path_set_;
  path_set_ = NULL;
  return temp;
}
inline void PeerTransferMessage::set_allocated_path_set(::cloud9::data::ExecutionPathSet* path_set) {
  delete path_set_;
  path_set_ = path_set;
  if (path_set) {
    set_has_path_set();
  } else {
    clear_has_path_set();
  }
}

// repeated uint64 instr_since_fork = 2;
inline int PeerTransferMessage::instr_since_fork_size() const {
  return instr_since_fork_.size();
}
inline void PeerTransferMessage::clear_instr_since_fork() {
  instr_since_fork_.Clear();
}
inline ::google::protobuf::uint64 PeerTransferMessage::instr_since_fork(int index) const {
  return instr_since_fork_.Get(index);
}
inline void PeerTransferMessage::set_instr_since_fork(int index, ::google::protobuf::uint64 value) {
  instr_since_fork_.Set(index, value);
}
inline void PeerTransferMessage::add_instr_since_fork(::google::protobuf::uint64 value) {
  instr_since_fork_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PeerTransferMessage::instr_since_fork() const {
  return instr_since_fork_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PeerTransferMessage::mutable_instr_since_fork() {
  return &instr_since_fork_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace cloud9

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Cloud9Data_2eproto__INCLUDED
