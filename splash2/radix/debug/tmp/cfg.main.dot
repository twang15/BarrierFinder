digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5652e20 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %i = alloca i32, align 4\l  %p = alloca i32, align 4\l  %quotient = alloca i32, align 4\l  %remainder = alloca i32, align 4\l  %sum_i = alloca i32, align 4\l  %sum_f = alloca i32, align 4\l  %mistake = alloca i32, align 4\l  %size = alloca i32, align 4\l  %temp = alloca i32**, align 8\l  %temp2 = alloca i32**, align 8\l  %a = alloca i32*, align 8\l  %c = alloca i32, align 4\l  %n1 = alloca i32, align 4\l  %mint = alloca double, align 8\l  %maxt = alloca double, align 8\l  %avgt = alloca double, align 8\l  %minrank = alloca double, align 8\l  %maxrank = alloca double, align 8\l  %avgrank = alloca double, align 8\l  %minsort = alloca double, align 8\l  %maxsort = alloca double, align 8\l  %avgsort = alloca double, align 8\l  %start = alloca i32, align 4\l  %done = alloca i32, align 4\l  %start_p = alloca i32, align 4\l  %end_p = alloca i32, align 4\l  %level = alloca i32, align 4\l  %index = alloca i32, align 4\l  %base = alloca i32, align 4\l  %offset = alloca i32, align 4\l  %toffset = alloca i32, align 4\l  %key0 = alloca i32*, align 8\l  %key1 = alloca i32*, align 8\l  %t = alloca i64, align 8\l  store i32 0, i32* %retval\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  store i32 0, i32* %mistake, align 4\l  store i32 0, i32* %done, align 4\l  %0 = load i32* @num_keys, align 4\l  %conv = sext i32 %0 to i64\l  %mul = mul i64 %conv, 4\l  %call = call i8* @malloc(i64 %mul)\l  %1 = bitcast i8* %call to i32*\l  store i32* %1, i32** getelementptr inbounds ([2 x i32*]* @key, i32 0, i64\l... 0), align 8\l  %2 = load i32* @num_keys, align 4\l  %conv1 = sext i32 %2 to i64\l  %mul2 = mul i64 %conv1, 4\l  %call3 = call i8* @malloc(i64 %mul2)\l  %3 = bitcast i8* %call3 to i32*\l  store i32* %3, i32** getelementptr inbounds ([2 x i32*]* @key, i32 0, i64\l... 1), align 8\l  %4 = load i32** getelementptr inbounds ([2 x i32*]* @key, i32 0, i64 0),\l... align 8\l  %cmp = icmp eq i32* %4, null\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5652e20:s0 -> Node0x5652ec0;
	Node0x5652e20:s1 -> Node0x5652e70;
	Node0x5652e70 [shape=record,label="{lor.lhs.false:                                    \l  %5 = load i32** getelementptr inbounds ([2 x i32*]* @key, i32 0, i64 1),\l... align 8\l  %cmp5 = icmp eq i32* %5, null\l  br i1 %cmp5, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5652e70:s0 -> Node0x5652ec0;
	Node0x5652e70:s1 -> Node0x5652f10;
	Node0x5652ec0 [shape=record,label="{if.then:                                          \l  %6 = load %struct._IO_FILE** @stderr, align 8\l  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) *@fprintf(%struct._IO_FILE*\l... %6, i8* getelementptr inbounds ([36 x i8]* @.str, i32 0, i32 0))\l  call void @exit(i32 -1)\l  unreachable\l}"];
	Node0x5652f10 [shape=record,label="{if.end:                                           \l  %call8 = call i8* @malloc(i64 4721824)\l  %7 = bitcast i8* %call8 to %struct.global_memory*\l  store %struct.global_memory* %7, %struct.global_memory** @global, align 8\l  %8 = load %struct.global_memory** @global, align 8\l  %barrier_key = getelementptr inbounds %struct.global_memory* %8, i32 0, i32 5\l  %gsense = getelementptr inbounds %struct.barrier_t* %barrier_key, i32 0, i32\l... 0\l  store volatile i32 1, i32* %gsense, align 4\l  %9 = load %struct.global_memory** @global, align 8\l  %barrier_key9 = getelementptr inbounds %struct.global_memory* %9, i32 0, i32\l... 5\l  %count = getelementptr inbounds %struct.barrier_t* %barrier_key9, i32 0, i32\l... 1\l  store volatile i64 0, i64* %count, align 8\l  store i32 1, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x5652f10 -> Node0x5652f60;
	Node0x5652f60 [shape=record,label="{for.cond:                                         \l  %10 = load i32* %i, align 4\l  %11 = load i32* @number_of_processors, align 4\l  %cmp10 = icmp slt i32 %10, %11\l  br i1 %cmp10, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5652f60:s0 -> Node0x5652fb0;
	Node0x5652f60:s1 -> Node0x5653050;
	Node0x5652fb0 [shape=record,label="{for.body:                                         \l  %call12 = call i32 @pthread_create(i64* %t, %union.pthread_attr_t* null, i8*\l... (i8*)* bitcast (void ()* @slave_sort to i8* (i8*)*), i8* null)\l  br label %for.inc\l}"];
	Node0x5652fb0 -> Node0x5653000;
	Node0x5653000 [shape=record,label="{for.inc:                                          \l  %12 = load i32* %i, align 4\l  %inc = add nsw i32 %12, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x5653000 -> Node0x5652f60;
	Node0x5653050 [shape=record,label="{for.end:                                          \l  call void @slave_sort()\l  %13 = load i32* %retval\l  ret i32 %13\l}"];
}
