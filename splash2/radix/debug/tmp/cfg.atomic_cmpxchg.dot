digraph "CFG for 'atomic_cmpxchg' function" {
	label="CFG for 'atomic_cmpxchg' function";

	Node0x5650ac0 [shape=record,label="{entry:\l  %oldcount.addr = alloca i32, align 4\l  %newcount.addr = alloca i32, align 4\l  %temp = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  store i32 %oldcount, i32* %oldcount.addr, align 4\l  store i32 %newcount, i32* %newcount.addr, align 4\l  %0 = load %struct.global_memory** @global, align 8\l  %barrier_key = getelementptr inbounds %struct.global_memory* %0, i32 0, i32 5\l  %count = getelementptr inbounds %struct.barrier_t* %barrier_key, i32 0, i32 1\l  %1 = load volatile i64* %count, align 8\l  %conv = trunc i64 %1 to i32\l  store i32 %conv, i32* %temp, align 4\l  %2 = load i32* %oldcount.addr, align 4\l  %3 = load i32* %temp, align 4\l  %cmp = icmp eq i32 %2, %3\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5650ac0:s0 -> Node0x5650b10;
	Node0x5650ac0:s1 -> Node0x5650b60;
	Node0x5650b10 [shape=record,label="{if.then:                                          \l  %4 = load i32* %newcount.addr, align 4\l  %conv2 = sext i32 %4 to i64\l  %5 = load %struct.global_memory** @global, align 8\l  %barrier_key3 = getelementptr inbounds %struct.global_memory* %5, i32 0, i32\l... 5\l  %count4 = getelementptr inbounds %struct.barrier_t* %barrier_key3, i32 0,\l... i32 1\l  store volatile i64 %conv2, i64* %count4, align 8\l  %6 = load i32* %oldcount.addr, align 4\l  store i32 %6, i32* %updatedcount, align 4\l  br label %if.end\l}"];
	Node0x5650b10 -> Node0x5650bb0;
	Node0x5650b60 [shape=record,label="{if.else:                                          \l  %7 = load %struct.global_memory** @global, align 8\l  %barrier_key5 = getelementptr inbounds %struct.global_memory* %7, i32 0, i32\l... 5\l  %count6 = getelementptr inbounds %struct.barrier_t* %barrier_key5, i32 0,\l... i32 1\l  %8 = load volatile i64* %count6, align 8\l  %conv7 = trunc i64 %8 to i32\l  store i32 %conv7, i32* %updatedcount, align 4\l  br label %if.end\l}"];
	Node0x5650b60 -> Node0x5650bb0;
	Node0x5650bb0 [shape=record,label="{if.end:                                           \l  %9 = load i32* %updatedcount, align 4\l  ret i32 %9\l}"];
}
