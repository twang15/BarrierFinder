digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x2b7e760 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i8**, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %ch = alloca i32, align 4\l  %MyNum = alloca i32, align 4\l  %mint = alloca double, align 8\l  %maxt = alloca double, align 8\l  %avgt = alloca double, align 8\l  %min_fac = alloca double, align 8\l  %min_solve = alloca double, align 8\l  %min_mod = alloca double, align 8\l  %min_bar = alloca double, align 8\l  %max_fac = alloca double, align 8\l  %max_solve = alloca double, align 8\l  %max_mod = alloca double, align 8\l  %max_bar = alloca double, align 8\l  %avg_fac = alloca double, align 8\l  %avg_solve = alloca double, align 8\l  %avg_mod = alloca double, align 8\l  %avg_bar = alloca double, align 8\l  %last_page = alloca i32, align 4\l  %proc_num = alloca i32, align 4\l  %edge = alloca i32, align 4\l  %size = alloca i32, align 4\l  %start = alloca i32, align 4\l  %t = alloca i64, align 8\l  store i32 %argc, i32* %2, align 4\l  store i8** %argv, i8*** %3, align 8\l  br label %4\l}"];
	Node0x2b7e760 -> Node0x2b7e7c0;
	Node0x2b7e7c0 [shape=record,label="{%4:\l\l  %5 = load i32* %2, align 4\l  %6 = load i8*** %3, align 8\l  %7 = call i32 (i32, i8**, i8*, ...)* bitcast (i32 (...)* @getopt to i32 (i32, i8**, i8*, ...)*)(i32 %5, i8** %6, i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0))\l  store i32 %7, i32* %ch, align 4\l  %8 = icmp ne i32 %7, -1\l  br i1 %8, label %9, label %26\l|{<s0>T|<s1>F}}"];
	Node0x2b7e7c0:s0 -> Node0x2b76d80;
	Node0x2b7e7c0:s1 -> Node0x2b7b680;
	Node0x2b76d80 [shape=record,label="{%9:\l\l  %10 = load i32* %ch, align 4\l  switch i32 %10, label %25 [\l    i32 110, label %11\l    i32 112, label %13\l    i32 98, label %15\l    i32 115, label %17\l    i32 116, label %18\l    i32 111, label %19\l    i32 104, label %24\l  ]\l|{<s0>def|<s1>110|<s2>112|<s3>98|<s4>115|<s5>116|<s6>111|<s7>104}}"];
	Node0x2b76d80:s0 -> Node0x2b7b620;
	Node0x2b76d80:s1 -> Node0x2b76de0;
	Node0x2b76d80:s2 -> Node0x2b76e40;
	Node0x2b76d80:s3 -> Node0x2b76ea0;
	Node0x2b76d80:s4 -> Node0x2b76f00;
	Node0x2b76d80:s5 -> Node0x2b76f60;
	Node0x2b76d80:s6 -> Node0x2b7b560;
	Node0x2b76d80:s7 -> Node0x2b7b5c0;
	Node0x2b76de0 [shape=record,label="{%11:\l\l  %12 = call i32 @atoi(i8* undef)\l  store i32 %12, i32* @n, align 4\l  br label %25\l}"];
	Node0x2b76de0 -> Node0x2b7b620;
	Node0x2b76e40 [shape=record,label="{%13:\l\l  %14 = call i32 @atoi(i8* undef)\l  store i32 %14, i32* @P, align 4\l  br label %25\l}"];
	Node0x2b76e40 -> Node0x2b7b620;
	Node0x2b76ea0 [shape=record,label="{%15:\l\l  %16 = call i32 @atoi(i8* undef)\l  store i32 %16, i32* @block_size, align 4\l  br label %25\l}"];
	Node0x2b76ea0 -> Node0x2b7b620;
	Node0x2b76f00 [shape=record,label="{%17:\l\l  br label %25\l}"];
	Node0x2b76f00 -> Node0x2b7b620;
	Node0x2b76f60 [shape=record,label="{%18:\l\l  br label %25\l}"];
	Node0x2b76f60 -> Node0x2b7b620;
	Node0x2b7b560 [shape=record,label="{%19:\l\l  %20 = load i32* @doprint, align 4\l  %21 = icmp ne i32 %20, 0\l  %22 = xor i1 %21, true\l  %23 = zext i1 %22 to i32\l  store i32 %23, i32* @doprint, align 4\l  br label %25\l}"];
	Node0x2b7b560 -> Node0x2b7b620;
	Node0x2b7b5c0 [shape=record,label="{%24:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b7b5c0 -> Node0x2b8bd30;
	Node0x2b7b620 [shape=record,label="{%25:\l\l  br label %4\l}"];
	Node0x2b7b620 -> Node0x2b7e7c0;
	Node0x2b7b680 [shape=record,label="{%26:\l\l  %27 = load i32* @P, align 4\l  %28 = sitofp i32 %27 to double\l  %29 = call double @sqrt(double %28)\l  %30 = fptosi double %29 to i32\l  store i32 %30, i32* @num_rows, align 4\l  br label %31\l}"];
	Node0x2b7b680 -> Node0x2b7b6e0;
	Node0x2b7b6e0 [shape=record,label="{%31:\l\l  %32 = load i32* @P, align 4\l  %33 = load i32* @num_rows, align 4\l  %34 = sdiv i32 %32, %33\l  store i32 %34, i32* @num_cols, align 4\l  %35 = load i32* @num_rows, align 4\l  %36 = load i32* @num_cols, align 4\l  %37 = mul nsw i32 %35, %36\l  %38 = load i32* @P, align 4\l  %39 = icmp eq i32 %37, %38\l  br i1 %39, label %40, label %41\l|{<s0>T|<s1>F}}"];
	Node0x2b7b6e0:s0 -> Node0x2b7b740;
	Node0x2b7b6e0:s1 -> Node0x2b7b7a0;
	Node0x2b7b740 [shape=record,label="{%40:\l\l  br label %44\l}"];
	Node0x2b7b740 -> Node0x2b7b800;
	Node0x2b7b7a0 [shape=record,label="{%41:\l\l  %42 = load i32* @num_rows, align 4\l  %43 = add nsw i32 %42, -1\l  store i32 %43, i32* @num_rows, align 4\l  br label %31\l}"];
	Node0x2b7b7a0 -> Node0x2b7b6e0;
	Node0x2b7b800 [shape=record,label="{%44:\l\l  %45 = load i32* @n, align 4\l  %46 = load i32* @block_size, align 4\l  %47 = sdiv i32 %45, %46\l  store i32 %47, i32* @nblocks, align 4\l  %48 = load i32* @block_size, align 4\l  %49 = load i32* @nblocks, align 4\l  %50 = mul nsw i32 %48, %49\l  %51 = load i32* @n, align 4\l  %52 = icmp ne i32 %50, %51\l  br i1 %52, label %53, label %56\l|{<s0>T|<s1>F}}"];
	Node0x2b7b800:s0 -> Node0x2b7b860;
	Node0x2b7b800:s1 -> Node0x2b7b8c0;
	Node0x2b7b860 [shape=record,label="{%53:\l\l  %54 = load i32* @nblocks, align 4\l  %55 = add nsw i32 %54, 1\l  store i32 %55, i32* @nblocks, align 4\l  br label %56\l}"];
	Node0x2b7b860 -> Node0x2b7b8c0;
	Node0x2b7b8c0 [shape=record,label="{%56:\l\l  %57 = load i32* @n, align 4\l  %58 = load i32* @block_size, align 4\l  %59 = srem i32 %57, %58\l  store i32 %59, i32* %edge, align 4\l  %60 = load i32* %edge, align 4\l  %61 = icmp eq i32 %60, 0\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x2b7b8c0:s0 -> Node0x2b89330;
	Node0x2b7b8c0:s1 -> Node0x2b89390;
	Node0x2b89330 [shape=record,label="{%62:\l\l  %63 = load i32* @block_size, align 4\l  store i32 %63, i32* %edge, align 4\l  br label %64\l}"];
	Node0x2b89330 -> Node0x2b89390;
	Node0x2b89390 [shape=record,label="{%64:\l\l  %65 = load i32* @P, align 4\l  %66 = sext i32 %65 to i64\l  %67 = mul i64 %66, 4\l  %68 = call noalias i8* @malloc(i64 %67)\l  %69 = bitcast i8* %68 to i32*\l  store i32* %69, i32** @proc_bytes, align 8\l  %70 = load i32* @P, align 4\l  %71 = sext i32 %70 to i64\l  %72 = mul i64 %71, 8\l  %73 = call noalias i8* @malloc(i64 %72)\l  %74 = bitcast i8* %73 to double**\l  store double** %74, double*** @last_malloc, align 8\l  store i32 0, i32* %i, align 4\l  br label %75\l}"];
	Node0x2b89390 -> Node0x2b893f0;
	Node0x2b893f0 [shape=record,label="{%75:\l\l  %76 = load i32* %i, align 4\l  %77 = load i32* @P, align 4\l  %78 = icmp slt i32 %76, %77\l  br i1 %78, label %79, label %87\l|{<s0>T|<s1>F}}"];
	Node0x2b893f0:s0 -> Node0x2b89450;
	Node0x2b893f0:s1 -> Node0x2b89510;
	Node0x2b89450 [shape=record,label="{%79:\l\l  %80 = load i32* %i, align 4\l  %81 = sext i32 %80 to i64\l  %82 = load i32** @proc_bytes, align 8\l  %83 = getelementptr inbounds i32* %82, i64 %81\l  store i32 0, i32* %83, align 4\l  br label %84\l}"];
	Node0x2b89450 -> Node0x2b894b0;
	Node0x2b894b0 [shape=record,label="{%84:\l\l  %85 = load i32* %i, align 4\l  %86 = add nsw i32 %85, 1\l  store i32 %86, i32* %i, align 4\l  br label %75\l}"];
	Node0x2b894b0 -> Node0x2b893f0;
	Node0x2b89510 [shape=record,label="{%87:\l\l  store i32 0, i32* %i, align 4\l  br label %88\l}"];
	Node0x2b89510 -> Node0x2b89570;
	Node0x2b89570 [shape=record,label="{%88:\l\l  %89 = load i32* %i, align 4\l  %90 = load i32* @nblocks, align 4\l  %91 = icmp slt i32 %89, %90\l  br i1 %91, label %92, label %152\l|{<s0>T|<s1>F}}"];
	Node0x2b89570:s0 -> Node0x2b895d0;
	Node0x2b89570:s1 -> Node0x2b89b10;
	Node0x2b895d0 [shape=record,label="{%92:\l\l  store i32 0, i32* %j, align 4\l  br label %93\l}"];
	Node0x2b895d0 -> Node0x2b89630;
	Node0x2b89630 [shape=record,label="{%93:\l\l  %94 = load i32* %j, align 4\l  %95 = load i32* @nblocks, align 4\l  %96 = icmp slt i32 %94, %95\l  br i1 %96, label %97, label %148\l|{<s0>T|<s1>F}}"];
	Node0x2b89630:s0 -> Node0x2b89690;
	Node0x2b89630:s1 -> Node0x2b89a50;
	Node0x2b89690 [shape=record,label="{%97:\l\l  %98 = load i32* %i, align 4\l  %99 = load i32* %j, align 4\l  %100 = call i32 @BlockOwner(i32 %98, i32 %99)\l  store i32 %100, i32* %proc_num, align 4\l  %101 = load i32* %i, align 4\l  %102 = load i32* @nblocks, align 4\l  %103 = sub nsw i32 %102, 1\l  %104 = icmp eq i32 %101, %103\l  br i1 %104, label %105, label %114\l|{<s0>T|<s1>F}}"];
	Node0x2b89690:s0 -> Node0x2b896f0;
	Node0x2b89690:s1 -> Node0x2b897b0;
	Node0x2b896f0 [shape=record,label="{%105:\l\l  %106 = load i32* %j, align 4\l  %107 = load i32* @nblocks, align 4\l  %108 = sub nsw i32 %107, 1\l  %109 = icmp eq i32 %106, %108\l  br i1 %109, label %110, label %114\l|{<s0>T|<s1>F}}"];
	Node0x2b896f0:s0 -> Node0x2b89750;
	Node0x2b896f0:s1 -> Node0x2b897b0;
	Node0x2b89750 [shape=record,label="{%110:\l\l  %111 = load i32* %edge, align 4\l  %112 = load i32* %edge, align 4\l  %113 = mul nsw i32 %111, %112\l  store i32 %113, i32* %size, align 4\l  br label %133\l}"];
	Node0x2b89750 -> Node0x2b89990;
	Node0x2b897b0 [shape=record,label="{%114:\l\l  %115 = load i32* %i, align 4\l  %116 = load i32* @nblocks, align 4\l  %117 = sub nsw i32 %116, 1\l  %118 = icmp eq i32 %115, %117\l  br i1 %118, label %124, label %119\l|{<s0>T|<s1>F}}"];
	Node0x2b897b0:s0 -> Node0x2b89870;
	Node0x2b897b0:s1 -> Node0x2b89810;
	Node0x2b89810 [shape=record,label="{%119:\l\l  %120 = load i32* %j, align 4\l  %121 = load i32* @nblocks, align 4\l  %122 = sub nsw i32 %121, 1\l  %123 = icmp eq i32 %120, %122\l  br i1 %123, label %124, label %128\l|{<s0>T|<s1>F}}"];
	Node0x2b89810:s0 -> Node0x2b89870;
	Node0x2b89810:s1 -> Node0x2b898d0;
	Node0x2b89870 [shape=record,label="{%124:\l\l  %125 = load i32* %edge, align 4\l  %126 = load i32* @block_size, align 4\l  %127 = mul nsw i32 %125, %126\l  store i32 %127, i32* %size, align 4\l  br label %132\l}"];
	Node0x2b89870 -> Node0x2b89930;
	Node0x2b898d0 [shape=record,label="{%128:\l\l  %129 = load i32* @block_size, align 4\l  %130 = load i32* @block_size, align 4\l  %131 = mul nsw i32 %129, %130\l  store i32 %131, i32* %size, align 4\l  br label %132\l}"];
	Node0x2b898d0 -> Node0x2b89930;
	Node0x2b89930 [shape=record,label="{%132:\l\l  br label %133\l}"];
	Node0x2b89930 -> Node0x2b89990;
	Node0x2b89990 [shape=record,label="{%133:\l\l  %134 = load i32* %size, align 4\l  %135 = sext i32 %134 to i64\l  %136 = mul i64 %135, 8\l  %137 = load i32* %proc_num, align 4\l  %138 = sext i32 %137 to i64\l  %139 = load i32** @proc_bytes, align 8\l  %140 = getelementptr inbounds i32* %139, i64 %138\l  %141 = load i32* %140, align 4\l  %142 = sext i32 %141 to i64\l  %143 = add i64 %142, %136\l  %144 = trunc i64 %143 to i32\l  store i32 %144, i32* %140, align 4\l  br label %145\l}"];
	Node0x2b89990 -> Node0x2b899f0;
	Node0x2b899f0 [shape=record,label="{%145:\l\l  %146 = load i32* %j, align 4\l  %147 = add nsw i32 %146, 1\l  store i32 %147, i32* %j, align 4\l  br label %93\l}"];
	Node0x2b899f0 -> Node0x2b89630;
	Node0x2b89a50 [shape=record,label="{%148:\l\l  br label %149\l}"];
	Node0x2b89a50 -> Node0x2b89ab0;
	Node0x2b89ab0 [shape=record,label="{%149:\l\l  %150 = load i32* %i, align 4\l  %151 = add nsw i32 %150, 1\l  store i32 %151, i32* %i, align 4\l  br label %88\l}"];
	Node0x2b89ab0 -> Node0x2b89570;
	Node0x2b89b10 [shape=record,label="{%152:\l\l  store i32 0, i32* %i, align 4\l  br label %153\l}"];
	Node0x2b89b10 -> Node0x2b89b70;
	Node0x2b89b70 [shape=record,label="{%153:\l\l  %154 = load i32* %i, align 4\l  %155 = load i32* @P, align 4\l  %156 = icmp slt i32 %154, %155\l  br i1 %156, label %157, label %182\l|{<s0>T|<s1>F}}"];
	Node0x2b89b70:s0 -> Node0x2b89bd0;
	Node0x2b89b70:s1 -> Node0x2b89d50;
	Node0x2b89bd0 [shape=record,label="{%157:\l\l  %158 = load i32* %i, align 4\l  %159 = sext i32 %158 to i64\l  %160 = load i32** @proc_bytes, align 8\l  %161 = getelementptr inbounds i32* %160, i64 %159\l  %162 = load i32* %161, align 4\l  %163 = add nsw i32 %162, 4096\l  %164 = sext i32 %163 to i64\l  %165 = call noalias i8* @malloc(i64 %164)\l  %166 = bitcast i8* %165 to double*\l  %167 = load i32* %i, align 4\l  %168 = sext i32 %167 to i64\l  %169 = load double*** @last_malloc, align 8\l  %170 = getelementptr inbounds double** %169, i64 %168\l  store double* %166, double** %170, align 8\l  %171 = load i32* %i, align 4\l  %172 = sext i32 %171 to i64\l  %173 = load double*** @last_malloc, align 8\l  %174 = getelementptr inbounds double** %173, i64 %172\l  %175 = load double** %174, align 8\l  %176 = icmp eq double* %175, null\l  br i1 %176, label %177, label %178\l|{<s0>T|<s1>F}}"];
	Node0x2b89bd0:s0 -> Node0x2b89c30;
	Node0x2b89bd0:s1 -> Node0x2b89c90;
	Node0x2b89c30 [shape=record,label="{%177:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b89c30 -> Node0x2b8bd30;
	Node0x2b89c90 [shape=record,label="{%178:\l\l  br label %179\l}"];
	Node0x2b89c90 -> Node0x2b89cf0;
	Node0x2b89cf0 [shape=record,label="{%179:\l\l  %180 = load i32* %i, align 4\l  %181 = add nsw i32 %180, 1\l  store i32 %181, i32* %i, align 4\l  br label %153\l}"];
	Node0x2b89cf0 -> Node0x2b89b70;
	Node0x2b89d50 [shape=record,label="{%182:\l\l  %183 = load i32* @nblocks, align 4\l  %184 = load i32* @nblocks, align 4\l  %185 = mul nsw i32 %183, %184\l  %186 = sext i32 %185 to i64\l  %187 = mul i64 %186, 8\l  %188 = call noalias i8* @malloc(i64 %187)\l  %189 = bitcast i8* %188 to double**\l  store double** %189, double*** @a, align 8\l  %190 = load double*** @a, align 8\l  %191 = icmp eq double** %190, null\l  br i1 %191, label %192, label %193\l|{<s0>T|<s1>F}}"];
	Node0x2b89d50:s0 -> Node0x2b89db0;
	Node0x2b89d50:s1 -> Node0x2b89e10;
	Node0x2b89db0 [shape=record,label="{%192:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b89db0 -> Node0x2b8bd30;
	Node0x2b89e10 [shape=record,label="{%193:\l\l  store i32 0, i32* %i, align 4\l  br label %194\l}"];
	Node0x2b89e10 -> Node0x2b89e70;
	Node0x2b89e70 [shape=record,label="{%194:\l\l  %195 = load i32* %i, align 4\l  %196 = load i32* @nblocks, align 4\l  %197 = icmp slt i32 %195, %196\l  br i1 %197, label %198, label %222\l|{<s0>T|<s1>F}}"];
	Node0x2b89e70:s0 -> Node0x2b89ed0;
	Node0x2b89e70:s1 -> Node0x2b8a410;
	Node0x2b89ed0 [shape=record,label="{%198:\l\l  store i32 0, i32* %j, align 4\l  br label %199\l}"];
	Node0x2b89ed0 -> Node0x2b89f30;
	Node0x2b89f30 [shape=record,label="{%199:\l\l  %200 = load i32* %j, align 4\l  %201 = load i32* @nblocks, align 4\l  %202 = icmp slt i32 %200, %201\l  br i1 %202, label %203, label %218\l|{<s0>T|<s1>F}}"];
	Node0x2b89f30:s0 -> Node0x2b89f90;
	Node0x2b89f30:s1 -> Node0x2b8a350;
	Node0x2b89f90 [shape=record,label="{%203:\l\l  %204 = load i32* %i, align 4\l  %205 = load i32* %j, align 4\l  %206 = call i32 @BlockOwner(i32 %204, i32 %205)\l  br label %214\l}"];
	Node0x2b89f90 -> Node0x2b8a290;
	Node0x2b89ff0 [shape=record,label="{%207:                                                  \l  br label %214\l}"];
	Node0x2b89ff0 -> Node0x2b8a290;
	Node0x2b8a050 [shape=record,label="{%208:                                                  \l  br label %214\l}"];
	Node0x2b8a050 -> Node0x2b8a290;
	Node0x2b8a0b0 [shape=record,label="{%209:                                                  \l  br label %213\l}"];
	Node0x2b8a0b0 -> Node0x2b8a230;
	Node0x2b8a110 [shape=record,label="{%210:                                                  \l  br label %213\l}"];
	Node0x2b8a110 -> Node0x2b8a230;
	Node0x2b8a170 [shape=record,label="{%211:                                                  \l  br label %213\l}"];
	Node0x2b8a170 -> Node0x2b8a230;
	Node0x2b8a1d0 [shape=record,label="{%212:                                                  \l  br label %213\l}"];
	Node0x2b8a1d0 -> Node0x2b8a230;
	Node0x2b8a230 [shape=record,label="{%213:\l\l  br label %214\l}"];
	Node0x2b8a230 -> Node0x2b8a290;
	Node0x2b8a290 [shape=record,label="{%214:\l\l  br label %215\l}"];
	Node0x2b8a290 -> Node0x2b8a2f0;
	Node0x2b8a2f0 [shape=record,label="{%215:\l\l  %216 = load i32* %j, align 4\l  %217 = add nsw i32 %216, 1\l  store i32 %217, i32* %j, align 4\l  br label %199\l}"];
	Node0x2b8a2f0 -> Node0x2b89f30;
	Node0x2b8a350 [shape=record,label="{%218:\l\l  br label %219\l}"];
	Node0x2b8a350 -> Node0x2b8a3b0;
	Node0x2b8a3b0 [shape=record,label="{%219:\l\l  %220 = load i32* %i, align 4\l  %221 = add nsw i32 %220, 1\l  store i32 %221, i32* %i, align 4\l  br label %194\l}"];
	Node0x2b8a3b0 -> Node0x2b89e70;
	Node0x2b8a410 [shape=record,label="{%222:\l\l  %223 = load i32* @n, align 4\l  %224 = sext i32 %223 to i64\l  %225 = mul i64 %224, 8\l  %226 = call noalias i8* @malloc(i64 %225)\l  %227 = bitcast i8* %226 to double*\l  store double* %227, double** @rhs, align 8\l  %228 = load double** @rhs, align 8\l  %229 = icmp eq double* %228, null\l  br i1 %229, label %230, label %231\l|{<s0>T|<s1>F}}"];
	Node0x2b8a410:s0 -> Node0x2b8a470;
	Node0x2b8a410:s1 -> Node0x2b8a4d0;
	Node0x2b8a470 [shape=record,label="{%230:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a470 -> Node0x2b8bd30;
	Node0x2b8a4d0 [shape=record,label="{%231:\l\l  %232 = call noalias i8* @malloc(i64 120)\l  %233 = bitcast i8* %232 to %struct.GlobalMemory*\l  store %struct.GlobalMemory* %233, %struct.GlobalMemory** @Global, align 8\l  %234 = load i32* @P, align 4\l  %235 = sext i32 %234 to i64\l  %236 = mul i64 %235, 8\l  %237 = call noalias i8* @malloc(i64 %236)\l  %238 = bitcast i8* %237 to double*\l  %239 = load %struct.GlobalMemory** @Global, align 8\l  %240 = getelementptr inbounds %struct.GlobalMemory* %239, i32 0, i32 0\l  store double* %238, double** %240, align 8\l  %241 = load i32* @P, align 4\l  %242 = sext i32 %241 to i64\l  %243 = mul i64 %242, 8\l  %244 = call noalias i8* @malloc(i64 %243)\l  %245 = bitcast i8* %244 to double*\l  %246 = load %struct.GlobalMemory** @Global, align 8\l  %247 = getelementptr inbounds %struct.GlobalMemory* %246, i32 0, i32 2\l  store double* %245, double** %247, align 8\l  %248 = load i32* @P, align 4\l  %249 = sext i32 %248 to i64\l  %250 = mul i64 %249, 8\l  %251 = call noalias i8* @malloc(i64 %250)\l  %252 = bitcast i8* %251 to double*\l  %253 = load %struct.GlobalMemory** @Global, align 8\l  %254 = getelementptr inbounds %struct.GlobalMemory* %253, i32 0, i32 1\l  store double* %252, double** %254, align 8\l  %255 = load i32* @P, align 4\l  %256 = sext i32 %255 to i64\l  %257 = mul i64 %256, 8\l  %258 = call noalias i8* @malloc(i64 %257)\l  %259 = bitcast i8* %258 to double*\l  %260 = load %struct.GlobalMemory** @Global, align 8\l  %261 = getelementptr inbounds %struct.GlobalMemory* %260, i32 0, i32 3\l  store double* %259, double** %261, align 8\l  %262 = load i32* @P, align 4\l  %263 = sext i32 %262 to i64\l  %264 = mul i64 %263, 8\l  %265 = call noalias i8* @malloc(i64 %264)\l  %266 = bitcast i8* %265 to double*\l  %267 = load %struct.GlobalMemory** @Global, align 8\l  %268 = getelementptr inbounds %struct.GlobalMemory* %267, i32 0, i32 4\l  store double* %266, double** %268, align 8\l  %269 = load %struct.GlobalMemory** @Global, align 8\l  %270 = icmp eq %struct.GlobalMemory* %269, null\l  br i1 %270, label %271, label %272\l|{<s0>T|<s1>F}}"];
	Node0x2b8a4d0:s0 -> Node0x2b8a530;
	Node0x2b8a4d0:s1 -> Node0x2b8a590;
	Node0x2b8a530 [shape=record,label="{%271:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a530 -> Node0x2b8bd30;
	Node0x2b8a590 [shape=record,label="{%272:\l\l  %273 = load %struct.GlobalMemory** @Global, align 8\l  %274 = getelementptr inbounds %struct.GlobalMemory* %273, i32 0, i32 0\l  %275 = load double** %274, align 8\l  %276 = icmp eq double* %275, null\l  br i1 %276, label %277, label %278\l|{<s0>T|<s1>F}}"];
	Node0x2b8a590:s0 -> Node0x2b8a5f0;
	Node0x2b8a590:s1 -> Node0x2b8a650;
	Node0x2b8a5f0 [shape=record,label="{%277:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a5f0 -> Node0x2b8bd30;
	Node0x2b8a650 [shape=record,label="{%278:\l\l  %279 = load %struct.GlobalMemory** @Global, align 8\l  %280 = getelementptr inbounds %struct.GlobalMemory* %279, i32 0, i32 2\l  %281 = load double** %280, align 8\l  %282 = icmp eq double* %281, null\l  br i1 %282, label %283, label %284\l|{<s0>T|<s1>F}}"];
	Node0x2b8a650:s0 -> Node0x2b8a6b0;
	Node0x2b8a650:s1 -> Node0x2b8a710;
	Node0x2b8a6b0 [shape=record,label="{%283:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a6b0 -> Node0x2b8bd30;
	Node0x2b8a710 [shape=record,label="{%284:\l\l  %285 = load %struct.GlobalMemory** @Global, align 8\l  %286 = getelementptr inbounds %struct.GlobalMemory* %285, i32 0, i32 1\l  %287 = load double** %286, align 8\l  %288 = icmp eq double* %287, null\l  br i1 %288, label %289, label %290\l|{<s0>T|<s1>F}}"];
	Node0x2b8a710:s0 -> Node0x2b8a770;
	Node0x2b8a710:s1 -> Node0x2b8a7d0;
	Node0x2b8a770 [shape=record,label="{%289:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a770 -> Node0x2b8bd30;
	Node0x2b8a7d0 [shape=record,label="{%290:\l\l  %291 = load %struct.GlobalMemory** @Global, align 8\l  %292 = getelementptr inbounds %struct.GlobalMemory* %291, i32 0, i32 3\l  %293 = load double** %292, align 8\l  %294 = icmp eq double* %293, null\l  br i1 %294, label %295, label %296\l|{<s0>T|<s1>F}}"];
	Node0x2b8a7d0:s0 -> Node0x2b8a830;
	Node0x2b8a7d0:s1 -> Node0x2b8a890;
	Node0x2b8a830 [shape=record,label="{%295:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a830 -> Node0x2b8bd30;
	Node0x2b8a890 [shape=record,label="{%296:\l\l  %297 = load %struct.GlobalMemory** @Global, align 8\l  %298 = getelementptr inbounds %struct.GlobalMemory* %297, i32 0, i32 4\l  %299 = load double** %298, align 8\l  %300 = icmp eq double* %299, null\l  br i1 %300, label %301, label %302\l|{<s0>T|<s1>F}}"];
	Node0x2b8a890:s0 -> Node0x2b8a8f0;
	Node0x2b8a890:s1 -> Node0x2b8a950;
	Node0x2b8a8f0 [shape=record,label="{%301:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8a8f0 -> Node0x2b8bd30;
	Node0x2b8a950 [shape=record,label="{%302:\l\l  br label %303\l}"];
	Node0x2b8a950 -> Node0x2b8a9b0;
	Node0x2b8a9b0 [shape=record,label="{%303:\l\l  br label %304\l}"];
	Node0x2b8a9b0 -> Node0x2b8aa10;
	Node0x2b8aa10 [shape=record,label="{%304:\l\l  br label %305\l}"];
	Node0x2b8aa10 -> Node0x2b8aa70;
	Node0x2b8aa70 [shape=record,label="{%305:\l\l  br label %306\l}"];
	Node0x2b8aa70 -> Node0x2b8aad0;
	Node0x2b8aad0 [shape=record,label="{%306:\l\l  br label %307\l}"];
	Node0x2b8aad0 -> Node0x2b8ab30;
	Node0x2b8ab30 [shape=record,label="{%307:\l\l  store i32 2, i32* @P\l  %308 = load %struct.GlobalMemory** @Global, align 8\l  %309 = getelementptr inbounds %struct.GlobalMemory* %308, i32 0, i32 10\l  %310 = getelementptr inbounds %struct.barrier_t* %309, i32 0, i32 0\l  store volatile i32 1, i32* %310, align 4\l  %311 = load %struct.GlobalMemory** @Global, align 8\l  %312 = getelementptr inbounds %struct.GlobalMemory* %311, i32 0, i32 10\l  %313 = getelementptr inbounds %struct.barrier_t* %312, i32 0, i32 1\l  store volatile i64 0, i64* %313, align 8\l  %314 = load %struct.GlobalMemory** @Global, align 8\l  %315 = getelementptr inbounds %struct.GlobalMemory* %314, i32 0, i32 9\l  store i32 0, i32* %315, align 4\l  store i32 1, i32* %i, align 4\l  br label %316\l}"];
	Node0x2b8ab30 -> Node0x2b8ab90;
	Node0x2b8ab90 [shape=record,label="{%316:\l\l  %317 = load i32* %i, align 4\l  %318 = load i32* @P, align 4\l  %319 = icmp slt i32 %317, %318\l  br i1 %319, label %320, label %325\l|{<s0>T|<s1>F}}"];
	Node0x2b8ab90:s0 -> Node0x2b8abf0;
	Node0x2b8ab90:s1 -> Node0x2b8acb0;
	Node0x2b8abf0 [shape=record,label="{%320:\l\l  %321 = call i32 @pthread_create(i64* %t, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void ()* @SlaveStart to i8* (i8*)*), i8* null)\l  br label %322\l}"];
	Node0x2b8abf0 -> Node0x2b8ac50;
	Node0x2b8ac50 [shape=record,label="{%322:\l\l  %323 = load i32* %i, align 4\l  %324 = add nsw i32 %323, 1\l  store i32 %324, i32* %i, align 4\l  br label %316\l}"];
	Node0x2b8ac50 -> Node0x2b8ab90;
	Node0x2b8acb0 [shape=record,label="{%325:\l\l  br label %327\l}"];
	Node0x2b8acb0 -> Node0x2b8ad70;
	Node0x2b8ad10 [shape=record,label="{%326:                                                  \l  br label %327\l}"];
	Node0x2b8ad10 -> Node0x2b8ad70;
	Node0x2b8ad70 [shape=record,label="{%327:\l\l  call void @SlaveStart()\l  %328 = load i32* @doprint, align 4\l  %329 = icmp ne i32 %328, 0\l  br i1 %329, label %330, label %331\l|{<s0>T|<s1>F}}"];
	Node0x2b8ad70:s0 -> Node0x2b8add0;
	Node0x2b8ad70:s1 -> Node0x2b8ae30;
	Node0x2b8add0 [shape=record,label="{%330:\l\l  call void @PrintA()\l  br label %331\l}"];
	Node0x2b8add0 -> Node0x2b8ae30;
	Node0x2b8ae30 [shape=record,label="{%331:\l\l  br label %361\l}"];
	Node0x2b8ae30 -> Node0x2b8b970;
	Node0x2b8ae90 [shape=record,label="{%332:                                                  \l  br label %333\l}"];
	Node0x2b8ae90 -> Node0x2b8aef0;
	Node0x2b8aef0 [shape=record,label="{%333:\l\l  br label %340\l}"];
	Node0x2b8aef0 -> Node0x2b8b190;
	Node0x2b8af50 [shape=record,label="{%334:                                                  \l  br label %336\l}"];
	Node0x2b8af50 -> Node0x2b8b010;
	Node0x2b8afb0 [shape=record,label="{%335:                                                  \l  br label %336\l}"];
	Node0x2b8afb0 -> Node0x2b8b010;
	Node0x2b8b010 [shape=record,label="{%336:\l\l  br label %338\l}"];
	Node0x2b8b010 -> Node0x2b8b0d0;
	Node0x2b8b070 [shape=record,label="{%337:                                                  \l  br label %338\l}"];
	Node0x2b8b070 -> Node0x2b8b0d0;
	Node0x2b8b0d0 [shape=record,label="{%338:\l\l  br label %339\l}"];
	Node0x2b8b0d0 -> Node0x2b8b130;
	Node0x2b8b130 [shape=record,label="{%339:\l\l  br label %333\l}"];
	Node0x2b8b130 -> Node0x2b8aef0;
	Node0x2b8b190 [shape=record,label="{%340:\l\l  br label %341\l}"];
	Node0x2b8b190 -> Node0x2b8b1f0;
	Node0x2b8b1f0 [shape=record,label="{%341:\l\l  br label %360\l}"];
	Node0x2b8b1f0 -> Node0x2b8b910;
	Node0x2b8b250 [shape=record,label="{%342:                                                  \l  br label %344\l}"];
	Node0x2b8b250 -> Node0x2b8b310;
	Node0x2b8b2b0 [shape=record,label="{%343:                                                  \l  br label %344\l}"];
	Node0x2b8b2b0 -> Node0x2b8b310;
	Node0x2b8b310 [shape=record,label="{%344:\l\l  br label %346\l}"];
	Node0x2b8b310 -> Node0x2b8b3d0;
	Node0x2b8b370 [shape=record,label="{%345:                                                  \l  br label %346\l}"];
	Node0x2b8b370 -> Node0x2b8b3d0;
	Node0x2b8b3d0 [shape=record,label="{%346:\l\l  br label %348\l}"];
	Node0x2b8b3d0 -> Node0x2b8b490;
	Node0x2b8b430 [shape=record,label="{%347:                                                  \l  br label %348\l}"];
	Node0x2b8b430 -> Node0x2b8b490;
	Node0x2b8b490 [shape=record,label="{%348:\l\l  br label %350\l}"];
	Node0x2b8b490 -> Node0x2b8b550;
	Node0x2b8b4f0 [shape=record,label="{%349:                                                  \l  br label %350\l}"];
	Node0x2b8b4f0 -> Node0x2b8b550;
	Node0x2b8b550 [shape=record,label="{%350:\l\l  br label %352\l}"];
	Node0x2b8b550 -> Node0x2b8b610;
	Node0x2b8b5b0 [shape=record,label="{%351:                                                  \l  br label %352\l}"];
	Node0x2b8b5b0 -> Node0x2b8b610;
	Node0x2b8b610 [shape=record,label="{%352:\l\l  br label %354\l}"];
	Node0x2b8b610 -> Node0x2b8b6d0;
	Node0x2b8b670 [shape=record,label="{%353:                                                  \l  br label %354\l}"];
	Node0x2b8b670 -> Node0x2b8b6d0;
	Node0x2b8b6d0 [shape=record,label="{%354:\l\l  br label %356\l}"];
	Node0x2b8b6d0 -> Node0x2b8b790;
	Node0x2b8b730 [shape=record,label="{%355:                                                  \l  br label %356\l}"];
	Node0x2b8b730 -> Node0x2b8b790;
	Node0x2b8b790 [shape=record,label="{%356:\l\l  br label %358\l}"];
	Node0x2b8b790 -> Node0x2b8b850;
	Node0x2b8b7f0 [shape=record,label="{%357:                                                  \l  br label %358\l}"];
	Node0x2b8b7f0 -> Node0x2b8b850;
	Node0x2b8b850 [shape=record,label="{%358:\l\l  br label %359\l}"];
	Node0x2b8b850 -> Node0x2b8b8b0;
	Node0x2b8b8b0 [shape=record,label="{%359:\l\l  br label %341\l}"];
	Node0x2b8b8b0 -> Node0x2b8b1f0;
	Node0x2b8b910 [shape=record,label="{%360:\l\l  br label %361\l}"];
	Node0x2b8b910 -> Node0x2b8b970;
	Node0x2b8b970 [shape=record,label="{%361:\l\l  br label %367\l}"];
	Node0x2b8b970 -> Node0x2b8bbb0;
	Node0x2b8b9d0 [shape=record,label="{%362:                                                  \l  br label %363\l}"];
	Node0x2b8b9d0 -> Node0x2b8ba30;
	Node0x2b8ba30 [shape=record,label="{%363:\l\l  br label %366\l}"];
	Node0x2b8ba30 -> Node0x2b8bb50;
	Node0x2b8ba90 [shape=record,label="{%364:                                                  \l  br label %365\l}"];
	Node0x2b8ba90 -> Node0x2b8baf0;
	Node0x2b8baf0 [shape=record,label="{%365:\l\l  br label %363\l}"];
	Node0x2b8baf0 -> Node0x2b8ba30;
	Node0x2b8bb50 [shape=record,label="{%366:\l\l  br label %367\l}"];
	Node0x2b8bb50 -> Node0x2b8bbb0;
	Node0x2b8bbb0 [shape=record,label="{%367:\l\l  br label %369\l}"];
	Node0x2b8bbb0 -> Node0x2b8bc70;
	Node0x2b8bc10 [shape=record,label="{%368:                                                  \l  br label %369\l}"];
	Node0x2b8bc10 -> Node0x2b8bc70;
	Node0x2b8bc70 [shape=record,label="{%369:\l\l  br label %UnifiedUnreachableBlock\l}"];
	Node0x2b8bc70 -> Node0x2b8bd30;
	Node0x2b8bcd0 [shape=record,label="{%370:                                                  \l  call void @waitForAll()\l  ret i32 undef\l}"];
	Node0x2b8bd30 [shape=record,label="{UnifiedUnreachableBlock:                          \l  call void @waitForAll()\l  call void @waitForAll()\l  unreachable\l}"];
}
