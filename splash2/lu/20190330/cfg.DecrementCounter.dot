digraph "CFG for 'DecrementCounter' function" {
	label="CFG for 'DecrementCounter' function";

	Node0x2bd1940 [shape=record,label="{%0:\l  %idx = alloca i32, align 4\l  %i = alloca i32, align 4\l  %i1 = alloca i32, align 4\l  %1 = call i32 (...)* @pthread_self()\l  store i32 %1, i32* %idx, align 4\l  %2 = load i32* %idx, align 4\l  %3 = zext i32 %2 to i64\l  %4 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %3\l  store i8 0, i8* %4, align 1\l  %5 = load i32* %idx, align 4\l  %6 = zext i32 %5 to i64\l  %7 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %6\l  %8 = load i32* %7, align 4\l  %9 = icmp eq i32 %8, 0\l  br i1 %9, label %10, label %31\l|{<s0>T|<s1>F}}"];
	Node0x2bd1940:s0 -> Node0x2bd19a0;
	Node0x2bd1940:s1 -> Node0x2bd1c40;
	Node0x2bd19a0 [shape=record,label="{%10:\l\l  %11 = load i32* @counter0, align 4\l  %12 = add nsw i32 %11, -1\l  store i32 %12, i32* @counter0, align 4\l  %13 = load i32* @counter0, align 4\l  %14 = icmp eq i32 %13, 0\l  br i1 %14, label %15, label %27\l|{<s0>T|<s1>F}}"];
	Node0x2bd19a0:s0 -> Node0x2bd1a00;
	Node0x2bd19a0:s1 -> Node0x2bd1be0;
	Node0x2bd1a00 [shape=record,label="{%15:\l\l  call void @DeriveInvariant()\l  store i32 0, i32* %i, align 4\l  br label %16\l}"];
	Node0x2bd1a00 -> Node0x2bd1a60;
	Node0x2bd1a60 [shape=record,label="{%16:\l\l  %17 = load i32* %i, align 4\l  %18 = icmp slt i32 %17, 3\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x2bd1a60:s0 -> Node0x2bd1ac0;
	Node0x2bd1a60:s1 -> Node0x2bd1b80;
	Node0x2bd1ac0 [shape=record,label="{%19:\l\l  %20 = load i32* %i, align 4\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %21\l  store i8 1, i8* %22, align 1\l  br label %23\l}"];
	Node0x2bd1ac0 -> Node0x2bd1b20;
	Node0x2bd1b20 [shape=record,label="{%23:\l\l  %24 = load i32* %i, align 4\l  %25 = add nsw i32 %24, 1\l  store i32 %25, i32* %i, align 4\l  br label %16\l}"];
	Node0x2bd1b20 -> Node0x2bd1a60;
	Node0x2bd1b80 [shape=record,label="{%26:\l\l  br label %27\l}"];
	Node0x2bd1b80 -> Node0x2bd1be0;
	Node0x2bd1be0 [shape=record,label="{%27:\l\l  %28 = load i32* %idx, align 4\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %29\l  store i32 1, i32* %30, align 4\l  br label %52\l}"];
	Node0x2bd1be0 -> Node0x2bd1ee0;
	Node0x2bd1c40 [shape=record,label="{%31:\l\l  %32 = load i32* @counter1, align 4\l  %33 = add nsw i32 %32, -1\l  store i32 %33, i32* @counter1, align 4\l  %34 = load i32* @counter1, align 4\l  %35 = icmp eq i32 %34, 0\l  br i1 %35, label %36, label %48\l|{<s0>T|<s1>F}}"];
	Node0x2bd1c40:s0 -> Node0x2bd1ca0;
	Node0x2bd1c40:s1 -> Node0x2bd1e80;
	Node0x2bd1ca0 [shape=record,label="{%36:\l\l  call void @DeriveInvariant()\l  store i32 0, i32* %i1, align 4\l  br label %37\l}"];
	Node0x2bd1ca0 -> Node0x2bd1d00;
	Node0x2bd1d00 [shape=record,label="{%37:\l\l  %38 = load i32* %i1, align 4\l  %39 = icmp slt i32 %38, 3\l  br i1 %39, label %40, label %47\l|{<s0>T|<s1>F}}"];
	Node0x2bd1d00:s0 -> Node0x2bd1d60;
	Node0x2bd1d00:s1 -> Node0x2bd1e20;
	Node0x2bd1d60 [shape=record,label="{%40:\l\l  %41 = load i32* %i1, align 4\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %42\l  store i8 1, i8* %43, align 1\l  br label %44\l}"];
	Node0x2bd1d60 -> Node0x2bd1dc0;
	Node0x2bd1dc0 [shape=record,label="{%44:\l\l  %45 = load i32* %i1, align 4\l  %46 = add nsw i32 %45, 1\l  store i32 %46, i32* %i1, align 4\l  br label %37\l}"];
	Node0x2bd1dc0 -> Node0x2bd1d00;
	Node0x2bd1e20 [shape=record,label="{%47:\l\l  br label %48\l}"];
	Node0x2bd1e20 -> Node0x2bd1e80;
	Node0x2bd1e80 [shape=record,label="{%48:\l\l  %49 = load i32* %idx, align 4\l  %50 = zext i32 %49 to i64\l  %51 = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %50\l  store i32 0, i32* %51, align 4\l  br label %52\l}"];
	Node0x2bd1e80 -> Node0x2bd1ee0;
	Node0x2bd1ee0 [shape=record,label="{%52:\l\l  store i8 1, i8* @bFirstThread, align 1\l  ret void\l}"];
}
