digraph "CFG for 'lu0' function" {
	label="CFG for 'lu0' function";

	Node0x490bc30 [shape=record,label="{entry:\l  %a.addr = alloca double*, align 8\l  %n.addr = alloca i32, align 4\l  %stride.addr = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %length = alloca i32, align 4\l  %alpha = alloca double, align 8\l  store double* %a, double** %a.addr, align 8\l  store i32 %n, i32* %n.addr, align 4\l  store i32 %stride, i32* %stride.addr, align 4\l  store i32 0, i32* %k, align 4\l  br label %for.cond\l}"];
	Node0x490bc30 -> Node0x490bc80;
	Node0x490bc80 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %k, align 4\l  %1 = load i32* %n.addr, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end.29\l|{<s0>T|<s1>F}}"];
	Node0x490bc80:s0 -> Node0x490bcd0;
	Node0x490bc80:s1 -> Node0x4921f50;
	Node0x490bcd0 [shape=record,label="{for.body:                                         \l  %2 = load i32* %k, align 4\l  %add = add nsw i32 %2, 1\l  store i32 %add, i32* %j, align 4\l  br label %for.cond.1\l}"];
	Node0x490bcd0 -> Node0x490bd20;
	Node0x490bd20 [shape=record,label="{for.cond.1:                                       \l  %3 = load i32* %j, align 4\l  %4 = load i32* %n.addr, align 4\l  %cmp2 = icmp slt i32 %3, %4\l  br i1 %cmp2, label %for.body.3, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x490bd20:s0 -> Node0x490bd70;
	Node0x490bd20:s1 -> Node0x4921eb0;
	Node0x490bd70 [shape=record,label="{for.body.3:                                       \l  %5 = load i32* %k, align 4\l  %6 = load i32* %k, align 4\l  %7 = load i32* %stride.addr, align 4\l  %mul = mul nsw i32 %6, %7\l  %add4 = add nsw i32 %5, %mul\l  %idxprom = sext i32 %add4 to i64\l  %8 = load double** %a.addr, align 8\l  %arrayidx = getelementptr inbounds double* %8, i64 %idxprom\l  %9 = load double* %arrayidx, align 8\l  %10 = load i32* %k, align 4\l  %11 = load i32* %j, align 4\l  %12 = load i32* %stride.addr, align 4\l  %mul5 = mul nsw i32 %11, %12\l  %add6 = add nsw i32 %10, %mul5\l  %idxprom7 = sext i32 %add6 to i64\l  %13 = load double** %a.addr, align 8\l  %arrayidx8 = getelementptr inbounds double* %13, i64 %idxprom7\l  %14 = load double* %arrayidx8, align 8\l  %div = fdiv double %14, %9\l  store double %div, double* %arrayidx8, align 8\l  %15 = load i32* %k, align 4\l  %16 = load i32* %j, align 4\l  %17 = load i32* %stride.addr, align 4\l  %mul9 = mul nsw i32 %16, %17\l  %add10 = add nsw i32 %15, %mul9\l  %idxprom11 = sext i32 %add10 to i64\l  %18 = load double** %a.addr, align 8\l  %arrayidx12 = getelementptr inbounds double* %18, i64 %idxprom11\l  %19 = load double* %arrayidx12, align 8\l  %sub = fsub double -0.000000e+00, %19\l  store double %sub, double* %alpha, align 8\l  %20 = load i32* %n.addr, align 4\l  %21 = load i32* %k, align 4\l  %sub13 = sub nsw i32 %20, %21\l  %sub14 = sub nsw i32 %sub13, 1\l  store i32 %sub14, i32* %length, align 4\l  %22 = load i32* %k, align 4\l  %add15 = add nsw i32 %22, 1\l  %23 = load i32* %j, align 4\l  %24 = load i32* %stride.addr, align 4\l  %mul16 = mul nsw i32 %23, %24\l  %add17 = add nsw i32 %add15, %mul16\l  %idxprom18 = sext i32 %add17 to i64\l  %25 = load double** %a.addr, align 8\l  %arrayidx19 = getelementptr inbounds double* %25, i64 %idxprom18\l  %26 = load i32* %k, align 4\l  %add20 = add nsw i32 %26, 1\l  %27 = load i32* %k, align 4\l  %28 = load i32* %stride.addr, align 4\l  %mul21 = mul nsw i32 %27, %28\l  %add22 = add nsw i32 %add20, %mul21\l  %idxprom23 = sext i32 %add22 to i64\l  %29 = load double** %a.addr, align 8\l  %arrayidx24 = getelementptr inbounds double* %29, i64 %idxprom23\l  %30 = load i32* %n.addr, align 4\l  %31 = load i32* %k, align 4\l  %sub25 = sub nsw i32 %30, %31\l  %sub26 = sub nsw i32 %sub25, 1\l  %32 = load double* %alpha, align 8\l  call void @daxpy(double* %arrayidx19, double* %arrayidx24, i32 %sub26,\l... double %32)\l  br label %for.inc\l}"];
	Node0x490bd70 -> Node0x4921e60;
	Node0x4921e60 [shape=record,label="{for.inc:                                          \l  %33 = load i32* %j, align 4\l  %inc = add nsw i32 %33, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond.1\l}"];
	Node0x4921e60 -> Node0x490bd20;
	Node0x4921eb0 [shape=record,label="{for.end:                                          \l  br label %for.inc.27\l}"];
	Node0x4921eb0 -> Node0x4921f00;
	Node0x4921f00 [shape=record,label="{for.inc.27:                                       \l  %34 = load i32* %k, align 4\l  %inc28 = add nsw i32 %34, 1\l  store i32 %inc28, i32* %k, align 4\l  br label %for.cond\l}"];
	Node0x4921f00 -> Node0x490bc80;
	Node0x4921f50 [shape=record,label="{for.end.29:                                       \l  ret void\l}"];
}
