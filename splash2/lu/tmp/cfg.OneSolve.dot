digraph "CFG for 'OneSolve' function" {
	label="CFG for 'OneSolve' function";

	Node0x48f9810 [shape=record,label="{entry:\l  %n.addr = alloca i32, align 4\l  %block_size.addr = alloca i32, align 4\l  %a.addr = alloca double**, align 8\l  %MyNum.addr = alloca i32, align 4\l  %dostats.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %myrs = alloca i32, align 4\l  %myrf = alloca i32, align 4\l  %mydone = alloca i32, align 4\l  %lc = alloca %struct.LocalCopies*, align 8\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %retVal = alloca i32, align 4\l  %lsense28 = alloca i32, align 4\l  %oldcount33 = alloca i32, align 4\l  %newcount37 = alloca i32, align 4\l  %updatedcount39 = alloca i32, align 4\l  %retVal40 = alloca i32, align 4\l  %lsense85 = alloca i32, align 4\l  %oldcount90 = alloca i32, align 4\l  %newcount94 = alloca i32, align 4\l  %updatedcount96 = alloca i32, align 4\l  %retVal97 = alloca i32, align 4\l  store i32 %n, i32* %n.addr, align 4\l  store i32 %block_size, i32* %block_size.addr, align 4\l  store double** %a, double*** %a.addr, align 8\l  store i32 %MyNum, i32* %MyNum.addr, align 4\l  store i32 %dostats, i32* %dostats.addr, align 4\l  %call = call noalias i8* @malloc(i64 32)\l  %0 = bitcast i8* %call to %struct.LocalCopies*\l  store %struct.LocalCopies* %0, %struct.LocalCopies** %lc, align 8\l  %1 = load %struct.LocalCopies** %lc, align 8\l  %cmp = icmp eq %struct.LocalCopies* %1, null\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x48f9810:s0 -> Node0x48f9860;
	Node0x48f9810:s1 -> Node0x48f98b0;
	Node0x48f9860 [shape=record,label="{if.then:                                          \l  %2 = load %struct._IO_FILE** @stderr, align 8\l  %3 = load i32* %MyNum.addr, align 4\l  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) *@fprintf(%struct._IO_FILE*\l... %2, i8* getelementptr inbounds ([40 x i8]* @.str.44, i32 0, i32 0), i32 %3)\l  call void @exit(i32 -1)\l  unreachable\l}"];
	Node0x48f98b0 [shape=record,label="{if.end:                                           \l  %4 = load %struct.LocalCopies** %lc, align 8\l  %t_in_fac = getelementptr inbounds %struct.LocalCopies* %4, i32 0, i32 0\l  store double 0.000000e+00, double* %t_in_fac, align 8\l  %5 = load %struct.LocalCopies** %lc, align 8\l  %t_in_solve = getelementptr inbounds %struct.LocalCopies* %5, i32 0, i32 1\l  store double 0.000000e+00, double* %t_in_solve, align 8\l  %6 = load %struct.LocalCopies** %lc, align 8\l  %t_in_mod = getelementptr inbounds %struct.LocalCopies* %6, i32 0, i32 2\l  store double 0.000000e+00, double* %t_in_mod, align 8\l  %7 = load %struct.LocalCopies** %lc, align 8\l  %t_in_bar = getelementptr inbounds %struct.LocalCopies* %7, i32 0, i32 3\l  store double 0.000000e+00, double* %t_in_bar, align 8\l  %8 = load %struct.GlobalMemory** @Global, align 8\l  %start = getelementptr inbounds %struct.GlobalMemory* %8, i32 0, i32 10\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  %9 = load volatile i32* %gsense, align 4\l  store i32 %9, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x48f98b0 -> Node0x48f9900;
	Node0x48f9900 [shape=record,label="{while.body:                                       \l  %10 = load %struct.GlobalMemory** @Global, align 8\l  %start2 = getelementptr inbounds %struct.GlobalMemory* %10, i32 0, i32 10\l  %count = getelementptr inbounds %struct.barrier_t* %start2, i32 0, i32 1\l  %11 = load volatile i64* %count, align 8\l  %conv = trunc i64 %11 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %12 = load i32* %oldcount, align 4\l  %13 = load i32* %lsense, align 4\l  %add = add nsw i32 %12, %13\l  store i32 %add, i32* %newcount, align 4\l  %14 = load i32* %oldcount, align 4\l  %15 = load i32* %newcount, align 4\l  %call3 = call i32 @atomic_cmpxchg(i32 %14, i32 %15)\l  store i32 %call3, i32* %updatedcount, align 4\l  %16 = load i32* %updatedcount, align 4\l  %17 = load i32* %oldcount, align 4\l  %cmp4 = icmp eq i32 %16, %17\l  br i1 %cmp4, label %if.then.6, label %if.end.20\l|{<s0>T|<s1>F}}"];
	Node0x48f9900:s0 -> Node0x48f9950;
	Node0x48f9900:s1 -> Node0x48f9b30;
	Node0x48f9950 [shape=record,label="{if.then.6:                                        \l  %18 = load i32* %newcount, align 4\l  %19 = load i32* @P, align 4\l  %cmp7 = icmp eq i32 %18, %19\l  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x48f9950:s0 -> Node0x48f99a0;
	Node0x48f9950:s1 -> Node0x48f99f0;
	Node0x48f99a0 [shape=record,label="{land.lhs.true:                                    \l  %20 = load i32* %lsense, align 4\l  %cmp9 = icmp eq i32 %20, 1\l  br i1 %cmp9, label %if.then.16, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x48f99a0:s0 -> Node0x48f9a90;
	Node0x48f99a0:s1 -> Node0x48f99f0;
	Node0x48f99f0 [shape=record,label="{lor.lhs.false:                                    \l  %21 = load i32* %newcount, align 4\l  %cmp11 = icmp eq i32 %21, 0\l  br i1 %cmp11, label %land.lhs.true.13, label %if.end.19\l|{<s0>T|<s1>F}}"];
	Node0x48f99f0:s0 -> Node0x48f9a40;
	Node0x48f99f0:s1 -> Node0x48f9ae0;
	Node0x48f9a40 [shape=record,label="{land.lhs.true.13:                                 \l  %22 = load i32* %lsense, align 4\l  %cmp14 = icmp eq i32 %22, -1\l  br i1 %cmp14, label %if.then.16, label %if.end.19\l|{<s0>T|<s1>F}}"];
	Node0x48f9a40:s0 -> Node0x48f9a90;
	Node0x48f9a40:s1 -> Node0x48f9ae0;
	Node0x48f9a90 [shape=record,label="{if.then.16:                                       \l  %23 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %23\l  %24 = load %struct.GlobalMemory** @Global, align 8\l  %start17 = getelementptr inbounds %struct.GlobalMemory* %24, i32 0, i32 10\l  %gsense18 = getelementptr inbounds %struct.barrier_t* %start17, i32 0, i32 0\l  store volatile i32 %sub, i32* %gsense18, align 4\l  call void @Criteria(i32 1)\l  br label %if.end.19\l}"];
	Node0x48f9a90 -> Node0x48f9ae0;
	Node0x48f9ae0 [shape=record,label="{if.end.19:                                        \l  br label %while.end\l}"];
	Node0x48f9ae0 -> Node0x48f9b80;
	Node0x48f9b30 [shape=record,label="{if.end.20:                                        \l  br label %while.body\l}"];
	Node0x48f9b30 -> Node0x48f9900;
	Node0x48f9b80 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x48f9b80 -> Node0x48f9bd0;
	Node0x48f9bd0 [shape=record,label="{while.cond:                                       \l  %25 = load %struct.GlobalMemory** @Global, align 8\l  %start21 = getelementptr inbounds %struct.GlobalMemory* %25, i32 0, i32 10\l  %gsense22 = getelementptr inbounds %struct.barrier_t* %start21, i32 0, i32 0\l  %26 = load volatile i32* %gsense22, align 4\l  %27 = load i32* %lsense, align 4\l  %cmp23 = icmp eq i32 %26, %27\l  br i1 %cmp23, label %while.body.25, label %while.end.26\l|{<s0>T|<s1>F}}"];
	Node0x48f9bd0:s0 -> Node0x48f9c20;
	Node0x48f9bd0:s1 -> Node0x48f9c70;
	Node0x48f9c20 [shape=record,label="{while.body.25:                                    \l  br label %while.cond\l}"];
	Node0x48f9c20 -> Node0x48f9bd0;
	Node0x48f9c70 [shape=record,label="{while.end.26:                                     \l  call void @Criteria(i32 1)\l  %28 = load i32* %block_size.addr, align 4\l  %29 = load i32* %MyNum.addr, align 4\l  %call27 = call double @TouchA(i32 %28, i32 %29)\l  %30 = load %struct.GlobalMemory** @Global, align 8\l  %start29 = getelementptr inbounds %struct.GlobalMemory* %30, i32 0, i32 10\l  %gsense30 = getelementptr inbounds %struct.barrier_t* %start29, i32 0, i32 0\l  %31 = load volatile i32* %gsense30, align 4\l  store i32 %31, i32* %lsense28, align 4\l  br label %while.body.32\l}"];
	Node0x48f9c70 -> Node0x48f9cc0;
	Node0x48f9cc0 [shape=record,label="{while.body.32:                                    \l  %32 = load %struct.GlobalMemory** @Global, align 8\l  %start34 = getelementptr inbounds %struct.GlobalMemory* %32, i32 0, i32 10\l  %count35 = getelementptr inbounds %struct.barrier_t* %start34, i32 0, i32 1\l  %33 = load volatile i64* %count35, align 8\l  %conv36 = trunc i64 %33 to i32\l  store i32 %conv36, i32* %oldcount33, align 4\l  %34 = load i32* %oldcount33, align 4\l  %35 = load i32* %lsense28, align 4\l  %add38 = add nsw i32 %34, %35\l  store i32 %add38, i32* %newcount37, align 4\l  %36 = load i32* %oldcount33, align 4\l  %37 = load i32* %newcount37, align 4\l  %call41 = call i32 @atomic_cmpxchg(i32 %36, i32 %37)\l  store i32 %call41, i32* %updatedcount39, align 4\l  %38 = load i32* %updatedcount39, align 4\l  %39 = load i32* %oldcount33, align 4\l  %cmp42 = icmp eq i32 %38, %39\l  br i1 %cmp42, label %if.then.44, label %if.end.61\l|{<s0>T|<s1>F}}"];
	Node0x48f9cc0:s0 -> Node0x48f9d10;
	Node0x48f9cc0:s1 -> Node0x48f9ef0;
	Node0x48f9d10 [shape=record,label="{if.then.44:                                       \l  %40 = load i32* %newcount37, align 4\l  %41 = load i32* @P, align 4\l  %cmp45 = icmp eq i32 %40, %41\l  br i1 %cmp45, label %land.lhs.true.47, label %lor.lhs.false.50\l|{<s0>T|<s1>F}}"];
	Node0x48f9d10:s0 -> Node0x48f9d60;
	Node0x48f9d10:s1 -> Node0x48f9db0;
	Node0x48f9d60 [shape=record,label="{land.lhs.true.47:                                 \l  %42 = load i32* %lsense28, align 4\l  %cmp48 = icmp eq i32 %42, 1\l  br i1 %cmp48, label %if.then.56, label %lor.lhs.false.50\l|{<s0>T|<s1>F}}"];
	Node0x48f9d60:s0 -> Node0x48f9e50;
	Node0x48f9d60:s1 -> Node0x48f9db0;
	Node0x48f9db0 [shape=record,label="{lor.lhs.false.50:                                 \l  %43 = load i32* %newcount37, align 4\l  %cmp51 = icmp eq i32 %43, 0\l  br i1 %cmp51, label %land.lhs.true.53, label %if.end.60\l|{<s0>T|<s1>F}}"];
	Node0x48f9db0:s0 -> Node0x48f9e00;
	Node0x48f9db0:s1 -> Node0x48f9ea0;
	Node0x48f9e00 [shape=record,label="{land.lhs.true.53:                                 \l  %44 = load i32* %lsense28, align 4\l  %cmp54 = icmp eq i32 %44, -1\l  br i1 %cmp54, label %if.then.56, label %if.end.60\l|{<s0>T|<s1>F}}"];
	Node0x48f9e00:s0 -> Node0x48f9e50;
	Node0x48f9e00:s1 -> Node0x48f9ea0;
	Node0x48f9e50 [shape=record,label="{if.then.56:                                       \l  %45 = load i32* %lsense28, align 4\l  %sub57 = sub nsw i32 0, %45\l  %46 = load %struct.GlobalMemory** @Global, align 8\l  %start58 = getelementptr inbounds %struct.GlobalMemory* %46, i32 0, i32 10\l  %gsense59 = getelementptr inbounds %struct.barrier_t* %start58, i32 0, i32 0\l  store volatile i32 %sub57, i32* %gsense59, align 4\l  call void @Criteria(i32 2)\l  br label %if.end.60\l}"];
	Node0x48f9e50 -> Node0x48f9ea0;
	Node0x48f9ea0 [shape=record,label="{if.end.60:                                        \l  br label %while.end.62\l}"];
	Node0x48f9ea0 -> Node0x48f9f40;
	Node0x48f9ef0 [shape=record,label="{if.end.61:                                        \l  br label %while.body.32\l}"];
	Node0x48f9ef0 -> Node0x48f9cc0;
	Node0x48f9f40 [shape=record,label="{while.end.62:                                     \l  br label %while.cond.63\l}"];
	Node0x48f9f40 -> Node0x48f9f90;
	Node0x48f9f90 [shape=record,label="{while.cond.63:                                    \l  %47 = load %struct.GlobalMemory** @Global, align 8\l  %start64 = getelementptr inbounds %struct.GlobalMemory* %47, i32 0, i32 10\l  %gsense65 = getelementptr inbounds %struct.barrier_t* %start64, i32 0, i32 0\l  %48 = load volatile i32* %gsense65, align 4\l  %49 = load i32* %lsense28, align 4\l  %cmp66 = icmp eq i32 %48, %49\l  br i1 %cmp66, label %while.body.68, label %while.end.69\l|{<s0>T|<s1>F}}"];
	Node0x48f9f90:s0 -> Node0x48f9fe0;
	Node0x48f9f90:s1 -> Node0x48fa030;
	Node0x48f9fe0 [shape=record,label="{while.body.68:                                    \l  br label %while.cond.63\l}"];
	Node0x48f9fe0 -> Node0x48f9f90;
	Node0x48fa030 [shape=record,label="{while.end.69:                                     \l  call void @Criteria(i32 2)\l  %50 = load i32* %MyNum.addr, align 4\l  %cmp70 = icmp eq i32 %50, 0\l  br i1 %cmp70, label %if.then.73, label %lor.lhs.false.72\l|{<s0>T|<s1>F}}"];
	Node0x48fa030:s0 -> Node0x48fa0d0;
	Node0x48fa030:s1 -> Node0x48fa080;
	Node0x48fa080 [shape=record,label="{lor.lhs.false.72:                                 \l  %51 = load i32* %dostats.addr, align 4\l  %tobool = icmp ne i32 %51, 0\l  br i1 %tobool, label %if.then.73, label %if.end.76\l|{<s0>T|<s1>F}}"];
	Node0x48fa080:s0 -> Node0x48fa0d0;
	Node0x48fa080:s1 -> Node0x48fa120;
	Node0x48fa0d0 [shape=record,label="{if.then.73:                                       \l  %call74 = call i64 @time(i64* null)\l  %conv75 = trunc i64 %call74 to i32\l  store i32 %conv75, i32* %myrs, align 4\l  br label %if.end.76\l}"];
	Node0x48fa0d0 -> Node0x48fa120;
	Node0x48fa120 [shape=record,label="{if.end.76:                                        \l  %52 = load i32* %n.addr, align 4\l  %53 = load i32* %block_size.addr, align 4\l  %54 = load i32* %MyNum.addr, align 4\l  %55 = load %struct.LocalCopies** %lc, align 8\l  %56 = load i32* %dostats.addr, align 4\l  call void @lu(i32 %52, i32 %53, i32 %54, %struct.LocalCopies* %55, i32 %56)\l  %57 = load i32* %MyNum.addr, align 4\l  %cmp77 = icmp eq i32 %57, 0\l  br i1 %cmp77, label %if.then.81, label %lor.lhs.false.79\l|{<s0>T|<s1>F}}"];
	Node0x48fa120:s0 -> Node0x48fa1c0;
	Node0x48fa120:s1 -> Node0x48fa170;
	Node0x48fa170 [shape=record,label="{lor.lhs.false.79:                                 \l  %58 = load i32* %dostats.addr, align 4\l  %tobool80 = icmp ne i32 %58, 0\l  br i1 %tobool80, label %if.then.81, label %if.end.84\l|{<s0>T|<s1>F}}"];
	Node0x48fa170:s0 -> Node0x48fa1c0;
	Node0x48fa170:s1 -> Node0x48fa210;
	Node0x48fa1c0 [shape=record,label="{if.then.81:                                       \l  %call82 = call i64 @time(i64* null)\l  %conv83 = trunc i64 %call82 to i32\l  store i32 %conv83, i32* %mydone, align 4\l  br label %if.end.84\l}"];
	Node0x48fa1c0 -> Node0x48fa210;
	Node0x48fa210 [shape=record,label="{if.end.84:                                        \l  %59 = load %struct.GlobalMemory** @Global, align 8\l  %start86 = getelementptr inbounds %struct.GlobalMemory* %59, i32 0, i32 10\l  %gsense87 = getelementptr inbounds %struct.barrier_t* %start86, i32 0, i32 0\l  %60 = load volatile i32* %gsense87, align 4\l  store i32 %60, i32* %lsense85, align 4\l  br label %while.body.89\l}"];
	Node0x48fa210 -> Node0x48fa260;
	Node0x48fa260 [shape=record,label="{while.body.89:                                    \l  %61 = load %struct.GlobalMemory** @Global, align 8\l  %start91 = getelementptr inbounds %struct.GlobalMemory* %61, i32 0, i32 10\l  %count92 = getelementptr inbounds %struct.barrier_t* %start91, i32 0, i32 1\l  %62 = load volatile i64* %count92, align 8\l  %conv93 = trunc i64 %62 to i32\l  store i32 %conv93, i32* %oldcount90, align 4\l  %63 = load i32* %oldcount90, align 4\l  %64 = load i32* %lsense85, align 4\l  %add95 = add nsw i32 %63, %64\l  store i32 %add95, i32* %newcount94, align 4\l  %65 = load i32* %oldcount90, align 4\l  %66 = load i32* %newcount94, align 4\l  %call98 = call i32 @atomic_cmpxchg(i32 %65, i32 %66)\l  store i32 %call98, i32* %updatedcount96, align 4\l  %67 = load i32* %updatedcount96, align 4\l  %68 = load i32* %oldcount90, align 4\l  %cmp99 = icmp eq i32 %67, %68\l  br i1 %cmp99, label %if.then.101, label %if.end.118\l|{<s0>T|<s1>F}}"];
	Node0x48fa260:s0 -> Node0x48fa2b0;
	Node0x48fa260:s1 -> Node0x48fa490;
	Node0x48fa2b0 [shape=record,label="{if.then.101:                                      \l  %69 = load i32* %newcount94, align 4\l  %70 = load i32* @P, align 4\l  %cmp102 = icmp eq i32 %69, %70\l  br i1 %cmp102, label %land.lhs.true.104, label %lor.lhs.false.107\l|{<s0>T|<s1>F}}"];
	Node0x48fa2b0:s0 -> Node0x48fa300;
	Node0x48fa2b0:s1 -> Node0x48fa350;
	Node0x48fa300 [shape=record,label="{land.lhs.true.104:                                \l  %71 = load i32* %lsense85, align 4\l  %cmp105 = icmp eq i32 %71, 1\l  br i1 %cmp105, label %if.then.113, label %lor.lhs.false.107\l|{<s0>T|<s1>F}}"];
	Node0x48fa300:s0 -> Node0x48fa3f0;
	Node0x48fa300:s1 -> Node0x48fa350;
	Node0x48fa350 [shape=record,label="{lor.lhs.false.107:                                \l  %72 = load i32* %newcount94, align 4\l  %cmp108 = icmp eq i32 %72, 0\l  br i1 %cmp108, label %land.lhs.true.110, label %if.end.117\l|{<s0>T|<s1>F}}"];
	Node0x48fa350:s0 -> Node0x48fa3a0;
	Node0x48fa350:s1 -> Node0x48fa440;
	Node0x48fa3a0 [shape=record,label="{land.lhs.true.110:                                \l  %73 = load i32* %lsense85, align 4\l  %cmp111 = icmp eq i32 %73, -1\l  br i1 %cmp111, label %if.then.113, label %if.end.117\l|{<s0>T|<s1>F}}"];
	Node0x48fa3a0:s0 -> Node0x48fa3f0;
	Node0x48fa3a0:s1 -> Node0x48fa440;
	Node0x48fa3f0 [shape=record,label="{if.then.113:                                      \l  %74 = load i32* %lsense85, align 4\l  %sub114 = sub nsw i32 0, %74\l  %75 = load %struct.GlobalMemory** @Global, align 8\l  %start115 = getelementptr inbounds %struct.GlobalMemory* %75, i32 0, i32 10\l  %gsense116 = getelementptr inbounds %struct.barrier_t* %start115, i32 0, i32\l... 0\l  store volatile i32 %sub114, i32* %gsense116, align 4\l  call void @Criteria(i32 3)\l  br label %if.end.117\l}"];
	Node0x48fa3f0 -> Node0x48fa440;
	Node0x48fa440 [shape=record,label="{if.end.117:                                       \l  br label %while.end.119\l}"];
	Node0x48fa440 -> Node0x48fa4e0;
	Node0x48fa490 [shape=record,label="{if.end.118:                                       \l  br label %while.body.89\l}"];
	Node0x48fa490 -> Node0x48fa260;
	Node0x48fa4e0 [shape=record,label="{while.end.119:                                    \l  br label %while.cond.120\l}"];
	Node0x48fa4e0 -> Node0x48fa530;
	Node0x48fa530 [shape=record,label="{while.cond.120:                                   \l  %76 = load %struct.GlobalMemory** @Global, align 8\l  %start121 = getelementptr inbounds %struct.GlobalMemory* %76, i32 0, i32 10\l  %gsense122 = getelementptr inbounds %struct.barrier_t* %start121, i32 0, i32\l... 0\l  %77 = load volatile i32* %gsense122, align 4\l  %78 = load i32* %lsense85, align 4\l  %cmp123 = icmp eq i32 %77, %78\l  br i1 %cmp123, label %while.body.125, label %while.end.126\l|{<s0>T|<s1>F}}"];
	Node0x48fa530:s0 -> Node0x48fa580;
	Node0x48fa530:s1 -> Node0x48fa5d0;
	Node0x48fa580 [shape=record,label="{while.body.125:                                   \l  br label %while.cond.120\l}"];
	Node0x48fa580 -> Node0x48fa530;
	Node0x48fa5d0 [shape=record,label="{while.end.126:                                    \l  call void @Criteria(i32 3)\l  %79 = load i32* %MyNum.addr, align 4\l  %cmp127 = icmp eq i32 %79, 0\l  br i1 %cmp127, label %if.then.131, label %lor.lhs.false.129\l|{<s0>T|<s1>F}}"];
	Node0x48fa5d0:s0 -> Node0x48fa670;
	Node0x48fa5d0:s1 -> Node0x48fa620;
	Node0x48fa620 [shape=record,label="{lor.lhs.false.129:                                \l  %80 = load i32* %dostats.addr, align 4\l  %tobool130 = icmp ne i32 %80, 0\l  br i1 %tobool130, label %if.then.131, label %if.end.150\l|{<s0>T|<s1>F}}"];
	Node0x48fa620:s0 -> Node0x48fa670;
	Node0x48fa620:s1 -> Node0x48fa6c0;
	Node0x48fa670 [shape=record,label="{if.then.131:                                      \l  %81 = load %struct.LocalCopies** %lc, align 8\l  %t_in_fac132 = getelementptr inbounds %struct.LocalCopies* %81, i32 0, i32 0\l  %82 = load double* %t_in_fac132, align 8\l  %83 = load i32* %MyNum.addr, align 4\l  %idxprom = sext i32 %83 to i64\l  %84 = load %struct.GlobalMemory** @Global, align 8\l  %t_in_fac133 = getelementptr inbounds %struct.GlobalMemory* %84, i32 0, i32 0\l  %85 = load double** %t_in_fac133, align 8\l  %arrayidx = getelementptr inbounds double* %85, i64 %idxprom\l  store double %82, double* %arrayidx, align 8\l  %86 = load %struct.LocalCopies** %lc, align 8\l  %t_in_solve134 = getelementptr inbounds %struct.LocalCopies* %86, i32 0, i32\l... 1\l  %87 = load double* %t_in_solve134, align 8\l  %88 = load i32* %MyNum.addr, align 4\l  %idxprom135 = sext i32 %88 to i64\l  %89 = load %struct.GlobalMemory** @Global, align 8\l  %t_in_solve136 = getelementptr inbounds %struct.GlobalMemory* %89, i32 0,\l... i32 1\l  %90 = load double** %t_in_solve136, align 8\l  %arrayidx137 = getelementptr inbounds double* %90, i64 %idxprom135\l  store double %87, double* %arrayidx137, align 8\l  %91 = load %struct.LocalCopies** %lc, align 8\l  %t_in_mod138 = getelementptr inbounds %struct.LocalCopies* %91, i32 0, i32 2\l  %92 = load double* %t_in_mod138, align 8\l  %93 = load i32* %MyNum.addr, align 4\l  %idxprom139 = sext i32 %93 to i64\l  %94 = load %struct.GlobalMemory** @Global, align 8\l  %t_in_mod140 = getelementptr inbounds %struct.GlobalMemory* %94, i32 0, i32 2\l  %95 = load double** %t_in_mod140, align 8\l  %arrayidx141 = getelementptr inbounds double* %95, i64 %idxprom139\l  store double %92, double* %arrayidx141, align 8\l  %96 = load %struct.LocalCopies** %lc, align 8\l  %t_in_bar142 = getelementptr inbounds %struct.LocalCopies* %96, i32 0, i32 3\l  %97 = load double* %t_in_bar142, align 8\l  %98 = load i32* %MyNum.addr, align 4\l  %idxprom143 = sext i32 %98 to i64\l  %99 = load %struct.GlobalMemory** @Global, align 8\l  %t_in_bar144 = getelementptr inbounds %struct.GlobalMemory* %99, i32 0, i32 3\l  %100 = load double** %t_in_bar144, align 8\l  %arrayidx145 = getelementptr inbounds double* %100, i64 %idxprom143\l  store double %97, double* %arrayidx145, align 8\l  %101 = load i32* %mydone, align 4\l  %102 = load i32* %myrs, align 4\l  %sub146 = sub i32 %101, %102\l  %conv147 = uitofp i32 %sub146 to double\l  %103 = load i32* %MyNum.addr, align 4\l  %idxprom148 = sext i32 %103 to i64\l  %104 = load %struct.GlobalMemory** @Global, align 8\l  %completion = getelementptr inbounds %struct.GlobalMemory* %104, i32 0, i32 4\l  %105 = load double** %completion, align 8\l  %arrayidx149 = getelementptr inbounds double* %105, i64 %idxprom148\l  store double %conv147, double* %arrayidx149, align 8\l  br label %if.end.150\l}"];
	Node0x48fa670 -> Node0x48fa6c0;
	Node0x48fa6c0 [shape=record,label="{if.end.150:                                       \l  %106 = load i32* %MyNum.addr, align 4\l  %cmp151 = icmp eq i32 %106, 0\l  br i1 %cmp151, label %if.then.153, label %if.end.156\l|{<s0>T|<s1>F}}"];
	Node0x48fa6c0:s0 -> Node0x48fa710;
	Node0x48fa6c0:s1 -> Node0x48fa760;
	Node0x48fa710 [shape=record,label="{if.then.153:                                      \l  %call154 = call i64 @time(i64* null)\l  %conv155 = trunc i64 %call154 to i32\l  store i32 %conv155, i32* %myrf, align 4\l  %107 = load i32* %myrs, align 4\l  %108 = load %struct.GlobalMemory** @Global, align 8\l  %rs = getelementptr inbounds %struct.GlobalMemory* %108, i32 0, i32 7\l  store i32 %107, i32* %rs, align 4\l  %109 = load i32* %mydone, align 4\l  %110 = load %struct.GlobalMemory** @Global, align 8\l  %done = getelementptr inbounds %struct.GlobalMemory* %110, i32 0, i32 8\l  store i32 %109, i32* %done, align 4\l  %111 = load i32* %myrf, align 4\l  %112 = load %struct.GlobalMemory** @Global, align 8\l  %rf = getelementptr inbounds %struct.GlobalMemory* %112, i32 0, i32 6\l  store i32 %111, i32* %rf, align 4\l  br label %if.end.156\l}"];
	Node0x48fa710 -> Node0x48fa760;
	Node0x48fa760 [shape=record,label="{if.end.156:                                       \l  ret void\l}"];
}
