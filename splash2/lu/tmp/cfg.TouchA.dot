digraph "CFG for 'TouchA' function" {
	label="CFG for 'TouchA' function";

	Node0x4906b40 [shape=record,label="{entry:\l  %bs.addr = alloca i32, align 4\l  %MyNum.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %I = alloca i32, align 4\l  %J = alloca i32, align 4\l  %tot = alloca double, align 8\l  %ibs = alloca i32, align 4\l  %jbs = alloca i32, align 4\l  store i32 %bs, i32* %bs.addr, align 4\l  store i32 %MyNum, i32* %MyNum.addr, align 4\l  store double 0.000000e+00, double* %tot, align 8\l  store i32 0, i32* %J, align 4\l  br label %for.cond\l}"];
	Node0x4906b40 -> Node0x4906b90;
	Node0x4906b90 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %J, align 4\l  %1 = load i32* @nblocks, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end.39\l|{<s0>T|<s1>F}}"];
	Node0x4906b90:s0 -> Node0x4906be0;
	Node0x4906b90:s1 -> Node0x4907400;
	Node0x4906be0 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %I, align 4\l  br label %for.cond.1\l}"];
	Node0x4906be0 -> Node0x4906c30;
	Node0x4906c30 [shape=record,label="{for.cond.1:                                       \l  %2 = load i32* %I, align 4\l  %3 = load i32* @nblocks, align 4\l  %cmp2 = icmp slt i32 %2, %3\l  br i1 %cmp2, label %for.body.3, label %for.end.36\l|{<s0>T|<s1>F}}"];
	Node0x4906c30:s0 -> Node0x4906c80;
	Node0x4906c30:s1 -> Node0x4907360;
	Node0x4906c80 [shape=record,label="{for.body.3:                                       \l  %4 = load i32* %I, align 4\l  %5 = load i32* %J, align 4\l  %call = call i32 @BlockOwner(i32 %4, i32 %5)\l  %6 = load i32* %MyNum.addr, align 4\l  %cmp4 = icmp eq i32 %call, %6\l  br i1 %cmp4, label %if.then, label %if.end.33\l|{<s0>T|<s1>F}}"];
	Node0x4906c80:s0 -> Node0x4906cd0;
	Node0x4906c80:s1 -> Node0x49072c0;
	Node0x4906cd0 [shape=record,label="{if.then:                                          \l  %7 = load i32* %J, align 4\l  %8 = load i32* @nblocks, align 4\l  %sub = sub nsw i32 %8, 1\l  %cmp5 = icmp eq i32 %7, %sub\l  br i1 %cmp5, label %if.then.6, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x4906cd0:s0 -> Node0x4906d20;
	Node0x4906cd0:s1 -> Node0x4906e10;
	Node0x4906d20 [shape=record,label="{if.then.6:                                        \l  %9 = load i32* @n, align 4\l  %10 = load i32* %bs.addr, align 4\l  %rem = srem i32 %9, %10\l  store i32 %rem, i32* %jbs, align 4\l  %11 = load i32* %jbs, align 4\l  %cmp7 = icmp eq i32 %11, 0\l  br i1 %cmp7, label %if.then.8, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x4906d20:s0 -> Node0x4906d70;
	Node0x4906d20:s1 -> Node0x4906dc0;
	Node0x4906d70 [shape=record,label="{if.then.8:                                        \l  %12 = load i32* %bs.addr, align 4\l  store i32 %12, i32* %jbs, align 4\l  br label %if.end\l}"];
	Node0x4906d70 -> Node0x4906dc0;
	Node0x4906dc0 [shape=record,label="{if.end:                                           \l  br label %if.end.9\l}"];
	Node0x4906dc0 -> Node0x4906e60;
	Node0x4906e10 [shape=record,label="{if.else:                                          \l  %13 = load i32* %bs.addr, align 4\l  store i32 %13, i32* %jbs, align 4\l  br label %if.end.9\l}"];
	Node0x4906e10 -> Node0x4906e60;
	Node0x4906e60 [shape=record,label="{if.end.9:                                         \l  %14 = load i32* %I, align 4\l  %15 = load i32* @nblocks, align 4\l  %sub10 = sub nsw i32 %15, 1\l  %cmp11 = icmp eq i32 %14, %sub10\l  br i1 %cmp11, label %if.then.12, label %if.else.17\l|{<s0>T|<s1>F}}"];
	Node0x4906e60:s0 -> Node0x4906eb0;
	Node0x4906e60:s1 -> Node0x4906fa0;
	Node0x4906eb0 [shape=record,label="{if.then.12:                                       \l  %16 = load i32* @n, align 4\l  %17 = load i32* %bs.addr, align 4\l  %rem13 = srem i32 %16, %17\l  store i32 %rem13, i32* %ibs, align 4\l  %18 = load i32* %ibs, align 4\l  %cmp14 = icmp eq i32 %18, 0\l  br i1 %cmp14, label %if.then.15, label %if.end.16\l|{<s0>T|<s1>F}}"];
	Node0x4906eb0:s0 -> Node0x4906f00;
	Node0x4906eb0:s1 -> Node0x4906f50;
	Node0x4906f00 [shape=record,label="{if.then.15:                                       \l  %19 = load i32* %bs.addr, align 4\l  store i32 %19, i32* %ibs, align 4\l  br label %if.end.16\l}"];
	Node0x4906f00 -> Node0x4906f50;
	Node0x4906f50 [shape=record,label="{if.end.16:                                        \l  br label %if.end.18\l}"];
	Node0x4906f50 -> Node0x4906ff0;
	Node0x4906fa0 [shape=record,label="{if.else.17:                                       \l  %20 = load i32* %bs.addr, align 4\l  store i32 %20, i32* %ibs, align 4\l  br label %if.end.18\l}"];
	Node0x4906fa0 -> Node0x4906ff0;
	Node0x4906ff0 [shape=record,label="{if.end.18:                                        \l  store i32 0, i32* %j, align 4\l  br label %for.cond.19\l}"];
	Node0x4906ff0 -> Node0x4907040;
	Node0x4907040 [shape=record,label="{for.cond.19:                                      \l  %21 = load i32* %j, align 4\l  %22 = load i32* %jbs, align 4\l  %cmp20 = icmp slt i32 %21, %22\l  br i1 %cmp20, label %for.body.21, label %for.end.32\l|{<s0>T|<s1>F}}"];
	Node0x4907040:s0 -> Node0x4907090;
	Node0x4907040:s1 -> Node0x4907270;
	Node0x4907090 [shape=record,label="{for.body.21:                                      \l  store i32 0, i32* %i, align 4\l  br label %for.cond.22\l}"];
	Node0x4907090 -> Node0x49070e0;
	Node0x49070e0 [shape=record,label="{for.cond.22:                                      \l  %23 = load i32* %i, align 4\l  %24 = load i32* %ibs, align 4\l  %cmp23 = icmp slt i32 %23, %24\l  br i1 %cmp23, label %for.body.24, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x49070e0:s0 -> Node0x4907130;
	Node0x49070e0:s1 -> Node0x49071d0;
	Node0x4907130 [shape=record,label="{for.body.24:                                      \l  %25 = load i32* %i, align 4\l  %26 = load i32* %j, align 4\l  %27 = load i32* %ibs, align 4\l  %mul = mul nsw i32 %26, %27\l  %add = add nsw i32 %25, %mul\l  %idxprom = sext i32 %add to i64\l  %28 = load i32* %I, align 4\l  %29 = load i32* %J, align 4\l  %30 = load i32* @nblocks, align 4\l  %mul25 = mul nsw i32 %29, %30\l  %add26 = add nsw i32 %28, %mul25\l  %idxprom27 = sext i32 %add26 to i64\l  %31 = load double*** @a, align 8\l  %arrayidx = getelementptr inbounds double** %31, i64 %idxprom27\l  %32 = load double** %arrayidx, align 8\l  %arrayidx28 = getelementptr inbounds double* %32, i64 %idxprom\l  %33 = load double* %arrayidx28, align 8\l  %34 = load double* %tot, align 8\l  %add29 = fadd double %34, %33\l  store double %add29, double* %tot, align 8\l  br label %for.inc\l}"];
	Node0x4907130 -> Node0x4907180;
	Node0x4907180 [shape=record,label="{for.inc:                                          \l  %35 = load i32* %i, align 4\l  %inc = add nsw i32 %35, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond.22\l}"];
	Node0x4907180 -> Node0x49070e0;
	Node0x49071d0 [shape=record,label="{for.end:                                          \l  br label %for.inc.30\l}"];
	Node0x49071d0 -> Node0x4907220;
	Node0x4907220 [shape=record,label="{for.inc.30:                                       \l  %36 = load i32* %j, align 4\l  %inc31 = add nsw i32 %36, 1\l  store i32 %inc31, i32* %j, align 4\l  br label %for.cond.19\l}"];
	Node0x4907220 -> Node0x4907040;
	Node0x4907270 [shape=record,label="{for.end.32:                                       \l  br label %if.end.33\l}"];
	Node0x4907270 -> Node0x49072c0;
	Node0x49072c0 [shape=record,label="{if.end.33:                                        \l  br label %for.inc.34\l}"];
	Node0x49072c0 -> Node0x4907310;
	Node0x4907310 [shape=record,label="{for.inc.34:                                       \l  %37 = load i32* %I, align 4\l  %inc35 = add nsw i32 %37, 1\l  store i32 %inc35, i32* %I, align 4\l  br label %for.cond.1\l}"];
	Node0x4907310 -> Node0x4906c30;
	Node0x4907360 [shape=record,label="{for.end.36:                                       \l  br label %for.inc.37\l}"];
	Node0x4907360 -> Node0x49073b0;
	Node0x49073b0 [shape=record,label="{for.inc.37:                                       \l  %38 = load i32* %J, align 4\l  %inc38 = add nsw i32 %38, 1\l  store i32 %inc38, i32* %J, align 4\l  br label %for.cond\l}"];
	Node0x49073b0 -> Node0x4906b90;
	Node0x4907400 [shape=record,label="{for.end.39:                                       \l  %39 = load double* %tot, align 8\l  ret double %39\l}"];
}
