digraph "CFG for 'GetJobs' function" {
	label="CFG for 'GetJobs' function";

	Node0x60edd30 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %job.addr = alloca %struct.rayjob*, align 8\l  %pid.addr = alloca i64, align 8\l  %i = alloca i64, align 8\l  store %struct.rayjob* %job, %struct.rayjob** %job.addr, align 8\l  store i64 %pid, i64* %pid.addr, align 8\l  %0 = load i64* %pid.addr, align 8\l  store i64 %0, i64* %i, align 8\l  %1 = load i64* %i, align 8\l  %2 = load %struct.gmem** @gm, align 8\l  %wpstat = getelementptr inbounds %struct.gmem* %2, i32 0, i32 6\l  %arrayidx = getelementptr inbounds [128 x [256 x i64]]* %wpstat, i32 0, i64\l... %1\l  %arrayidx1 = getelementptr inbounds [256 x i64]* %arrayidx, i32 0, i64 0\l  %3 = load i64* %arrayidx1, align 8\l  %cmp = icmp eq i64 %3, 1\l  br i1 %cmp, label %if.then, label %if.end.4\l|{<s0>T|<s1>F}}"];
	Node0x60edd30:s0 -> Node0x60edd80;
	Node0x60edd30:s1 -> Node0x60ede70;
	Node0x60edd80 [shape=record,label="{if.then:                                          \l  %4 = load %struct.rayjob** %job.addr, align 8\l  %5 = load i64* %i, align 8\l  %call = call i64 @GetJob(%struct.rayjob* %4, i64 %5)\l  %cmp2 = icmp eq i64 %call, 1\l  br i1 %cmp2, label %if.then.3, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x60edd80:s0 -> Node0x60eddd0;
	Node0x60edd80:s1 -> Node0x60ede20;
	Node0x60eddd0 [shape=record,label="{if.then.3:                                        \l  store i64 1, i64* %retval\l  br label %return\l}"];
	Node0x60eddd0 -> Node0x60ee0f0;
	Node0x60ede20 [shape=record,label="{if.end:                                           \l  br label %if.end.4\l}"];
	Node0x60ede20 -> Node0x60ede70;
	Node0x60ede70 [shape=record,label="{if.end.4:                                         \l  %6 = load i64* %pid.addr, align 8\l  %add = add nsw i64 %6, 1\l  %7 = load %struct.gmem** @gm, align 8\l  %nprocs = getelementptr inbounds %struct.gmem* %7, i32 0, i32 0\l  %8 = load i64* %nprocs, align 8\l  %rem = srem i64 %add, %8\l  store i64 %rem, i64* %i, align 8\l  br label %while.cond\l}"];
	Node0x60ede70 -> Node0x60edec0;
	Node0x60edec0 [shape=record,label="{while.cond:                                       \l  %9 = load i64* %i, align 8\l  %10 = load i64* %pid.addr, align 8\l  %cmp5 = icmp ne i64 %9, %10\l  br i1 %cmp5, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x60edec0:s0 -> Node0x60edf10;
	Node0x60edec0:s1 -> Node0x60ee0a0;
	Node0x60edf10 [shape=record,label="{while.body:                                       \l  %11 = load i64* %i, align 8\l  %12 = load %struct.gmem** @gm, align 8\l  %wpstat6 = getelementptr inbounds %struct.gmem* %12, i32 0, i32 6\l  %arrayidx7 = getelementptr inbounds [128 x [256 x i64]]* %wpstat6, i32 0,\l... i64 %11\l  %arrayidx8 = getelementptr inbounds [256 x i64]* %arrayidx7, i32 0, i64 0\l  %13 = load i64* %arrayidx8, align 8\l  %cmp9 = icmp eq i64 %13, 1\l  br i1 %cmp9, label %if.then.10, label %if.end.15\l|{<s0>T|<s1>F}}"];
	Node0x60edf10:s0 -> Node0x60edf60;
	Node0x60edf10:s1 -> Node0x60ee050;
	Node0x60edf60 [shape=record,label="{if.then.10:                                       \l  %14 = load %struct.rayjob** %job.addr, align 8\l  %15 = load i64* %i, align 8\l  %call11 = call i64 @GetJob(%struct.rayjob* %14, i64 %15)\l  %cmp12 = icmp eq i64 %call11, 1\l  br i1 %cmp12, label %if.then.13, label %if.end.14\l|{<s0>T|<s1>F}}"];
	Node0x60edf60:s0 -> Node0x60edfb0;
	Node0x60edf60:s1 -> Node0x60ee000;
	Node0x60edfb0 [shape=record,label="{if.then.13:                                       \l  store i64 1, i64* %retval\l  br label %return\l}"];
	Node0x60edfb0 -> Node0x60ee0f0;
	Node0x60ee000 [shape=record,label="{if.end.14:                                        \l  br label %if.end.15\l}"];
	Node0x60ee000 -> Node0x60ee050;
	Node0x60ee050 [shape=record,label="{if.end.15:                                        \l  %16 = load i64* %i, align 8\l  %add16 = add nsw i64 %16, 1\l  %17 = load %struct.gmem** @gm, align 8\l  %nprocs17 = getelementptr inbounds %struct.gmem* %17, i32 0, i32 0\l  %18 = load i64* %nprocs17, align 8\l  %rem18 = srem i64 %add16, %18\l  store i64 %rem18, i64* %i, align 8\l  br label %while.cond\l}"];
	Node0x60ee050 -> Node0x60edec0;
	Node0x60ee0a0 [shape=record,label="{while.end:                                        \l  store i64 0, i64* %retval\l  br label %return\l}"];
	Node0x60ee0a0 -> Node0x60ee0f0;
	Node0x60ee0f0 [shape=record,label="{return:                                           \l  %19 = load i64* %retval\l  ret i64 %19\l}"];
}
