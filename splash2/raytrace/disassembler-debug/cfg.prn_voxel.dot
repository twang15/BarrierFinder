digraph "CFG for 'prn_voxel' function" {
	label="CFG for 'prn_voxel' function";

	Node0x5f4cd70 [shape=record,label="{entry:\l  %v.addr = alloca %struct.voxel*, align 8\l  %pe = alloca %struct.element*, align 8\l  %pepa = alloca %struct.element**, align 8\l  %g = alloca %struct.grid*, align 8\l  %i = alloca i64, align 8\l  store %struct.voxel* %v, %struct.voxel** %v.addr, align 8\l  br label %if.end\l}"];
	Node0x5f4cd70 -> Node0x5f5dea0;
	Node0x5f4cdc0 [shape=record,label="{if.then:                                          \l  br label %for.cond\l}"];
	Node0x5f4cdc0 -> Node0x5f5dd60;
	Node0x5f5dd60 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5f5dd60 -> Node0x5f5de50;
	Node0x5f5ddb0 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x5f5ddb0 -> Node0x5f5de00;
	Node0x5f5de00 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5f5de00 -> Node0x5f5dd60;
	Node0x5f5de50 [shape=record,label="{for.end:                                          \l  br label %if.end\l}"];
	Node0x5f5de50 -> Node0x5f5dea0;
	Node0x5f5dea0 [shape=record,label="{if.end:                                           \l  %0 = load %struct.voxel** %v.addr, align 8\l  %celltype10 = getelementptr inbounds %struct.voxel* %0, i32 0, i32 2\l  %1 = load i8* %celltype10, align 1\l  %conv11 = sext i8 %1 to i32\l  %cmp12 = icmp eq i32 %conv11, 3\l  br i1 %cmp12, label %if.then.14, label %if.end.18\l|{<s0>T|<s1>F}}"];
	Node0x5f5dea0:s0 -> Node0x5f5def0;
	Node0x5f5dea0:s1 -> Node0x5f5df40;
	Node0x5f5def0 [shape=record,label="{if.then.14:                                       \l  %2 = load %struct.voxel** %v.addr, align 8\l  %cell15 = getelementptr inbounds %struct.voxel* %2, i32 0, i32 1\l  %3 = load i8** %cell15, align 8\l  %4 = bitcast i8* %3 to %struct.grid*\l  store %struct.grid* %4, %struct.grid** %g, align 8\l  %5 = load %struct.grid** %g, align 8\l  call void @prn_grid(%struct.grid* %5)\l  br label %if.end.18\l}"];
	Node0x5f5def0 -> Node0x5f5df40;
	Node0x5f5df40 [shape=record,label="{if.end.18:                                        \l  ret void\l}"];
}
