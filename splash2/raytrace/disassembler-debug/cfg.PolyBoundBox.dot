digraph "CFG for 'PolyBoundBox' function" {
	label="CFG for 'PolyBoundBox' function";

	Node0x5eef220 [shape=record,label="{entry:\l  %po.addr = alloca %struct.object*, align 8\l  %i = alloca i64, align 8\l  %pp = alloca %struct.poly*, align 8\l  %pe = alloca %struct.element*, align 8\l  %pbb = alloca %struct.bbox*, align 8\l  %minx = alloca double, align 8\l  %maxx = alloca double, align 8\l  %miny = alloca double, align 8\l  %maxy = alloca double, align 8\l  %minz = alloca double, align 8\l  %maxz = alloca double, align 8\l  store %struct.object* %po, %struct.object** %po.addr, align 8\l  %0 = load %struct.object** %po.addr, align 8\l  %pelem = getelementptr inbounds %struct.object* %0, i32 0, i32 3\l  %1 = load %struct.element** %pelem, align 8\l  store %struct.element* %1, %struct.element** %pe, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5eef220 -> Node0x5eef270;
	Node0x5eef270 [shape=record,label="{for.cond:                                         \l  %2 = load i64* %i, align 8\l  %3 = load %struct.object** %po.addr, align 8\l  %numelements = getelementptr inbounds %struct.object* %3, i32 0, i32 4\l  %4 = load i64* %numelements, align 8\l  %cmp = icmp slt i64 %2, %4\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5eef270:s0 -> Node0x5eef2c0;
	Node0x5eef270:s1 -> Node0x5eef900;
	Node0x5eef2c0 [shape=record,label="{for.body:                                         \l  %5 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %5, i32 0, i32 3\l  %6 = load i8** %data, align 8\l  %7 = bitcast i8* %6 to %struct.poly*\l  store %struct.poly* %7, %struct.poly** %pp, align 8\l  %8 = load %struct.element** %pe, align 8\l  %9 = load %struct.poly** %pp, align 8\l  call void @PolyElementBoundBox(%struct.element* %8, %struct.poly* %9)\l  br label %cond.end\l}"];
	Node0x5eef2c0 -> Node0x5eef3b0;
	Node0x5eef310 [shape=record,label="{cond.true:                                        \l  br label %cond.end\l}"];
	Node0x5eef310 -> Node0x5eef3b0;
	Node0x5eef360 [shape=record,label="{cond.false:                                       \l  br label %cond.end\l}"];
	Node0x5eef360 -> Node0x5eef3b0;
	Node0x5eef3b0 [shape=record,label="{cond.end:                                         \l  br label %cond.end.15\l}"];
	Node0x5eef3b0 -> Node0x5eef4a0;
	Node0x5eef400 [shape=record,label="{cond.true.10:                                     \l  br label %cond.end.15\l}"];
	Node0x5eef400 -> Node0x5eef4a0;
	Node0x5eef450 [shape=record,label="{cond.false.11:                                    \l  br label %cond.end.15\l}"];
	Node0x5eef450 -> Node0x5eef4a0;
	Node0x5eef4a0 [shape=record,label="{cond.end.15:                                      \l  br label %cond.end.26\l}"];
	Node0x5eef4a0 -> Node0x5eef590;
	Node0x5eef4f0 [shape=record,label="{cond.true.21:                                     \l  br label %cond.end.26\l}"];
	Node0x5eef4f0 -> Node0x5eef590;
	Node0x5eef540 [shape=record,label="{cond.false.22:                                    \l  br label %cond.end.26\l}"];
	Node0x5eef540 -> Node0x5eef590;
	Node0x5eef590 [shape=record,label="{cond.end.26:                                      \l  br label %cond.end.36\l}"];
	Node0x5eef590 -> Node0x5eef680;
	Node0x5eef5e0 [shape=record,label="{cond.true.31:                                     \l  br label %cond.end.36\l}"];
	Node0x5eef5e0 -> Node0x5eef680;
	Node0x5eef630 [shape=record,label="{cond.false.32:                                    \l  br label %cond.end.36\l}"];
	Node0x5eef630 -> Node0x5eef680;
	Node0x5eef680 [shape=record,label="{cond.end.36:                                      \l  br label %cond.end.47\l}"];
	Node0x5eef680 -> Node0x5eef770;
	Node0x5eef6d0 [shape=record,label="{cond.true.42:                                     \l  br label %cond.end.47\l}"];
	Node0x5eef6d0 -> Node0x5eef770;
	Node0x5eef720 [shape=record,label="{cond.false.43:                                    \l  br label %cond.end.47\l}"];
	Node0x5eef720 -> Node0x5eef770;
	Node0x5eef770 [shape=record,label="{cond.end.47:                                      \l  br label %cond.end.58\l}"];
	Node0x5eef770 -> Node0x5eef860;
	Node0x5eef7c0 [shape=record,label="{cond.true.53:                                     \l  br label %cond.end.58\l}"];
	Node0x5eef7c0 -> Node0x5eef860;
	Node0x5eef810 [shape=record,label="{cond.false.54:                                    \l  br label %cond.end.58\l}"];
	Node0x5eef810 -> Node0x5eef860;
	Node0x5eef860 [shape=record,label="{cond.end.58:                                      \l  %10 = load %struct.element** %pe, align 8\l  %incdec.ptr = getelementptr inbounds %struct.element* %10, i32 1\l  store %struct.element* %incdec.ptr, %struct.element** %pe, align 8\l  br label %for.inc\l}"];
	Node0x5eef860 -> Node0x5eef8b0;
	Node0x5eef8b0 [shape=record,label="{for.inc:                                          \l  %11 = load i64* %i, align 8\l  %inc = add nsw i64 %11, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5eef8b0 -> Node0x5eef270;
	Node0x5eef900 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
