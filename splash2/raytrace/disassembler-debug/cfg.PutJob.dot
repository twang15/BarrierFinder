digraph "CFG for 'PutJob' function" {
	label="CFG for 'PutJob' function";

	Node0x60e4120 [shape=record,label="{entry:\l  %xs.addr = alloca i64, align 8\l  %ys.addr = alloca i64, align 8\l  %xe.addr = alloca i64, align 8\l  %ye.addr = alloca i64, align 8\l  %xbe.addr = alloca i64, align 8\l  %ybe.addr = alloca i64, align 8\l  %pid.addr = alloca i64, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %xb_addr = alloca i64, align 8\l  %yb_addr = alloca i64, align 8\l  %xb_end = alloca i64, align 8\l  %yb_end = alloca i64, align 8\l  %xb_size = alloca i64, align 8\l  %yb_size = alloca i64, align 8\l  %wpentry = alloca %struct.wpjob*, align 8\l  store i64 %xs, i64* %xs.addr, align 8\l  store i64 %ys, i64* %ys.addr, align 8\l  store i64 %xe, i64* %xe.addr, align 8\l  store i64 %ye, i64* %ye.addr, align 8\l  store i64 %xbe, i64* %xbe.addr, align 8\l  store i64 %ybe, i64* %ybe.addr, align 8\l  store i64 %pid, i64* %pid.addr, align 8\l  %0 = load i64* %xs.addr, align 8\l  store i64 %0, i64* %xb_addr, align 8\l  %1 = load i64* %ys.addr, align 8\l  store i64 %1, i64* %yb_addr, align 8\l  %2 = load i64* %xb_addr, align 8\l  %3 = load i64* %xe.addr, align 8\l  %add = add nsw i64 %2, %3\l  %sub = sub nsw i64 %add, 1\l  store i64 %sub, i64* %xb_end, align 8\l  %4 = load i64* %yb_addr, align 8\l  %5 = load i64* %ye.addr, align 8\l  %add1 = add nsw i64 %4, %5\l  %sub2 = sub nsw i64 %add1, 1\l  store i64 %sub2, i64* %yb_end, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60e4120 -> Node0x60e4170;
	Node0x60e4170 [shape=record,label="{for.cond:                                         \l  %6 = load i64* %i, align 8\l  %7 = load i64* %ye.addr, align 8\l  %cmp = icmp slt i64 %6, %7\l  br i1 %cmp, label %for.body, label %for.end.35\l|{<s0>T|<s1>F}}"];
	Node0x60e4170:s0 -> Node0x60e41c0;
	Node0x60e4170:s1 -> Node0x60e56e0;
	Node0x60e41c0 [shape=record,label="{for.body:                                         \l  store i64 0, i64* %j, align 8\l  br label %for.cond.3\l}"];
	Node0x60e41c0 -> Node0x60e4210;
	Node0x60e4210 [shape=record,label="{for.cond.3:                                       \l  %8 = load i64* %j, align 8\l  %9 = load i64* %xe.addr, align 8\l  %cmp4 = icmp slt i64 %8, %9\l  br i1 %cmp4, label %for.body.5, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x60e4210:s0 -> Node0x60e4260;
	Node0x60e4210:s1 -> Node0x60e5640;
	Node0x60e4260 [shape=record,label="{for.body.5:                                       \l  %10 = load i64* %xb_addr, align 8\l  %11 = load i64* %xbe.addr, align 8\l  %add6 = add nsw i64 %10, %11\l  %sub7 = sub nsw i64 %add6, 1\l  %12 = load i64* %xb_end, align 8\l  %cmp8 = icmp sle i64 %sub7, %12\l  br i1 %cmp8, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x60e4260:s0 -> Node0x60e42b0;
	Node0x60e4260:s1 -> Node0x60e4300;
	Node0x60e42b0 [shape=record,label="{if.then:                                          \l  %13 = load i64* %xbe.addr, align 8\l  store i64 %13, i64* %xb_size, align 8\l  br label %if.end\l}"];
	Node0x60e42b0 -> Node0x60e4350;
	Node0x60e4300 [shape=record,label="{if.else:                                          \l  %14 = load i64* %xb_end, align 8\l  %15 = load i64* %xb_addr, align 8\l  %sub9 = sub nsw i64 %14, %15\l  %add10 = add nsw i64 %sub9, 1\l  store i64 %add10, i64* %xb_size, align 8\l  br label %if.end\l}"];
	Node0x60e4300 -> Node0x60e4350;
	Node0x60e4350 [shape=record,label="{if.end:                                           \l  %16 = load i64* %yb_addr, align 8\l  %17 = load i64* %ybe.addr, align 8\l  %add11 = add nsw i64 %16, %17\l  %sub12 = sub nsw i64 %add11, 1\l  %18 = load i64* %yb_end, align 8\l  %cmp13 = icmp sle i64 %sub12, %18\l  br i1 %cmp13, label %if.then.14, label %if.else.15\l|{<s0>T|<s1>F}}"];
	Node0x60e4350:s0 -> Node0x60e43a0;
	Node0x60e4350:s1 -> Node0x60e43f0;
	Node0x60e43a0 [shape=record,label="{if.then.14:                                       \l  %19 = load i64* %ybe.addr, align 8\l  store i64 %19, i64* %yb_size, align 8\l  br label %if.end.18\l}"];
	Node0x60e43a0 -> Node0x60e4440;
	Node0x60e43f0 [shape=record,label="{if.else.15:                                       \l  %20 = load i64* %yb_end, align 8\l  %21 = load i64* %yb_addr, align 8\l  %sub16 = sub nsw i64 %20, %21\l  %add17 = add nsw i64 %sub16, 1\l  store i64 %add17, i64* %yb_size, align 8\l  br label %if.end.18\l}"];
	Node0x60e43f0 -> Node0x60e4440;
	Node0x60e4440 [shape=record,label="{if.end.18:                                        \l  %call = call i8* @GlobalMalloc(i64 40, i8* getelementptr inbounds ([11 x\l... i8]* @.str.452, i32 0, i32 0))\l  %22 = bitcast i8* %call to %struct.wpjob*\l  store %struct.wpjob* %22, %struct.wpjob** %wpentry, align 8\l  %23 = load i64* %xb_addr, align 8\l  %24 = load %struct.wpjob** %wpentry, align 8\l  %xpix = getelementptr inbounds %struct.wpjob* %24, i32 0, i32 1\l  store i64 %23, i64* %xpix, align 8\l  %25 = load i64* %yb_addr, align 8\l  %26 = load %struct.wpjob** %wpentry, align 8\l  %ypix = getelementptr inbounds %struct.wpjob* %26, i32 0, i32 0\l  store i64 %25, i64* %ypix, align 8\l  %27 = load i64* %xb_size, align 8\l  %28 = load %struct.wpjob** %wpentry, align 8\l  %xdim = getelementptr inbounds %struct.wpjob* %28, i32 0, i32 2\l  store i64 %27, i64* %xdim, align 8\l  %29 = load i64* %yb_size, align 8\l  %30 = load %struct.wpjob** %wpentry, align 8\l  %ydim = getelementptr inbounds %struct.wpjob* %30, i32 0, i32 3\l  store i64 %29, i64* %ydim, align 8\l  %31 = load i64* %pid.addr, align 8\l  %32 = load %struct.gmem** @gm, align 8\l  %workpool = getelementptr inbounds %struct.gmem* %32, i32 0, i32 7\l  %arrayidx = getelementptr inbounds [128 x [256 x %struct.wpjob*]]*\l... %workpool, i32 0, i64 %31\l  %arrayidx19 = getelementptr inbounds [256 x %struct.wpjob*]* %arrayidx, i32\l... 0, i64 0\l  %33 = load %struct.wpjob** %arrayidx19, align 8\l  %tobool = icmp ne %struct.wpjob* %33, null\l  br i1 %tobool, label %if.else.21, label %if.then.20\l|{<s0>T|<s1>F}}"];
	Node0x60e4440:s0 -> Node0x60e5550;
	Node0x60e4440:s1 -> Node0x60e5500;
	Node0x60e5500 [shape=record,label="{if.then.20:                                       \l  %34 = load %struct.wpjob** %wpentry, align 8\l  %next = getelementptr inbounds %struct.wpjob* %34, i32 0, i32 4\l  store %struct.wpjob* null, %struct.wpjob** %next, align 8\l  br label %if.end.26\l}"];
	Node0x60e5500 -> Node0x60e55a0;
	Node0x60e5550 [shape=record,label="{if.else.21:                                       \l  %35 = load i64* %pid.addr, align 8\l  %36 = load %struct.gmem** @gm, align 8\l  %workpool22 = getelementptr inbounds %struct.gmem* %36, i32 0, i32 7\l  %arrayidx23 = getelementptr inbounds [128 x [256 x %struct.wpjob*]]*\l... %workpool22, i32 0, i64 %35\l  %arrayidx24 = getelementptr inbounds [256 x %struct.wpjob*]* %arrayidx23,\l... i32 0, i64 0\l  %37 = load %struct.wpjob** %arrayidx24, align 8\l  %38 = load %struct.wpjob** %wpentry, align 8\l  %next25 = getelementptr inbounds %struct.wpjob* %38, i32 0, i32 4\l  store %struct.wpjob* %37, %struct.wpjob** %next25, align 8\l  br label %if.end.26\l}"];
	Node0x60e5550 -> Node0x60e55a0;
	Node0x60e55a0 [shape=record,label="{if.end.26:                                        \l  %39 = load %struct.wpjob** %wpentry, align 8\l  %40 = load i64* %pid.addr, align 8\l  %41 = load %struct.gmem** @gm, align 8\l  %workpool27 = getelementptr inbounds %struct.gmem* %41, i32 0, i32 7\l  %arrayidx28 = getelementptr inbounds [128 x [256 x %struct.wpjob*]]*\l... %workpool27, i32 0, i64 %40\l  %arrayidx29 = getelementptr inbounds [256 x %struct.wpjob*]* %arrayidx28,\l... i32 0, i64 0\l  store %struct.wpjob* %39, %struct.wpjob** %arrayidx29, align 8\l  %42 = load i64* %xbe.addr, align 8\l  %43 = load i64* %xb_addr, align 8\l  %add30 = add nsw i64 %43, %42\l  store i64 %add30, i64* %xb_addr, align 8\l  br label %for.inc\l}"];
	Node0x60e55a0 -> Node0x60e55f0;
	Node0x60e55f0 [shape=record,label="{for.inc:                                          \l  %44 = load i64* %xbe.addr, align 8\l  %45 = load i64* %j, align 8\l  %add31 = add nsw i64 %45, %44\l  store i64 %add31, i64* %j, align 8\l  br label %for.cond.3\l}"];
	Node0x60e55f0 -> Node0x60e4210;
	Node0x60e5640 [shape=record,label="{for.end:                                          \l  %46 = load i64* %xs.addr, align 8\l  store i64 %46, i64* %xb_addr, align 8\l  %47 = load i64* %ybe.addr, align 8\l  %48 = load i64* %yb_addr, align 8\l  %add32 = add nsw i64 %48, %47\l  store i64 %add32, i64* %yb_addr, align 8\l  br label %for.inc.33\l}"];
	Node0x60e5640 -> Node0x60e5690;
	Node0x60e5690 [shape=record,label="{for.inc.33:                                       \l  %49 = load i64* %ybe.addr, align 8\l  %50 = load i64* %i, align 8\l  %add34 = add nsw i64 %50, %49\l  store i64 %add34, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60e5690 -> Node0x60e4170;
	Node0x60e56e0 [shape=record,label="{for.end.35:                                       \l  ret void\l}"];
}
