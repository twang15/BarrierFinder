digraph "CFG for 'init_ray' function" {
	label="CFG for 'init_ray' function";

	Node0x5f20430 [shape=record,label="{entry:\l  %retval = alloca %struct.voxel*, align 8\l  %r.addr = alloca %struct.ray*, align 8\l  %g.addr = alloca %struct.grid*, align 8\l  %status = alloca i64, align 8\l  %indx = alloca i64, align 8\l  %grid_id = alloca i64, align 8\l  %i_in = alloca i64, align 8\l  %i_out = alloca i64, align 8\l  %i = alloca i64, align 8\l  %il = alloca i64, align 8\l  %ih = alloca i64, align 8\l  %t_in = alloca double, align 8\l  %t_out = alloca double, align 8\l  %tl = alloca double, align 8\l  %th = alloca double, align 8\l  %t = alloca [6 x double], align 16\l  %v = alloca %struct.voxel*, align 8\l  %gr = alloca %struct.grid*, align 8\l  %ri = alloca %struct.rayinfo*, align 8\l  store %struct.ray* %r, %struct.ray** %r.addr, align 8\l  store %struct.grid* %g, %struct.grid** %g.addr, align 8\l  %0 = load %struct.ray** %r.addr, align 8\l  call void @reset_rayinfo(%struct.ray* %0)\l  %1 = load %struct.ray** %r.addr, align 8\l  %D = getelementptr inbounds %struct.ray* %1, i32 0, i32 4\l  %arrayidx = getelementptr inbounds [3 x double]* %D, i32 0, i64 0\l  %2 = load double* %arrayidx, align 8\l  %cmp = fcmp oeq double %2, 0.000000e+00\l  br i1 %cmp, label %if.then, label %if.else.13\l|{<s0>T|<s1>F}}"];
	Node0x5f20430:s0 -> Node0x5f20480;
	Node0x5f20430:s1 -> Node0x5f9b750;
	Node0x5f20480 [shape=record,label="{if.then:                                          \l  %3 = load %struct.ray** %r.addr, align 8\l  %P = getelementptr inbounds %struct.ray* %3, i32 0, i32 3\l  %arrayidx1 = getelementptr inbounds [3 x double]* %P, i32 0, i64 0\l  %4 = load double* %arrayidx1, align 8\l  %5 = load %struct.grid** %g.addr, align 8\l  %min = getelementptr inbounds %struct.grid* %5, i32 0, i32 7\l  %arrayidx2 = getelementptr inbounds [3 x double]* %min, i32 0, i64 0\l  %6 = load double* %arrayidx2, align 8\l  %cmp3 = fcmp oge double %4, %6\l  br i1 %cmp3, label %land.lhs.true, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5f20480:s0 -> Node0x5f9b610;
	Node0x5f20480:s1 -> Node0x5f9b6b0;
	Node0x5f9b610 [shape=record,label="{land.lhs.true:                                    \l  %7 = load %struct.ray** %r.addr, align 8\l  %P4 = getelementptr inbounds %struct.ray* %7, i32 0, i32 3\l  %arrayidx5 = getelementptr inbounds [3 x double]* %P4, i32 0, i64 0\l  %8 = load double* %arrayidx5, align 8\l  %9 = load %struct.grid** %g.addr, align 8\l  %min6 = getelementptr inbounds %struct.grid* %9, i32 0, i32 7\l  %arrayidx7 = getelementptr inbounds [3 x double]* %min6, i32 0, i64 0\l  %10 = load double* %arrayidx7, align 8\l  %11 = load %struct.grid** %g.addr, align 8\l  %cellsize = getelementptr inbounds %struct.grid* %11, i32 0, i32 8\l  %arrayidx8 = getelementptr inbounds [3 x double]* %cellsize, i32 0, i64 0\l  %12 = load double* %arrayidx8, align 8\l  %add = fadd double %10, %12\l  %cmp9 = fcmp ole double %8, %add\l  br i1 %cmp9, label %if.then.10, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5f9b610:s0 -> Node0x5f9b660;
	Node0x5f9b610:s1 -> Node0x5f9b6b0;
	Node0x5f9b660 [shape=record,label="{if.then.10:                                       \l  %arrayidx11 = getelementptr inbounds [6 x double]* %t, i32 0, i64 0\l  store double -1.000000e+32, double* %arrayidx11, align 8\l  br label %if.end\l}"];
	Node0x5f9b660 -> Node0x5f9b700;
	Node0x5f9b6b0 [shape=record,label="{if.else:                                          \l  %arrayidx12 = getelementptr inbounds [6 x double]* %t, i32 0, i64 0\l  store double 1.000000e+32, double* %arrayidx12, align 8\l  br label %if.end\l}"];
	Node0x5f9b6b0 -> Node0x5f9b700;
	Node0x5f9b700 [shape=record,label="{if.end:                                           \l  br label %if.end.21\l}"];
	Node0x5f9b700 -> Node0x5f9b7a0;
	Node0x5f9b750 [shape=record,label="{if.else.13:                                       \l  %13 = load %struct.grid** %g.addr, align 8\l  %min14 = getelementptr inbounds %struct.grid* %13, i32 0, i32 7\l  %arrayidx15 = getelementptr inbounds [3 x double]* %min14, i32 0, i64 0\l  %14 = load double* %arrayidx15, align 8\l  %15 = load %struct.ray** %r.addr, align 8\l  %P16 = getelementptr inbounds %struct.ray* %15, i32 0, i32 3\l  %arrayidx17 = getelementptr inbounds [3 x double]* %P16, i32 0, i64 0\l  %16 = load double* %arrayidx17, align 8\l  %sub = fsub double %14, %16\l  %17 = load %struct.ray** %r.addr, align 8\l  %D18 = getelementptr inbounds %struct.ray* %17, i32 0, i32 4\l  %arrayidx19 = getelementptr inbounds [3 x double]* %D18, i32 0, i64 0\l  %18 = load double* %arrayidx19, align 8\l  %div = fdiv double %sub, %18\l  %arrayidx20 = getelementptr inbounds [6 x double]* %t, i32 0, i64 0\l  store double %div, double* %arrayidx20, align 8\l  br label %if.end.21\l}"];
	Node0x5f9b750 -> Node0x5f9b7a0;
	Node0x5f9b7a0 [shape=record,label="{if.end.21:                                        \l  %19 = load %struct.ray** %r.addr, align 8\l  %D22 = getelementptr inbounds %struct.ray* %19, i32 0, i32 4\l  %arrayidx23 = getelementptr inbounds [3 x double]* %D22, i32 0, i64 1\l  %20 = load double* %arrayidx23, align 8\l  %cmp24 = fcmp oeq double %20, 0.000000e+00\l  br i1 %cmp24, label %if.then.25, label %if.else.45\l|{<s0>T|<s1>F}}"];
	Node0x5f9b7a0:s0 -> Node0x5f9b7f0;
	Node0x5f9b7a0:s1 -> Node0x5f9b980;
	Node0x5f9b7f0 [shape=record,label="{if.then.25:                                       \l  %21 = load %struct.ray** %r.addr, align 8\l  %P26 = getelementptr inbounds %struct.ray* %21, i32 0, i32 3\l  %arrayidx27 = getelementptr inbounds [3 x double]* %P26, i32 0, i64 1\l  %22 = load double* %arrayidx27, align 8\l  %23 = load %struct.grid** %g.addr, align 8\l  %min28 = getelementptr inbounds %struct.grid* %23, i32 0, i32 7\l  %arrayidx29 = getelementptr inbounds [3 x double]* %min28, i32 0, i64 1\l  %24 = load double* %arrayidx29, align 8\l  %cmp30 = fcmp oge double %22, %24\l  br i1 %cmp30, label %land.lhs.true.31, label %if.else.42\l|{<s0>T|<s1>F}}"];
	Node0x5f9b7f0:s0 -> Node0x5f9b840;
	Node0x5f9b7f0:s1 -> Node0x5f9b8e0;
	Node0x5f9b840 [shape=record,label="{land.lhs.true.31:                                 \l  %25 = load %struct.ray** %r.addr, align 8\l  %P32 = getelementptr inbounds %struct.ray* %25, i32 0, i32 3\l  %arrayidx33 = getelementptr inbounds [3 x double]* %P32, i32 0, i64 1\l  %26 = load double* %arrayidx33, align 8\l  %27 = load %struct.grid** %g.addr, align 8\l  %min34 = getelementptr inbounds %struct.grid* %27, i32 0, i32 7\l  %arrayidx35 = getelementptr inbounds [3 x double]* %min34, i32 0, i64 1\l  %28 = load double* %arrayidx35, align 8\l  %29 = load %struct.grid** %g.addr, align 8\l  %cellsize36 = getelementptr inbounds %struct.grid* %29, i32 0, i32 8\l  %arrayidx37 = getelementptr inbounds [3 x double]* %cellsize36, i32 0, i64 1\l  %30 = load double* %arrayidx37, align 8\l  %add38 = fadd double %28, %30\l  %cmp39 = fcmp ole double %26, %add38\l  br i1 %cmp39, label %if.then.40, label %if.else.42\l|{<s0>T|<s1>F}}"];
	Node0x5f9b840:s0 -> Node0x5f9b890;
	Node0x5f9b840:s1 -> Node0x5f9b8e0;
	Node0x5f9b890 [shape=record,label="{if.then.40:                                       \l  %arrayidx41 = getelementptr inbounds [6 x double]* %t, i32 0, i64 1\l  store double -1.000000e+32, double* %arrayidx41, align 8\l  br label %if.end.44\l}"];
	Node0x5f9b890 -> Node0x5f9b930;
	Node0x5f9b8e0 [shape=record,label="{if.else.42:                                       \l  %arrayidx43 = getelementptr inbounds [6 x double]* %t, i32 0, i64 1\l  store double 1.000000e+32, double* %arrayidx43, align 8\l  br label %if.end.44\l}"];
	Node0x5f9b8e0 -> Node0x5f9b930;
	Node0x5f9b930 [shape=record,label="{if.end.44:                                        \l  br label %if.end.55\l}"];
	Node0x5f9b930 -> Node0x5f9b9d0;
	Node0x5f9b980 [shape=record,label="{if.else.45:                                       \l  %31 = load %struct.grid** %g.addr, align 8\l  %min46 = getelementptr inbounds %struct.grid* %31, i32 0, i32 7\l  %arrayidx47 = getelementptr inbounds [3 x double]* %min46, i32 0, i64 1\l  %32 = load double* %arrayidx47, align 8\l  %33 = load %struct.ray** %r.addr, align 8\l  %P48 = getelementptr inbounds %struct.ray* %33, i32 0, i32 3\l  %arrayidx49 = getelementptr inbounds [3 x double]* %P48, i32 0, i64 1\l  %34 = load double* %arrayidx49, align 8\l  %sub50 = fsub double %32, %34\l  %35 = load %struct.ray** %r.addr, align 8\l  %D51 = getelementptr inbounds %struct.ray* %35, i32 0, i32 4\l  %arrayidx52 = getelementptr inbounds [3 x double]* %D51, i32 0, i64 1\l  %36 = load double* %arrayidx52, align 8\l  %div53 = fdiv double %sub50, %36\l  %arrayidx54 = getelementptr inbounds [6 x double]* %t, i32 0, i64 1\l  store double %div53, double* %arrayidx54, align 8\l  br label %if.end.55\l}"];
	Node0x5f9b980 -> Node0x5f9b9d0;
	Node0x5f9b9d0 [shape=record,label="{if.end.55:                                        \l  %37 = load %struct.ray** %r.addr, align 8\l  %D56 = getelementptr inbounds %struct.ray* %37, i32 0, i32 4\l  %arrayidx57 = getelementptr inbounds [3 x double]* %D56, i32 0, i64 2\l  %38 = load double* %arrayidx57, align 8\l  %cmp58 = fcmp oeq double %38, 0.000000e+00\l  br i1 %cmp58, label %if.then.59, label %if.else.79\l|{<s0>T|<s1>F}}"];
	Node0x5f9b9d0:s0 -> Node0x5f9ba20;
	Node0x5f9b9d0:s1 -> Node0x5f9bbb0;
	Node0x5f9ba20 [shape=record,label="{if.then.59:                                       \l  %39 = load %struct.ray** %r.addr, align 8\l  %P60 = getelementptr inbounds %struct.ray* %39, i32 0, i32 3\l  %arrayidx61 = getelementptr inbounds [3 x double]* %P60, i32 0, i64 2\l  %40 = load double* %arrayidx61, align 8\l  %41 = load %struct.grid** %g.addr, align 8\l  %min62 = getelementptr inbounds %struct.grid* %41, i32 0, i32 7\l  %arrayidx63 = getelementptr inbounds [3 x double]* %min62, i32 0, i64 2\l  %42 = load double* %arrayidx63, align 8\l  %cmp64 = fcmp oge double %40, %42\l  br i1 %cmp64, label %land.lhs.true.65, label %if.else.76\l|{<s0>T|<s1>F}}"];
	Node0x5f9ba20:s0 -> Node0x5f9ba70;
	Node0x5f9ba20:s1 -> Node0x5f9bb10;
	Node0x5f9ba70 [shape=record,label="{land.lhs.true.65:                                 \l  %43 = load %struct.ray** %r.addr, align 8\l  %P66 = getelementptr inbounds %struct.ray* %43, i32 0, i32 3\l  %arrayidx67 = getelementptr inbounds [3 x double]* %P66, i32 0, i64 2\l  %44 = load double* %arrayidx67, align 8\l  %45 = load %struct.grid** %g.addr, align 8\l  %min68 = getelementptr inbounds %struct.grid* %45, i32 0, i32 7\l  %arrayidx69 = getelementptr inbounds [3 x double]* %min68, i32 0, i64 2\l  %46 = load double* %arrayidx69, align 8\l  %47 = load %struct.grid** %g.addr, align 8\l  %cellsize70 = getelementptr inbounds %struct.grid* %47, i32 0, i32 8\l  %arrayidx71 = getelementptr inbounds [3 x double]* %cellsize70, i32 0, i64 2\l  %48 = load double* %arrayidx71, align 8\l  %add72 = fadd double %46, %48\l  %cmp73 = fcmp ole double %44, %add72\l  br i1 %cmp73, label %if.then.74, label %if.else.76\l|{<s0>T|<s1>F}}"];
	Node0x5f9ba70:s0 -> Node0x5f9bac0;
	Node0x5f9ba70:s1 -> Node0x5f9bb10;
	Node0x5f9bac0 [shape=record,label="{if.then.74:                                       \l  %arrayidx75 = getelementptr inbounds [6 x double]* %t, i32 0, i64 2\l  store double -1.000000e+32, double* %arrayidx75, align 8\l  br label %if.end.78\l}"];
	Node0x5f9bac0 -> Node0x5f9bb60;
	Node0x5f9bb10 [shape=record,label="{if.else.76:                                       \l  %arrayidx77 = getelementptr inbounds [6 x double]* %t, i32 0, i64 2\l  store double 1.000000e+32, double* %arrayidx77, align 8\l  br label %if.end.78\l}"];
	Node0x5f9bb10 -> Node0x5f9bb60;
	Node0x5f9bb60 [shape=record,label="{if.end.78:                                        \l  br label %if.end.89\l}"];
	Node0x5f9bb60 -> Node0x5f9bc00;
	Node0x5f9bbb0 [shape=record,label="{if.else.79:                                       \l  %49 = load %struct.grid** %g.addr, align 8\l  %min80 = getelementptr inbounds %struct.grid* %49, i32 0, i32 7\l  %arrayidx81 = getelementptr inbounds [3 x double]* %min80, i32 0, i64 2\l  %50 = load double* %arrayidx81, align 8\l  %51 = load %struct.ray** %r.addr, align 8\l  %P82 = getelementptr inbounds %struct.ray* %51, i32 0, i32 3\l  %arrayidx83 = getelementptr inbounds [3 x double]* %P82, i32 0, i64 2\l  %52 = load double* %arrayidx83, align 8\l  %sub84 = fsub double %50, %52\l  %53 = load %struct.ray** %r.addr, align 8\l  %D85 = getelementptr inbounds %struct.ray* %53, i32 0, i32 4\l  %arrayidx86 = getelementptr inbounds [3 x double]* %D85, i32 0, i64 2\l  %54 = load double* %arrayidx86, align 8\l  %div87 = fdiv double %sub84, %54\l  %arrayidx88 = getelementptr inbounds [6 x double]* %t, i32 0, i64 2\l  store double %div87, double* %arrayidx88, align 8\l  br label %if.end.89\l}"];
	Node0x5f9bbb0 -> Node0x5f9bc00;
	Node0x5f9bc00 [shape=record,label="{if.end.89:                                        \l  %55 = load %struct.ray** %r.addr, align 8\l  %D90 = getelementptr inbounds %struct.ray* %55, i32 0, i32 4\l  %arrayidx91 = getelementptr inbounds [3 x double]* %D90, i32 0, i64 0\l  %56 = load double* %arrayidx91, align 8\l  %cmp92 = fcmp oeq double %56, 0.000000e+00\l  br i1 %cmp92, label %if.then.93, label %if.else.113\l|{<s0>T|<s1>F}}"];
	Node0x5f9bc00:s0 -> Node0x5f9bc50;
	Node0x5f9bc00:s1 -> Node0x5f9bde0;
	Node0x5f9bc50 [shape=record,label="{if.then.93:                                       \l  %57 = load %struct.ray** %r.addr, align 8\l  %P94 = getelementptr inbounds %struct.ray* %57, i32 0, i32 3\l  %arrayidx95 = getelementptr inbounds [3 x double]* %P94, i32 0, i64 0\l  %58 = load double* %arrayidx95, align 8\l  %59 = load %struct.grid** %g.addr, align 8\l  %min96 = getelementptr inbounds %struct.grid* %59, i32 0, i32 7\l  %arrayidx97 = getelementptr inbounds [3 x double]* %min96, i32 0, i64 0\l  %60 = load double* %arrayidx97, align 8\l  %cmp98 = fcmp oge double %58, %60\l  br i1 %cmp98, label %land.lhs.true.99, label %if.else.110\l|{<s0>T|<s1>F}}"];
	Node0x5f9bc50:s0 -> Node0x5f9bca0;
	Node0x5f9bc50:s1 -> Node0x5f9bd40;
	Node0x5f9bca0 [shape=record,label="{land.lhs.true.99:                                 \l  %61 = load %struct.ray** %r.addr, align 8\l  %P100 = getelementptr inbounds %struct.ray* %61, i32 0, i32 3\l  %arrayidx101 = getelementptr inbounds [3 x double]* %P100, i32 0, i64 0\l  %62 = load double* %arrayidx101, align 8\l  %63 = load %struct.grid** %g.addr, align 8\l  %min102 = getelementptr inbounds %struct.grid* %63, i32 0, i32 7\l  %arrayidx103 = getelementptr inbounds [3 x double]* %min102, i32 0, i64 0\l  %64 = load double* %arrayidx103, align 8\l  %65 = load %struct.grid** %g.addr, align 8\l  %cellsize104 = getelementptr inbounds %struct.grid* %65, i32 0, i32 8\l  %arrayidx105 = getelementptr inbounds [3 x double]* %cellsize104, i32 0, i64\l... 0\l  %66 = load double* %arrayidx105, align 8\l  %add106 = fadd double %64, %66\l  %cmp107 = fcmp ole double %62, %add106\l  br i1 %cmp107, label %if.then.108, label %if.else.110\l|{<s0>T|<s1>F}}"];
	Node0x5f9bca0:s0 -> Node0x5f9bcf0;
	Node0x5f9bca0:s1 -> Node0x5f9bd40;
	Node0x5f9bcf0 [shape=record,label="{if.then.108:                                      \l  %arrayidx109 = getelementptr inbounds [6 x double]* %t, i32 0, i64 3\l  store double 1.000000e+32, double* %arrayidx109, align 8\l  br label %if.end.112\l}"];
	Node0x5f9bcf0 -> Node0x5f9bd90;
	Node0x5f9bd40 [shape=record,label="{if.else.110:                                      \l  %arrayidx111 = getelementptr inbounds [6 x double]* %t, i32 0, i64 3\l  store double 1.000000e+32, double* %arrayidx111, align 8\l  br label %if.end.112\l}"];
	Node0x5f9bd40 -> Node0x5f9bd90;
	Node0x5f9bd90 [shape=record,label="{if.end.112:                                       \l  br label %if.end.126\l}"];
	Node0x5f9bd90 -> Node0x5f9be30;
	Node0x5f9bde0 [shape=record,label="{if.else.113:                                      \l  %67 = load %struct.grid** %g.addr, align 8\l  %min114 = getelementptr inbounds %struct.grid* %67, i32 0, i32 7\l  %arrayidx115 = getelementptr inbounds [3 x double]* %min114, i32 0, i64 0\l  %68 = load double* %arrayidx115, align 8\l  %69 = load %struct.grid** %g.addr, align 8\l  %cellsize116 = getelementptr inbounds %struct.grid* %69, i32 0, i32 8\l  %arrayidx117 = getelementptr inbounds [3 x double]* %cellsize116, i32 0, i64\l... 0\l  %70 = load double* %arrayidx117, align 8\l  %add118 = fadd double %68, %70\l  %71 = load %struct.ray** %r.addr, align 8\l  %P119 = getelementptr inbounds %struct.ray* %71, i32 0, i32 3\l  %arrayidx120 = getelementptr inbounds [3 x double]* %P119, i32 0, i64 0\l  %72 = load double* %arrayidx120, align 8\l  %sub121 = fsub double %add118, %72\l  %73 = load %struct.ray** %r.addr, align 8\l  %D122 = getelementptr inbounds %struct.ray* %73, i32 0, i32 4\l  %arrayidx123 = getelementptr inbounds [3 x double]* %D122, i32 0, i64 0\l  %74 = load double* %arrayidx123, align 8\l  %div124 = fdiv double %sub121, %74\l  %arrayidx125 = getelementptr inbounds [6 x double]* %t, i32 0, i64 3\l  store double %div124, double* %arrayidx125, align 8\l  br label %if.end.126\l}"];
	Node0x5f9bde0 -> Node0x5f9be30;
	Node0x5f9be30 [shape=record,label="{if.end.126:                                       \l  %75 = load %struct.ray** %r.addr, align 8\l  %D127 = getelementptr inbounds %struct.ray* %75, i32 0, i32 4\l  %arrayidx128 = getelementptr inbounds [3 x double]* %D127, i32 0, i64 1\l  %76 = load double* %arrayidx128, align 8\l  %cmp129 = fcmp oeq double %76, 0.000000e+00\l  br i1 %cmp129, label %if.then.130, label %if.else.150\l|{<s0>T|<s1>F}}"];
	Node0x5f9be30:s0 -> Node0x5f9be80;
	Node0x5f9be30:s1 -> Node0x5f9c010;
	Node0x5f9be80 [shape=record,label="{if.then.130:                                      \l  %77 = load %struct.ray** %r.addr, align 8\l  %P131 = getelementptr inbounds %struct.ray* %77, i32 0, i32 3\l  %arrayidx132 = getelementptr inbounds [3 x double]* %P131, i32 0, i64 1\l  %78 = load double* %arrayidx132, align 8\l  %79 = load %struct.grid** %g.addr, align 8\l  %min133 = getelementptr inbounds %struct.grid* %79, i32 0, i32 7\l  %arrayidx134 = getelementptr inbounds [3 x double]* %min133, i32 0, i64 1\l  %80 = load double* %arrayidx134, align 8\l  %cmp135 = fcmp oge double %78, %80\l  br i1 %cmp135, label %land.lhs.true.136, label %if.else.147\l|{<s0>T|<s1>F}}"];
	Node0x5f9be80:s0 -> Node0x5f9bed0;
	Node0x5f9be80:s1 -> Node0x5f9bf70;
	Node0x5f9bed0 [shape=record,label="{land.lhs.true.136:                                \l  %81 = load %struct.ray** %r.addr, align 8\l  %P137 = getelementptr inbounds %struct.ray* %81, i32 0, i32 3\l  %arrayidx138 = getelementptr inbounds [3 x double]* %P137, i32 0, i64 1\l  %82 = load double* %arrayidx138, align 8\l  %83 = load %struct.grid** %g.addr, align 8\l  %min139 = getelementptr inbounds %struct.grid* %83, i32 0, i32 7\l  %arrayidx140 = getelementptr inbounds [3 x double]* %min139, i32 0, i64 1\l  %84 = load double* %arrayidx140, align 8\l  %85 = load %struct.grid** %g.addr, align 8\l  %cellsize141 = getelementptr inbounds %struct.grid* %85, i32 0, i32 8\l  %arrayidx142 = getelementptr inbounds [3 x double]* %cellsize141, i32 0, i64\l... 1\l  %86 = load double* %arrayidx142, align 8\l  %add143 = fadd double %84, %86\l  %cmp144 = fcmp ole double %82, %add143\l  br i1 %cmp144, label %if.then.145, label %if.else.147\l|{<s0>T|<s1>F}}"];
	Node0x5f9bed0:s0 -> Node0x5f9bf20;
	Node0x5f9bed0:s1 -> Node0x5f9bf70;
	Node0x5f9bf20 [shape=record,label="{if.then.145:                                      \l  %arrayidx146 = getelementptr inbounds [6 x double]* %t, i32 0, i64 4\l  store double 1.000000e+32, double* %arrayidx146, align 8\l  br label %if.end.149\l}"];
	Node0x5f9bf20 -> Node0x5f9bfc0;
	Node0x5f9bf70 [shape=record,label="{if.else.147:                                      \l  %arrayidx148 = getelementptr inbounds [6 x double]* %t, i32 0, i64 4\l  store double 1.000000e+32, double* %arrayidx148, align 8\l  br label %if.end.149\l}"];
	Node0x5f9bf70 -> Node0x5f9bfc0;
	Node0x5f9bfc0 [shape=record,label="{if.end.149:                                       \l  br label %if.end.163\l}"];
	Node0x5f9bfc0 -> Node0x5f9c060;
	Node0x5f9c010 [shape=record,label="{if.else.150:                                      \l  %87 = load %struct.grid** %g.addr, align 8\l  %min151 = getelementptr inbounds %struct.grid* %87, i32 0, i32 7\l  %arrayidx152 = getelementptr inbounds [3 x double]* %min151, i32 0, i64 1\l  %88 = load double* %arrayidx152, align 8\l  %89 = load %struct.grid** %g.addr, align 8\l  %cellsize153 = getelementptr inbounds %struct.grid* %89, i32 0, i32 8\l  %arrayidx154 = getelementptr inbounds [3 x double]* %cellsize153, i32 0, i64\l... 1\l  %90 = load double* %arrayidx154, align 8\l  %add155 = fadd double %88, %90\l  %91 = load %struct.ray** %r.addr, align 8\l  %P156 = getelementptr inbounds %struct.ray* %91, i32 0, i32 3\l  %arrayidx157 = getelementptr inbounds [3 x double]* %P156, i32 0, i64 1\l  %92 = load double* %arrayidx157, align 8\l  %sub158 = fsub double %add155, %92\l  %93 = load %struct.ray** %r.addr, align 8\l  %D159 = getelementptr inbounds %struct.ray* %93, i32 0, i32 4\l  %arrayidx160 = getelementptr inbounds [3 x double]* %D159, i32 0, i64 1\l  %94 = load double* %arrayidx160, align 8\l  %div161 = fdiv double %sub158, %94\l  %arrayidx162 = getelementptr inbounds [6 x double]* %t, i32 0, i64 4\l  store double %div161, double* %arrayidx162, align 8\l  br label %if.end.163\l}"];
	Node0x5f9c010 -> Node0x5f9c060;
	Node0x5f9c060 [shape=record,label="{if.end.163:                                       \l  %95 = load %struct.ray** %r.addr, align 8\l  %D164 = getelementptr inbounds %struct.ray* %95, i32 0, i32 4\l  %arrayidx165 = getelementptr inbounds [3 x double]* %D164, i32 0, i64 2\l  %96 = load double* %arrayidx165, align 8\l  %cmp166 = fcmp oeq double %96, 0.000000e+00\l  br i1 %cmp166, label %if.then.167, label %if.else.187\l|{<s0>T|<s1>F}}"];
	Node0x5f9c060:s0 -> Node0x5f9c0b0;
	Node0x5f9c060:s1 -> Node0x5f9c240;
	Node0x5f9c0b0 [shape=record,label="{if.then.167:                                      \l  %97 = load %struct.ray** %r.addr, align 8\l  %P168 = getelementptr inbounds %struct.ray* %97, i32 0, i32 3\l  %arrayidx169 = getelementptr inbounds [3 x double]* %P168, i32 0, i64 2\l  %98 = load double* %arrayidx169, align 8\l  %99 = load %struct.grid** %g.addr, align 8\l  %min170 = getelementptr inbounds %struct.grid* %99, i32 0, i32 7\l  %arrayidx171 = getelementptr inbounds [3 x double]* %min170, i32 0, i64 2\l  %100 = load double* %arrayidx171, align 8\l  %cmp172 = fcmp oge double %98, %100\l  br i1 %cmp172, label %land.lhs.true.173, label %if.else.184\l|{<s0>T|<s1>F}}"];
	Node0x5f9c0b0:s0 -> Node0x5f9c100;
	Node0x5f9c0b0:s1 -> Node0x5f9c1a0;
	Node0x5f9c100 [shape=record,label="{land.lhs.true.173:                                \l  %101 = load %struct.ray** %r.addr, align 8\l  %P174 = getelementptr inbounds %struct.ray* %101, i32 0, i32 3\l  %arrayidx175 = getelementptr inbounds [3 x double]* %P174, i32 0, i64 2\l  %102 = load double* %arrayidx175, align 8\l  %103 = load %struct.grid** %g.addr, align 8\l  %min176 = getelementptr inbounds %struct.grid* %103, i32 0, i32 7\l  %arrayidx177 = getelementptr inbounds [3 x double]* %min176, i32 0, i64 2\l  %104 = load double* %arrayidx177, align 8\l  %105 = load %struct.grid** %g.addr, align 8\l  %cellsize178 = getelementptr inbounds %struct.grid* %105, i32 0, i32 8\l  %arrayidx179 = getelementptr inbounds [3 x double]* %cellsize178, i32 0, i64\l... 2\l  %106 = load double* %arrayidx179, align 8\l  %add180 = fadd double %104, %106\l  %cmp181 = fcmp ole double %102, %add180\l  br i1 %cmp181, label %if.then.182, label %if.else.184\l|{<s0>T|<s1>F}}"];
	Node0x5f9c100:s0 -> Node0x5f9c150;
	Node0x5f9c100:s1 -> Node0x5f9c1a0;
	Node0x5f9c150 [shape=record,label="{if.then.182:                                      \l  %arrayidx183 = getelementptr inbounds [6 x double]* %t, i32 0, i64 5\l  store double 1.000000e+32, double* %arrayidx183, align 8\l  br label %if.end.186\l}"];
	Node0x5f9c150 -> Node0x5f9c1f0;
	Node0x5f9c1a0 [shape=record,label="{if.else.184:                                      \l  %arrayidx185 = getelementptr inbounds [6 x double]* %t, i32 0, i64 5\l  store double 1.000000e+32, double* %arrayidx185, align 8\l  br label %if.end.186\l}"];
	Node0x5f9c1a0 -> Node0x5f9c1f0;
	Node0x5f9c1f0 [shape=record,label="{if.end.186:                                       \l  br label %if.end.200\l}"];
	Node0x5f9c1f0 -> Node0x5f9c290;
	Node0x5f9c240 [shape=record,label="{if.else.187:                                      \l  %107 = load %struct.grid** %g.addr, align 8\l  %min188 = getelementptr inbounds %struct.grid* %107, i32 0, i32 7\l  %arrayidx189 = getelementptr inbounds [3 x double]* %min188, i32 0, i64 2\l  %108 = load double* %arrayidx189, align 8\l  %109 = load %struct.grid** %g.addr, align 8\l  %cellsize190 = getelementptr inbounds %struct.grid* %109, i32 0, i32 8\l  %arrayidx191 = getelementptr inbounds [3 x double]* %cellsize190, i32 0, i64\l... 2\l  %110 = load double* %arrayidx191, align 8\l  %add192 = fadd double %108, %110\l  %111 = load %struct.ray** %r.addr, align 8\l  %P193 = getelementptr inbounds %struct.ray* %111, i32 0, i32 3\l  %arrayidx194 = getelementptr inbounds [3 x double]* %P193, i32 0, i64 2\l  %112 = load double* %arrayidx194, align 8\l  %sub195 = fsub double %add192, %112\l  %113 = load %struct.ray** %r.addr, align 8\l  %D196 = getelementptr inbounds %struct.ray* %113, i32 0, i32 4\l  %arrayidx197 = getelementptr inbounds [3 x double]* %D196, i32 0, i64 2\l  %114 = load double* %arrayidx197, align 8\l  %div198 = fdiv double %sub195, %114\l  %arrayidx199 = getelementptr inbounds [6 x double]* %t, i32 0, i64 5\l  store double %div198, double* %arrayidx199, align 8\l  br label %if.end.200\l}"];
	Node0x5f9c240 -> Node0x5f9c290;
	Node0x5f9c290 [shape=record,label="{if.end.200:                                       \l  store double -1.000000e+32, double* %t_in, align 8\l  store i64 -1, i64* %i_in, align 8\l  store double 1.000000e+32, double* %t_out, align 8\l  store i64 -1, i64* %i_out, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f9c290 -> Node0x5f9c2e0;
	Node0x5f9c2e0 [shape=record,label="{for.cond:                                         \l  %115 = load i64* %i, align 8\l  %cmp201 = icmp slt i64 %115, 3\l  br i1 %cmp201, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5f9c2e0:s0 -> Node0x5f9c330;
	Node0x5f9c2e0:s1 -> Node0x5f9c600;
	Node0x5f9c330 [shape=record,label="{for.body:                                         \l  %116 = load i64* %i, align 8\l  %arrayidx202 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %116\l  %117 = load double* %arrayidx202, align 8\l  %118 = load i64* %i, align 8\l  %add203 = add nsw i64 %118, 3\l  %arrayidx204 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %add203\l  %119 = load double* %arrayidx204, align 8\l  %cmp205 = fcmp olt double %117, %119\l  br i1 %cmp205, label %if.then.206, label %if.else.211\l|{<s0>T|<s1>F}}"];
	Node0x5f9c330:s0 -> Node0x5f9c380;
	Node0x5f9c330:s1 -> Node0x5f9c3d0;
	Node0x5f9c380 [shape=record,label="{if.then.206:                                      \l  %120 = load i64* %i, align 8\l  %arrayidx207 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %120\l  %121 = load double* %arrayidx207, align 8\l  store double %121, double* %tl, align 8\l  %122 = load i64* %i, align 8\l  store i64 %122, i64* %il, align 8\l  %123 = load i64* %i, align 8\l  %add208 = add nsw i64 %123, 3\l  %arrayidx209 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %add208\l  %124 = load double* %arrayidx209, align 8\l  store double %124, double* %th, align 8\l  %125 = load i64* %i, align 8\l  %add210 = add nsw i64 %125, 3\l  store i64 %add210, i64* %ih, align 8\l  br label %if.end.216\l}"];
	Node0x5f9c380 -> Node0x5f9c420;
	Node0x5f9c3d0 [shape=record,label="{if.else.211:                                      \l  %126 = load i64* %i, align 8\l  %add212 = add nsw i64 %126, 3\l  %arrayidx213 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %add212\l  %127 = load double* %arrayidx213, align 8\l  store double %127, double* %tl, align 8\l  %128 = load i64* %i, align 8\l  %add214 = add nsw i64 %128, 3\l  store i64 %add214, i64* %il, align 8\l  %129 = load i64* %i, align 8\l  %arrayidx215 = getelementptr inbounds [6 x double]* %t, i32 0, i64 %129\l  %130 = load double* %arrayidx215, align 8\l  store double %130, double* %th, align 8\l  %131 = load i64* %i, align 8\l  store i64 %131, i64* %ih, align 8\l  br label %if.end.216\l}"];
	Node0x5f9c3d0 -> Node0x5f9c420;
	Node0x5f9c420 [shape=record,label="{if.end.216:                                       \l  %132 = load double* %t_in, align 8\l  %133 = load double* %tl, align 8\l  %cmp217 = fcmp olt double %132, %133\l  br i1 %cmp217, label %if.then.218, label %if.end.219\l|{<s0>T|<s1>F}}"];
	Node0x5f9c420:s0 -> Node0x5f9c470;
	Node0x5f9c420:s1 -> Node0x5f9c4c0;
	Node0x5f9c470 [shape=record,label="{if.then.218:                                      \l  %134 = load double* %tl, align 8\l  store double %134, double* %t_in, align 8\l  %135 = load i64* %il, align 8\l  store i64 %135, i64* %i_in, align 8\l  br label %if.end.219\l}"];
	Node0x5f9c470 -> Node0x5f9c4c0;
	Node0x5f9c4c0 [shape=record,label="{if.end.219:                                       \l  %136 = load double* %t_out, align 8\l  %137 = load double* %th, align 8\l  %cmp220 = fcmp ogt double %136, %137\l  br i1 %cmp220, label %if.then.221, label %if.end.222\l|{<s0>T|<s1>F}}"];
	Node0x5f9c4c0:s0 -> Node0x5f9c510;
	Node0x5f9c4c0:s1 -> Node0x5f9c560;
	Node0x5f9c510 [shape=record,label="{if.then.221:                                      \l  %138 = load double* %th, align 8\l  store double %138, double* %t_out, align 8\l  %139 = load i64* %ih, align 8\l  store i64 %139, i64* %i_out, align 8\l  br label %if.end.222\l}"];
	Node0x5f9c510 -> Node0x5f9c560;
	Node0x5f9c560 [shape=record,label="{if.end.222:                                       \l  br label %for.inc\l}"];
	Node0x5f9c560 -> Node0x5f9c5b0;
	Node0x5f9c5b0 [shape=record,label="{for.inc:                                          \l  %140 = load i64* %i, align 8\l  %inc = add nsw i64 %140, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f9c5b0 -> Node0x5f9c2e0;
	Node0x5f9c600 [shape=record,label="{for.end:                                          \l  %141 = load double* %t_in, align 8\l  %142 = load double* %t_out, align 8\l  %cmp223 = fcmp oge double %141, %142\l  br i1 %cmp223, label %if.then.225, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5f9c600:s0 -> Node0x5f9c6a0;
	Node0x5f9c600:s1 -> Node0x5f9c650;
	Node0x5f9c650 [shape=record,label="{lor.lhs.false:                                    \l  %143 = load double* %t_out, align 8\l  %cmp224 = fcmp olt double %143, 0.000000e+00\l  br i1 %cmp224, label %if.then.225, label %if.end.226\l|{<s0>T|<s1>F}}"];
	Node0x5f9c650:s0 -> Node0x5f9c6a0;
	Node0x5f9c650:s1 -> Node0x5f9c6f0;
	Node0x5f9c6a0 [shape=record,label="{if.then.225:                                      \l  store %struct.voxel* null, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f9c6a0 -> Node0x5f9d1e0;
	Node0x5f9c6f0 [shape=record,label="{if.end.226:                                       \l  %144 = load %struct.ray** %r.addr, align 8\l  %call = call %struct.rayinfo* @ma_rayinfo(%struct.ray* %144)\l  store %struct.rayinfo* %call, %struct.rayinfo** %ri, align 8\l  %145 = load %struct.rayinfo** %ri, align 8\l  %146 = load %struct.ray** %r.addr, align 8\l  %ri227 = getelementptr inbounds %struct.ray* %146, i32 0, i32 8\l  store %struct.rayinfo* %145, %struct.rayinfo** %ri227, align 8\l  %147 = load %struct.grid** %g.addr, align 8\l  %148 = load %struct.rayinfo** %ri, align 8\l  %grid = getelementptr inbounds %struct.rayinfo* %148, i32 0, i32 0\l  store %struct.grid* %147, %struct.grid** %grid, align 8\l  %arrayidx228 = getelementptr inbounds [6 x double]* %t, i32 0, i64 0\l  %149 = load double* %arrayidx228, align 8\l  %arrayidx229 = getelementptr inbounds [6 x double]* %t, i32 0, i64 3\l  %150 = load double* %arrayidx229, align 8\l  %cmp230 = fcmp oge double %149, %150\l  br i1 %cmp230, label %if.then.231, label %if.else.234\l|{<s0>T|<s1>F}}"];
	Node0x5f9c6f0:s0 -> Node0x5f9c740;
	Node0x5f9c6f0:s1 -> Node0x5f9c790;
	Node0x5f9c740 [shape=record,label="{if.then.231:                                      \l  %arrayidx232 = getelementptr inbounds [6 x double]* %t, i32 0, i64 0\l  %151 = load double* %arrayidx232, align 8\l  %152 = load %struct.rayinfo** %ri, align 8\l  %d = getelementptr inbounds %struct.rayinfo* %152, i32 0, i32 1\l  %arrayidx233 = getelementptr inbounds [3 x double]* %d, i32 0, i64 0\l  store double %151, double* %arrayidx233, align 8\l  br label %if.end.238\l}"];
	Node0x5f9c740 -> Node0x5f9c7e0;
	Node0x5f9c790 [shape=record,label="{if.else.234:                                      \l  %arrayidx235 = getelementptr inbounds [6 x double]* %t, i32 0, i64 3\l  %153 = load double* %arrayidx235, align 8\l  %154 = load %struct.rayinfo** %ri, align 8\l  %d236 = getelementptr inbounds %struct.rayinfo* %154, i32 0, i32 1\l  %arrayidx237 = getelementptr inbounds [3 x double]* %d236, i32 0, i64 0\l  store double %153, double* %arrayidx237, align 8\l  br label %if.end.238\l}"];
	Node0x5f9c790 -> Node0x5f9c7e0;
	Node0x5f9c7e0 [shape=record,label="{if.end.238:                                       \l  %arrayidx239 = getelementptr inbounds [6 x double]* %t, i32 0, i64 1\l  %155 = load double* %arrayidx239, align 8\l  %arrayidx240 = getelementptr inbounds [6 x double]* %t, i32 0, i64 4\l  %156 = load double* %arrayidx240, align 8\l  %cmp241 = fcmp oge double %155, %156\l  br i1 %cmp241, label %if.then.242, label %if.else.246\l|{<s0>T|<s1>F}}"];
	Node0x5f9c7e0:s0 -> Node0x5f9c830;
	Node0x5f9c7e0:s1 -> Node0x5f9c880;
	Node0x5f9c830 [shape=record,label="{if.then.242:                                      \l  %arrayidx243 = getelementptr inbounds [6 x double]* %t, i32 0, i64 1\l  %157 = load double* %arrayidx243, align 8\l  %158 = load %struct.rayinfo** %ri, align 8\l  %d244 = getelementptr inbounds %struct.rayinfo* %158, i32 0, i32 1\l  %arrayidx245 = getelementptr inbounds [3 x double]* %d244, i32 0, i64 1\l  store double %157, double* %arrayidx245, align 8\l  br label %if.end.250\l}"];
	Node0x5f9c830 -> Node0x5f9c8d0;
	Node0x5f9c880 [shape=record,label="{if.else.246:                                      \l  %arrayidx247 = getelementptr inbounds [6 x double]* %t, i32 0, i64 4\l  %159 = load double* %arrayidx247, align 8\l  %160 = load %struct.rayinfo** %ri, align 8\l  %d248 = getelementptr inbounds %struct.rayinfo* %160, i32 0, i32 1\l  %arrayidx249 = getelementptr inbounds [3 x double]* %d248, i32 0, i64 1\l  store double %159, double* %arrayidx249, align 8\l  br label %if.end.250\l}"];
	Node0x5f9c880 -> Node0x5f9c8d0;
	Node0x5f9c8d0 [shape=record,label="{if.end.250:                                       \l  %arrayidx251 = getelementptr inbounds [6 x double]* %t, i32 0, i64 2\l  %161 = load double* %arrayidx251, align 8\l  %arrayidx252 = getelementptr inbounds [6 x double]* %t, i32 0, i64 5\l  %162 = load double* %arrayidx252, align 8\l  %cmp253 = fcmp oge double %161, %162\l  br i1 %cmp253, label %if.then.254, label %if.else.258\l|{<s0>T|<s1>F}}"];
	Node0x5f9c8d0:s0 -> Node0x5f9c920;
	Node0x5f9c8d0:s1 -> Node0x5f9c970;
	Node0x5f9c920 [shape=record,label="{if.then.254:                                      \l  %arrayidx255 = getelementptr inbounds [6 x double]* %t, i32 0, i64 2\l  %163 = load double* %arrayidx255, align 8\l  %164 = load %struct.rayinfo** %ri, align 8\l  %d256 = getelementptr inbounds %struct.rayinfo* %164, i32 0, i32 1\l  %arrayidx257 = getelementptr inbounds [3 x double]* %d256, i32 0, i64 2\l  store double %163, double* %arrayidx257, align 8\l  br label %if.end.262\l}"];
	Node0x5f9c920 -> Node0x5f9c9c0;
	Node0x5f9c970 [shape=record,label="{if.else.258:                                      \l  %arrayidx259 = getelementptr inbounds [6 x double]* %t, i32 0, i64 5\l  %165 = load double* %arrayidx259, align 8\l  %166 = load %struct.rayinfo** %ri, align 8\l  %d260 = getelementptr inbounds %struct.rayinfo* %166, i32 0, i32 1\l  %arrayidx261 = getelementptr inbounds [3 x double]* %d260, i32 0, i64 2\l  store double %165, double* %arrayidx261, align 8\l  br label %if.end.262\l}"];
	Node0x5f9c970 -> Node0x5f9c9c0;
	Node0x5f9c9c0 [shape=record,label="{if.end.262:                                       \l  %167 = load i64* %i_in, align 8\l  %cmp263 = icmp sgt i64 %167, 2\l  br i1 %cmp263, label %if.then.264, label %if.end.266\l|{<s0>T|<s1>F}}"];
	Node0x5f9c9c0:s0 -> Node0x5f9ca10;
	Node0x5f9c9c0:s1 -> Node0x5f9ca60;
	Node0x5f9ca10 [shape=record,label="{if.then.264:                                      \l  %168 = load i64* %i_in, align 8\l  %sub265 = sub nsw i64 %168, 3\l  store i64 %sub265, i64* %i_in, align 8\l  br label %if.end.266\l}"];
	Node0x5f9ca10 -> Node0x5f9ca60;
	Node0x5f9ca60 [shape=record,label="{if.end.266:                                       \l  %169 = load i64* %i_out, align 8\l  %cmp267 = icmp sgt i64 %169, 2\l  br i1 %cmp267, label %if.then.268, label %if.end.270\l|{<s0>T|<s1>F}}"];
	Node0x5f9ca60:s0 -> Node0x5f9cab0;
	Node0x5f9ca60:s1 -> Node0x5f9cb00;
	Node0x5f9cab0 [shape=record,label="{if.then.268:                                      \l  %170 = load i64* %i_out, align 8\l  %sub269 = sub nsw i64 %170, 3\l  store i64 %sub269, i64* %i_out, align 8\l  br label %if.end.270\l}"];
	Node0x5f9cab0 -> Node0x5f9cb00;
	Node0x5f9cb00 [shape=record,label="{if.end.270:                                       \l  %171 = load i64* %i_in, align 8\l  %172 = load %struct.rayinfo** %ri, align 8\l  %entry_plane = getelementptr inbounds %struct.rayinfo* %172, i32 0, i32 2\l  store i64 %171, i64* %entry_plane, align 8\l  %173 = load double* %t_in, align 8\l  %174 = load %struct.rayinfo** %ri, align 8\l  %t_in271 = getelementptr inbounds %struct.rayinfo* %174, i32 0, i32 3\l  store double %173, double* %t_in271, align 8\l  %175 = load double* %t_out, align 8\l  %176 = load %struct.rayinfo** %ri, align 8\l  %t_out272 = getelementptr inbounds %struct.rayinfo* %176, i32 0, i32 5\l  store double %175, double* %t_out272, align 8\l  %177 = load i64* %i_out, align 8\l  %178 = load %struct.rayinfo** %ri, align 8\l  %exit_plane = getelementptr inbounds %struct.rayinfo* %178, i32 0, i32 4\l  store i64 %177, i64* %exit_plane, align 8\l  %179 = load %struct.ray** %r.addr, align 8\l  %D273 = getelementptr inbounds %struct.ray* %179, i32 0, i32 4\l  %arrayidx274 = getelementptr inbounds [3 x double]* %D273, i32 0, i64 0\l  %180 = load double* %arrayidx274, align 8\l  %cmp275 = fcmp oeq double %180, 0.000000e+00\l  br i1 %cmp275, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x5f9cb00:s0 -> Node0x5f9cb50;
	Node0x5f9cb00:s1 -> Node0x5f9cba0;
	Node0x5f9cb50 [shape=record,label="{cond.true:                                        \l  br label %cond.end.289\l}"];
	Node0x5f9cb50 -> Node0x5f9cce0;
	Node0x5f9cba0 [shape=record,label="{cond.false:                                       \l  %181 = load %struct.grid** %g.addr, align 8\l  %cellsize276 = getelementptr inbounds %struct.grid* %181, i32 0, i32 8\l  %arrayidx277 = getelementptr inbounds [3 x double]* %cellsize276, i32 0, i64\l... 0\l  %182 = load double* %arrayidx277, align 8\l  %183 = load %struct.ray** %r.addr, align 8\l  %D278 = getelementptr inbounds %struct.ray* %183, i32 0, i32 4\l  %arrayidx279 = getelementptr inbounds [3 x double]* %D278, i32 0, i64 0\l  %184 = load double* %arrayidx279, align 8\l  %cmp280 = fcmp ogt double %184, 0.000000e+00\l  br i1 %cmp280, label %cond.true.281, label %cond.false.284\l|{<s0>T|<s1>F}}"];
	Node0x5f9cba0:s0 -> Node0x5f9cbf0;
	Node0x5f9cba0:s1 -> Node0x5f9cc40;
	Node0x5f9cbf0 [shape=record,label="{cond.true.281:                                    \l  %185 = load %struct.ray** %r.addr, align 8\l  %D282 = getelementptr inbounds %struct.ray* %185, i32 0, i32 4\l  %arrayidx283 = getelementptr inbounds [3 x double]* %D282, i32 0, i64 0\l  %186 = load double* %arrayidx283, align 8\l  br label %cond.end\l}"];
	Node0x5f9cbf0 -> Node0x5f9cc90;
	Node0x5f9cc40 [shape=record,label="{cond.false.284:                                   \l  %187 = load %struct.ray** %r.addr, align 8\l  %D285 = getelementptr inbounds %struct.ray* %187, i32 0, i32 4\l  %arrayidx286 = getelementptr inbounds [3 x double]* %D285, i32 0, i64 0\l  %188 = load double* %arrayidx286, align 8\l  %sub287 = fsub double -0.000000e+00, %188\l  br label %cond.end\l}"];
	Node0x5f9cc40 -> Node0x5f9cc90;
	Node0x5f9cc90 [shape=record,label="{cond.end:                                         \l  %cond = phi double [ %186, %cond.true.281 ], [ %sub287, %cond.false.284 ]\l  %div288 = fdiv double %182, %cond\l  br label %cond.end.289\l}"];
	Node0x5f9cc90 -> Node0x5f9cce0;
	Node0x5f9cce0 [shape=record,label="{cond.end.289:                                     \l  %cond290 = phi double [ 1.000000e+32, %cond.true ], [ %div288, %cond.end ]\l  %189 = load %struct.rayinfo** %ri, align 8\l  %delta = getelementptr inbounds %struct.rayinfo* %189, i32 0, i32 6\l  %arrayidx291 = getelementptr inbounds [3 x double]* %delta, i32 0, i64 0\l  store double %cond290, double* %arrayidx291, align 8\l  %190 = load %struct.ray** %r.addr, align 8\l  %D292 = getelementptr inbounds %struct.ray* %190, i32 0, i32 4\l  %arrayidx293 = getelementptr inbounds [3 x double]* %D292, i32 0, i64 1\l  %191 = load double* %arrayidx293, align 8\l  %cmp294 = fcmp oeq double %191, 0.000000e+00\l  br i1 %cmp294, label %cond.true.295, label %cond.false.296\l|{<s0>T|<s1>F}}"];
	Node0x5f9cce0:s0 -> Node0x5f9cd30;
	Node0x5f9cce0:s1 -> Node0x5f9cd80;
	Node0x5f9cd30 [shape=record,label="{cond.true.295:                                    \l  br label %cond.end.312\l}"];
	Node0x5f9cd30 -> Node0x5f9cec0;
	Node0x5f9cd80 [shape=record,label="{cond.false.296:                                   \l  %192 = load %struct.grid** %g.addr, align 8\l  %cellsize297 = getelementptr inbounds %struct.grid* %192, i32 0, i32 8\l  %arrayidx298 = getelementptr inbounds [3 x double]* %cellsize297, i32 0, i64\l... 1\l  %193 = load double* %arrayidx298, align 8\l  %194 = load %struct.ray** %r.addr, align 8\l  %D299 = getelementptr inbounds %struct.ray* %194, i32 0, i32 4\l  %arrayidx300 = getelementptr inbounds [3 x double]* %D299, i32 0, i64 1\l  %195 = load double* %arrayidx300, align 8\l  %cmp301 = fcmp ogt double %195, 0.000000e+00\l  br i1 %cmp301, label %cond.true.302, label %cond.false.305\l|{<s0>T|<s1>F}}"];
	Node0x5f9cd80:s0 -> Node0x5f9cdd0;
	Node0x5f9cd80:s1 -> Node0x5f9ce20;
	Node0x5f9cdd0 [shape=record,label="{cond.true.302:                                    \l  %196 = load %struct.ray** %r.addr, align 8\l  %D303 = getelementptr inbounds %struct.ray* %196, i32 0, i32 4\l  %arrayidx304 = getelementptr inbounds [3 x double]* %D303, i32 0, i64 1\l  %197 = load double* %arrayidx304, align 8\l  br label %cond.end.309\l}"];
	Node0x5f9cdd0 -> Node0x5f9ce70;
	Node0x5f9ce20 [shape=record,label="{cond.false.305:                                   \l  %198 = load %struct.ray** %r.addr, align 8\l  %D306 = getelementptr inbounds %struct.ray* %198, i32 0, i32 4\l  %arrayidx307 = getelementptr inbounds [3 x double]* %D306, i32 0, i64 1\l  %199 = load double* %arrayidx307, align 8\l  %sub308 = fsub double -0.000000e+00, %199\l  br label %cond.end.309\l}"];
	Node0x5f9ce20 -> Node0x5f9ce70;
	Node0x5f9ce70 [shape=record,label="{cond.end.309:                                     \l  %cond310 = phi double [ %197, %cond.true.302 ], [ %sub308, %cond.false.305 ]\l  %div311 = fdiv double %193, %cond310\l  br label %cond.end.312\l}"];
	Node0x5f9ce70 -> Node0x5f9cec0;
	Node0x5f9cec0 [shape=record,label="{cond.end.312:                                     \l  %cond313 = phi double [ 1.000000e+32, %cond.true.295 ], [ %div311,\l... %cond.end.309 ]\l  %200 = load %struct.rayinfo** %ri, align 8\l  %delta314 = getelementptr inbounds %struct.rayinfo* %200, i32 0, i32 6\l  %arrayidx315 = getelementptr inbounds [3 x double]* %delta314, i32 0, i64 1\l  store double %cond313, double* %arrayidx315, align 8\l  br label %cond.end.336\l}"];
	Node0x5f9cec0 -> Node0x5f9d0a0;
	Node0x5f9cf10 [shape=record,label="{cond.true.319:                                    \l  br label %cond.end.336\l}"];
	Node0x5f9cf10 -> Node0x5f9d0a0;
	Node0x5f9cf60 [shape=record,label="{cond.false.320:                                   \l  br label %cond.end.333\l}"];
	Node0x5f9cf60 -> Node0x5f9d050;
	Node0x5f9cfb0 [shape=record,label="{cond.true.326:                                    \l  br label %cond.end.333\l}"];
	Node0x5f9cfb0 -> Node0x5f9d050;
	Node0x5f9d000 [shape=record,label="{cond.false.329:                                   \l  br label %cond.end.333\l}"];
	Node0x5f9d000 -> Node0x5f9d050;
	Node0x5f9d050 [shape=record,label="{cond.end.333:                                     \l  br label %cond.end.336\l}"];
	Node0x5f9d050 -> Node0x5f9d0a0;
	Node0x5f9d0a0 [shape=record,label="{cond.end.336:                                     \l  %201 = load %struct.rayinfo** %ri, align 8\l  %index3D = getelementptr inbounds %struct.rayinfo* %201, i32 0, i32 7\l  %arrayidx340 = getelementptr inbounds [3 x i64]* %index3D, i32 0, i64 0\l  store i64 0, i64* %arrayidx340, align 8\l  %202 = load %struct.ray** %r.addr, align 8\l  %D345 = getelementptr inbounds %struct.ray* %202, i32 0, i32 4\l  %arrayidx346 = getelementptr inbounds [3 x double]* %D345, i32 0, i64 0\l  %203 = load double* %arrayidx346, align 8\l  %cmp347 = fcmp oge double %203, 0.000000e+00\l  %cond348 = select i1 %cmp347, i32 1, i32 -1\l  %conv = sext i32 %cond348 to i64\l  %204 = load %struct.ray** %r.addr, align 8\l  %indx_inc3D = getelementptr inbounds %struct.ray* %204, i32 0, i32 7\l  %arrayidx349 = getelementptr inbounds [3 x i64]* %indx_inc3D, i32 0, i64 0\l  store i64 %conv, i64* %arrayidx349, align 8\l  %205 = load %struct.rayinfo** %ri, align 8\l  %index1D = getelementptr inbounds %struct.rayinfo* %205, i32 0, i32 8\l  store i64 0, i64* %index1D, align 8\l  %206 = load %struct.ray** %r.addr, align 8\l  %D366 = getelementptr inbounds %struct.ray* %206, i32 0, i32 4\l  %arrayidx367 = getelementptr inbounds [3 x double]* %D366, i32 0, i64 0\l  %207 = load double* %arrayidx367, align 8\l  %cmp368 = fcmp oge double %207, 0.000000e+00\l  %cond370 = select i1 %cmp368, i32 1, i32 -1\l  %conv371 = sext i32 %cond370 to i64\l  %208 = load %struct.rayinfo** %ri, align 8\l  %indx_inc1D = getelementptr inbounds %struct.rayinfo* %208, i32 0, i32 9\l  %arrayidx372 = getelementptr inbounds [3 x i64]* %indx_inc1D, i32 0, i64 0\l  store i64 %conv371, i64* %arrayidx372, align 8\l  %209 = load %struct.ray** %r.addr, align 8\l  %D373 = getelementptr inbounds %struct.ray* %209, i32 0, i32 4\l  %arrayidx374 = getelementptr inbounds [3 x double]* %D373, i32 0, i64 1\l  %210 = load double* %arrayidx374, align 8\l  %cmp375 = fcmp oge double %210, 0.000000e+00\l  %cond377 = select i1 %cmp375, i32 1, i32 -1\l  %conv378 = sext i32 %cond377 to i64\l  %211 = load %struct.rayinfo** %ri, align 8\l  %indx_inc1D379 = getelementptr inbounds %struct.rayinfo* %211, i32 0, i32 9\l  %arrayidx380 = getelementptr inbounds [3 x i64]* %indx_inc1D379, i32 0, i64 1\l  store i64 %conv378, i64* %arrayidx380, align 8\l  %212 = load %struct.ray** %r.addr, align 8\l  %D381 = getelementptr inbounds %struct.ray* %212, i32 0, i32 4\l  %arrayidx382 = getelementptr inbounds [3 x double]* %D381, i32 0, i64 2\l  %213 = load double* %arrayidx382, align 8\l  %cmp383 = fcmp oge double %213, 0.000000e+00\l  %cond385 = select i1 %cmp383, i32 1, i32 -1\l  %conv386 = sext i32 %cond385 to i64\l  %214 = load %struct.rayinfo** %ri, align 8\l  %indx_inc1D387 = getelementptr inbounds %struct.rayinfo* %214, i32 0, i32 9\l  %arrayidx388 = getelementptr inbounds [3 x i64]* %indx_inc1D387, i32 0, i64 2\l  store i64 %conv386, i64* %arrayidx388, align 8\l  %215 = load %struct.rayinfo** %ri, align 8\l  %next = getelementptr inbounds %struct.rayinfo* %215, i32 0, i32 10\l  store %struct.rayinfo* null, %struct.rayinfo** %next, align 8\l  %216 = load %struct.ray** %r.addr, align 8\l  %call389 = call %struct.voxel* @next_nonempty_leaf(%struct.ray* %216, i64 0,\l... i64* %status)\l  store %struct.voxel* %call389, %struct.voxel** %v, align 8\l  %cmp390 = icmp ne %struct.voxel* %call389, null\l  br i1 %cmp390, label %if.then.392, label %if.else.396\l|{<s0>T|<s1>F}}"];
	Node0x5f9d0a0:s0 -> Node0x5f9d0f0;
	Node0x5f9d0a0:s1 -> Node0x5f9d140;
	Node0x5f9d0f0 [shape=record,label="{if.then.392:                                      \l  br label %if.end.397\l}"];
	Node0x5f9d0f0 -> Node0x5f9d190;
	Node0x5f9d140 [shape=record,label="{if.else.396:                                      \l  store %struct.voxel* null, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f9d140 -> Node0x5f9d1e0;
	Node0x5f9d190 [shape=record,label="{if.end.397:                                       \l  %217 = load %struct.voxel** %v, align 8\l  store %struct.voxel* %217, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f9d190 -> Node0x5f9d1e0;
	Node0x5f9d1e0 [shape=record,label="{return:                                           \l  %218 = load %struct.voxel** %retval\l  ret %struct.voxel* %218\l}"];
}
