digraph "CFG for 'TriNormal' function" {
	label="CFG for 'TriNormal' function";

	Node0x60b0f20 [shape=record,label="{entry:\l  %hit.addr = alloca %struct.irecord*, align 8\l  %Pi.addr = alloca double*, align 8\l  %Ni.addr = alloca double*, align 8\l  %pe = alloca %struct.element*, align 8\l  %pt = alloca %struct.tri*, align 8\l  %pn = alloca [3 x double]*, align 8\l  %n0 = alloca [3 x double]*, align 8\l  %n1 = alloca [3 x double]*, align 8\l  %n2 = alloca [3 x double]*, align 8\l  store %struct.irecord* %hit, %struct.irecord** %hit.addr, align 8\l  store double* %Ni, double** %Ni.addr, align 8\l  %0 = load %struct.irecord** %hit.addr, align 8\l  %pelem = getelementptr inbounds %struct.irecord* %0, i32 0, i32 1\l  %1 = load %struct.element** %pelem, align 8\l  store %struct.element* %1, %struct.element** %pe, align 8\l  %2 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %2, i32 0, i32 3\l  %3 = load i8** %data, align 8\l  %4 = bitcast i8* %3 to %struct.tri*\l  store %struct.tri* %4, %struct.tri** %pt, align 8\l  %5 = load %struct.tri** %pt, align 8\l  %nptr = getelementptr inbounds %struct.tri* %5, i32 0, i32 3\l  %6 = load [3 x double]** %nptr, align 8\l  store [3 x double]* %6, [3 x double]** %pn, align 8\l  %7 = load %struct.tri** %pt, align 8\l  %norminterp = getelementptr inbounds %struct.tri* %7, i32 0, i32 6\l  %8 = load i64* %norminterp, align 8\l  %tobool = icmp ne i64 %8, 0\l  br i1 %tobool, label %if.then, label %if.else.84\l|{<s0>T|<s1>F}}"];
	Node0x60b0f20:s0 -> Node0x60b0f70;
	Node0x60b0f20:s1 -> Node0x60b11f0;
	Node0x60b0f70 [shape=record,label="{if.then:                                          \l  %9 = load %struct.tri** %pt, align 8\l  %vorder = getelementptr inbounds %struct.tri* %9, i32 0, i32 7\l  %10 = load i64* %vorder, align 8\l  %cmp = icmp eq i64 %10, 1\l  br i1 %cmp, label %if.then.1, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x60b0f70:s0 -> Node0x60b0fc0;
	Node0x60b0f70:s1 -> Node0x60b1010;
	Node0x60b0fc0 [shape=record,label="{if.then.1:                                        \l  %11 = load [3 x double]** %pn, align 8\l  %12 = load %struct.tri** %pt, align 8\l  %vindex = getelementptr inbounds %struct.tri* %12, i32 0, i32 4\l  %arrayidx = getelementptr inbounds [3 x i64]* %vindex, i32 0, i64 0\l  %13 = load i64* %arrayidx, align 8\l  %add.ptr = getelementptr inbounds [3 x double]* %11, i64 %13\l  store [3 x double]* %add.ptr, [3 x double]** %n0, align 8\l  %14 = load [3 x double]** %pn, align 8\l  %15 = load %struct.tri** %pt, align 8\l  %vindex2 = getelementptr inbounds %struct.tri* %15, i32 0, i32 4\l  %arrayidx3 = getelementptr inbounds [3 x i64]* %vindex2, i32 0, i64 1\l  %16 = load i64* %arrayidx3, align 8\l  %add.ptr4 = getelementptr inbounds [3 x double]* %14, i64 %16\l  store [3 x double]* %add.ptr4, [3 x double]** %n1, align 8\l  %17 = load [3 x double]** %pn, align 8\l  %18 = load %struct.tri** %pt, align 8\l  %vindex5 = getelementptr inbounds %struct.tri* %18, i32 0, i32 4\l  %arrayidx6 = getelementptr inbounds [3 x i64]* %vindex5, i32 0, i64 2\l  %19 = load i64* %arrayidx6, align 8\l  %add.ptr7 = getelementptr inbounds [3 x double]* %17, i64 %19\l  store [3 x double]* %add.ptr7, [3 x double]** %n2, align 8\l  br label %if.end\l}"];
	Node0x60b0fc0 -> Node0x60b1060;
	Node0x60b1010 [shape=record,label="{if.else:                                          \l  %20 = load [3 x double]** %pn, align 8\l  %21 = load %struct.tri** %pt, align 8\l  %vindex8 = getelementptr inbounds %struct.tri* %21, i32 0, i32 4\l  %arrayidx9 = getelementptr inbounds [3 x i64]* %vindex8, i32 0, i64 0\l  %22 = load i64* %arrayidx9, align 8\l  %add.ptr10 = getelementptr inbounds [3 x double]* %20, i64 %22\l  store [3 x double]* %add.ptr10, [3 x double]** %n0, align 8\l  %23 = load [3 x double]** %pn, align 8\l  %24 = load %struct.tri** %pt, align 8\l  %vindex11 = getelementptr inbounds %struct.tri* %24, i32 0, i32 4\l  %arrayidx12 = getelementptr inbounds [3 x i64]* %vindex11, i32 0, i64 2\l  %25 = load i64* %arrayidx12, align 8\l  %add.ptr13 = getelementptr inbounds [3 x double]* %23, i64 %25\l  store [3 x double]* %add.ptr13, [3 x double]** %n1, align 8\l  %26 = load [3 x double]** %pn, align 8\l  %27 = load %struct.tri** %pt, align 8\l  %vindex14 = getelementptr inbounds %struct.tri* %27, i32 0, i32 4\l  %arrayidx15 = getelementptr inbounds [3 x i64]* %vindex14, i32 0, i64 1\l  %28 = load i64* %arrayidx15, align 8\l  %add.ptr16 = getelementptr inbounds [3 x double]* %26, i64 %28\l  store [3 x double]* %add.ptr16, [3 x double]** %n2, align 8\l  br label %if.end\l}"];
	Node0x60b1010 -> Node0x60b1060;
	Node0x60b1060 [shape=record,label="{if.end:                                           \l  %29 = load %struct.tri** %pt, align 8\l  %indx = getelementptr inbounds %struct.tri* %29, i32 0, i32 5\l  %30 = load i64* %indx, align 8\l  switch i64 %30, label %sw.epilog [\l    i64 1, label %sw.bb\l    i64 2, label %sw.bb.24\l    i64 3, label %sw.bb.37\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x60b1060:s0 -> Node0x60b11a0;
	Node0x60b1060:s1 -> Node0x60b10b0;
	Node0x60b1060:s2 -> Node0x60b1100;
	Node0x60b1060:s3 -> Node0x60b1150;
	Node0x60b10b0 [shape=record,label="{sw.bb:                                            \l  %31 = load %struct.tri** %pt, align 8\l  %norm = getelementptr inbounds %struct.tri* %31, i32 0, i32 0\l  %arrayidx17 = getelementptr inbounds [3 x double]* %norm, i32 0, i64 0\l  %32 = load double* %arrayidx17, align 8\l  %33 = load %struct.irecord** %hit.addr, align 8\l  %b1 = getelementptr inbounds %struct.irecord* %33, i32 0, i32 2\l  %34 = load double* %b1, align 8\l  %div = fdiv double %34, %32\l  store double %div, double* %b1, align 8\l  %35 = load %struct.tri** %pt, align 8\l  %norm18 = getelementptr inbounds %struct.tri* %35, i32 0, i32 0\l  %arrayidx19 = getelementptr inbounds [3 x double]* %norm18, i32 0, i64 0\l  %36 = load double* %arrayidx19, align 8\l  %37 = load %struct.irecord** %hit.addr, align 8\l  %b2 = getelementptr inbounds %struct.irecord* %37, i32 0, i32 3\l  %38 = load double* %b2, align 8\l  %div20 = fdiv double %38, %36\l  store double %div20, double* %b2, align 8\l  %39 = load %struct.tri** %pt, align 8\l  %norm21 = getelementptr inbounds %struct.tri* %39, i32 0, i32 0\l  %arrayidx22 = getelementptr inbounds [3 x double]* %norm21, i32 0, i64 0\l  %40 = load double* %arrayidx22, align 8\l  %41 = load %struct.irecord** %hit.addr, align 8\l  %b3 = getelementptr inbounds %struct.irecord* %41, i32 0, i32 4\l  %42 = load double* %b3, align 8\l  %div23 = fdiv double %42, %40\l  store double %div23, double* %b3, align 8\l  br label %sw.epilog\l}"];
	Node0x60b10b0 -> Node0x60b11a0;
	Node0x60b1100 [shape=record,label="{sw.bb.24:                                         \l  %43 = load %struct.tri** %pt, align 8\l  %norm25 = getelementptr inbounds %struct.tri* %43, i32 0, i32 0\l  %arrayidx26 = getelementptr inbounds [3 x double]* %norm25, i32 0, i64 1\l  %44 = load double* %arrayidx26, align 8\l  %45 = load %struct.irecord** %hit.addr, align 8\l  %b127 = getelementptr inbounds %struct.irecord* %45, i32 0, i32 2\l  %46 = load double* %b127, align 8\l  %div28 = fdiv double %46, %44\l  store double %div28, double* %b127, align 8\l  %47 = load %struct.tri** %pt, align 8\l  %norm29 = getelementptr inbounds %struct.tri* %47, i32 0, i32 0\l  %arrayidx30 = getelementptr inbounds [3 x double]* %norm29, i32 0, i64 1\l  %48 = load double* %arrayidx30, align 8\l  %49 = load %struct.irecord** %hit.addr, align 8\l  %b231 = getelementptr inbounds %struct.irecord* %49, i32 0, i32 3\l  %50 = load double* %b231, align 8\l  %div32 = fdiv double %50, %48\l  store double %div32, double* %b231, align 8\l  %51 = load %struct.tri** %pt, align 8\l  %norm33 = getelementptr inbounds %struct.tri* %51, i32 0, i32 0\l  %arrayidx34 = getelementptr inbounds [3 x double]* %norm33, i32 0, i64 1\l  %52 = load double* %arrayidx34, align 8\l  %53 = load %struct.irecord** %hit.addr, align 8\l  %b335 = getelementptr inbounds %struct.irecord* %53, i32 0, i32 4\l  %54 = load double* %b335, align 8\l  %div36 = fdiv double %54, %52\l  store double %div36, double* %b335, align 8\l  br label %sw.epilog\l}"];
	Node0x60b1100 -> Node0x60b11a0;
	Node0x60b1150 [shape=record,label="{sw.bb.37:                                         \l  %55 = load %struct.tri** %pt, align 8\l  %norm38 = getelementptr inbounds %struct.tri* %55, i32 0, i32 0\l  %arrayidx39 = getelementptr inbounds [3 x double]* %norm38, i32 0, i64 2\l  %56 = load double* %arrayidx39, align 8\l  %57 = load %struct.irecord** %hit.addr, align 8\l  %b140 = getelementptr inbounds %struct.irecord* %57, i32 0, i32 2\l  %58 = load double* %b140, align 8\l  %div41 = fdiv double %58, %56\l  store double %div41, double* %b140, align 8\l  %59 = load %struct.tri** %pt, align 8\l  %norm42 = getelementptr inbounds %struct.tri* %59, i32 0, i32 0\l  %arrayidx43 = getelementptr inbounds [3 x double]* %norm42, i32 0, i64 2\l  %60 = load double* %arrayidx43, align 8\l  %61 = load %struct.irecord** %hit.addr, align 8\l  %b244 = getelementptr inbounds %struct.irecord* %61, i32 0, i32 3\l  %62 = load double* %b244, align 8\l  %div45 = fdiv double %62, %60\l  store double %div45, double* %b244, align 8\l  %63 = load %struct.tri** %pt, align 8\l  %norm46 = getelementptr inbounds %struct.tri* %63, i32 0, i32 0\l  %arrayidx47 = getelementptr inbounds [3 x double]* %norm46, i32 0, i64 2\l  %64 = load double* %arrayidx47, align 8\l  %65 = load %struct.irecord** %hit.addr, align 8\l  %b348 = getelementptr inbounds %struct.irecord* %65, i32 0, i32 4\l  %66 = load double* %b348, align 8\l  %div49 = fdiv double %66, %64\l  store double %div49, double* %b348, align 8\l  br label %sw.epilog\l}"];
	Node0x60b1150 -> Node0x60b11a0;
	Node0x60b11a0 [shape=record,label="{sw.epilog:                                        \l  %67 = load %struct.irecord** %hit.addr, align 8\l  %b150 = getelementptr inbounds %struct.irecord* %67, i32 0, i32 2\l  %68 = load double* %b150, align 8\l  %69 = load [3 x double]** %n0, align 8\l  %arrayidx51 = getelementptr inbounds [3 x double]* %69, i32 0, i64 0\l  %70 = load double* %arrayidx51, align 8\l  %mul = fmul double %68, %70\l  %71 = load %struct.irecord** %hit.addr, align 8\l  %b252 = getelementptr inbounds %struct.irecord* %71, i32 0, i32 3\l  %72 = load double* %b252, align 8\l  %73 = load [3 x double]** %n1, align 8\l  %arrayidx53 = getelementptr inbounds [3 x double]* %73, i32 0, i64 0\l  %74 = load double* %arrayidx53, align 8\l  %mul54 = fmul double %72, %74\l  %add = fadd double %mul, %mul54\l  %75 = load %struct.irecord** %hit.addr, align 8\l  %b355 = getelementptr inbounds %struct.irecord* %75, i32 0, i32 4\l  %76 = load double* %b355, align 8\l  %77 = load [3 x double]** %n2, align 8\l  %arrayidx56 = getelementptr inbounds [3 x double]* %77, i32 0, i64 0\l  %78 = load double* %arrayidx56, align 8\l  %mul57 = fmul double %76, %78\l  %add58 = fadd double %add, %mul57\l  %79 = load double** %Ni.addr, align 8\l  %arrayidx59 = getelementptr inbounds double* %79, i64 0\l  store double %add58, double* %arrayidx59, align 8\l  %80 = load %struct.irecord** %hit.addr, align 8\l  %b160 = getelementptr inbounds %struct.irecord* %80, i32 0, i32 2\l  %81 = load double* %b160, align 8\l  %82 = load [3 x double]** %n0, align 8\l  %arrayidx61 = getelementptr inbounds [3 x double]* %82, i32 0, i64 1\l  %83 = load double* %arrayidx61, align 8\l  %mul62 = fmul double %81, %83\l  %84 = load %struct.irecord** %hit.addr, align 8\l  %b263 = getelementptr inbounds %struct.irecord* %84, i32 0, i32 3\l  %85 = load double* %b263, align 8\l  %86 = load [3 x double]** %n1, align 8\l  %arrayidx64 = getelementptr inbounds [3 x double]* %86, i32 0, i64 1\l  %87 = load double* %arrayidx64, align 8\l  %mul65 = fmul double %85, %87\l  %add66 = fadd double %mul62, %mul65\l  %88 = load %struct.irecord** %hit.addr, align 8\l  %b367 = getelementptr inbounds %struct.irecord* %88, i32 0, i32 4\l  %89 = load double* %b367, align 8\l  %90 = load [3 x double]** %n2, align 8\l  %arrayidx68 = getelementptr inbounds [3 x double]* %90, i32 0, i64 1\l  %91 = load double* %arrayidx68, align 8\l  %mul69 = fmul double %89, %91\l  %add70 = fadd double %add66, %mul69\l  %92 = load double** %Ni.addr, align 8\l  %arrayidx71 = getelementptr inbounds double* %92, i64 1\l  store double %add70, double* %arrayidx71, align 8\l  %93 = load %struct.irecord** %hit.addr, align 8\l  %b172 = getelementptr inbounds %struct.irecord* %93, i32 0, i32 2\l  %94 = load double* %b172, align 8\l  %95 = load [3 x double]** %n0, align 8\l  %arrayidx73 = getelementptr inbounds [3 x double]* %95, i32 0, i64 2\l  %96 = load double* %arrayidx73, align 8\l  %mul74 = fmul double %94, %96\l  %97 = load %struct.irecord** %hit.addr, align 8\l  %b275 = getelementptr inbounds %struct.irecord* %97, i32 0, i32 3\l  %98 = load double* %b275, align 8\l  %99 = load [3 x double]** %n1, align 8\l  %arrayidx76 = getelementptr inbounds [3 x double]* %99, i32 0, i64 2\l  %100 = load double* %arrayidx76, align 8\l  %mul77 = fmul double %98, %100\l  %add78 = fadd double %mul74, %mul77\l  %101 = load %struct.irecord** %hit.addr, align 8\l  %b379 = getelementptr inbounds %struct.irecord* %101, i32 0, i32 4\l  %102 = load double* %b379, align 8\l  %103 = load [3 x double]** %n2, align 8\l  %arrayidx80 = getelementptr inbounds [3 x double]* %103, i32 0, i64 2\l  %104 = load double* %arrayidx80, align 8\l  %mul81 = fmul double %102, %104\l  %add82 = fadd double %add78, %mul81\l  %105 = load double** %Ni.addr, align 8\l  %arrayidx83 = getelementptr inbounds double* %105, i64 2\l  store double %add82, double* %arrayidx83, align 8\l  %106 = load double** %Ni.addr, align 8\l  call void @VecNorm(double* %106)\l  br label %if.end.94\l}"];
	Node0x60b11a0 -> Node0x60b1240;
	Node0x60b11f0 [shape=record,label="{if.else.84:                                       \l  br label %if.end.94\l}"];
	Node0x60b11f0 -> Node0x60b1240;
	Node0x60b1240 [shape=record,label="{if.end.94:                                        \l  ret void\l}"];
}
