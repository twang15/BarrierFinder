digraph "CFG for 'TriPeIntersect' function" {
	label="CFG for 'TriPeIntersect' function";

	Node0x60c0e60 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %pr.addr = alloca %struct.ray*, align 8\l  %pe.addr = alloca %struct.element*, align 8\l  %hit.addr = alloca %struct.irecord*, align 8\l  %i = alloca i64, align 8\l  %Rd_dot_Pn = alloca double, align 8\l  %Ro_dot_Pn = alloca double, align 8\l  %q1 = alloca double, align 8\l  %q2 = alloca double, align 8\l  %tval = alloca double, align 8\l  %v1 = alloca [3 x double]*, align 8\l  %v2 = alloca [3 x double]*, align 8\l  %v3 = alloca [3 x double]*, align 8\l  %e1 = alloca [3 x double], align 16\l  %e2 = alloca [3 x double], align 16\l  %e3 = alloca [3 x double], align 16\l  %pt = alloca %struct.tri*, align 8\l  br label %cond.end\l}"];
	Node0x60c0e60 -> Node0x60c0f50;
	Node0x60c0eb0 [shape=record,label="{cond.true:                                        \l  br label %cond.end\l}"];
	Node0x60c0eb0 -> Node0x60c0f50;
	Node0x60c0f00 [shape=record,label="{cond.false:                                       \l  br label %cond.end\l}"];
	Node0x60c0f00 -> Node0x60c0f50;
	Node0x60c0f50 [shape=record,label="{cond.end:                                         \l  br label %return\l}"];
	Node0x60c0f50 -> Node0x60c26c0;
	Node0x60c0fa0 [shape=record,label="{if.then:                                          \l  br label %return\l}"];
	Node0x60c0fa0 -> Node0x60c26c0;
	Node0x60c0ff0 [shape=record,label="{if.end:                                           \l  br label %return\l}"];
	Node0x60c0ff0 -> Node0x60c26c0;
	Node0x60c1040 [shape=record,label="{if.then.33:                                       \l  br label %return\l}"];
	Node0x60c1040 -> Node0x60c26c0;
	Node0x60c1090 [shape=record,label="{if.end.34:                                        \l  br label %if.end.54\l}"];
	Node0x60c1090 -> Node0x60c1180;
	Node0x60c10e0 [shape=record,label="{if.then.37:                                       \l  br label %if.end.54\l}"];
	Node0x60c10e0 -> Node0x60c1180;
	Node0x60c1130 [shape=record,label="{if.else:                                          \l  br label %if.end.54\l}"];
	Node0x60c1130 -> Node0x60c1180;
	Node0x60c1180 [shape=record,label="{if.end.54:                                        \l  br label %return\l}"];
	Node0x60c1180 -> Node0x60c26c0;
	Node0x60c11d0 [shape=record,label="{sw.bb:                                            \l  br label %return\l}"];
	Node0x60c11d0 -> Node0x60c26c0;
	Node0x60c1220 [shape=record,label="{land.lhs.true:                                    \l  br label %return\l}"];
	Node0x60c1220 -> Node0x60c26c0;
	Node0x60c1270 [shape=record,label="{land.lhs.true.119:                                \l  br label %return\l}"];
	Node0x60c1270 -> Node0x60c26c0;
	Node0x60c12c0 [shape=record,label="{lor.lhs.false:                                    \l  br label %return\l}"];
	Node0x60c12c0 -> Node0x60c26c0;
	Node0x60c1310 [shape=record,label="{land.lhs.true.125:                                \l  br label %return\l}"];
	Node0x60c1310 -> Node0x60c26c0;
	Node0x60c1360 [shape=record,label="{land.lhs.true.128:                                \l  br label %return\l}"];
	Node0x60c1360 -> Node0x60c26c0;
	Node0x60c13b0 [shape=record,label="{if.then.133:                                      \l  br label %return\l}"];
	Node0x60c13b0 -> Node0x60c26c0;
	Node0x60c1400 [shape=record,label="{if.end.134:                                       \l  br label %return\l}"];
	Node0x60c1400 -> Node0x60c26c0;
	Node0x60c1450 [shape=record,label="{land.lhs.true.147:                                \l  br label %return\l}"];
	Node0x60c1450 -> Node0x60c26c0;
	Node0x60c14a0 [shape=record,label="{land.lhs.true.152:                                \l  br label %return\l}"];
	Node0x60c14a0 -> Node0x60c26c0;
	Node0x60c14f0 [shape=record,label="{lor.lhs.false.155:                                \l  br label %return\l}"];
	Node0x60c14f0 -> Node0x60c26c0;
	Node0x60c1540 [shape=record,label="{land.lhs.true.159:                                \l  br label %return\l}"];
	Node0x60c1540 -> Node0x60c26c0;
	Node0x60c1590 [shape=record,label="{land.lhs.true.162:                                \l  br label %return\l}"];
	Node0x60c1590 -> Node0x60c26c0;
	Node0x60c15e0 [shape=record,label="{if.then.167:                                      \l  br label %return\l}"];
	Node0x60c15e0 -> Node0x60c26c0;
	Node0x60c1630 [shape=record,label="{if.end.168:                                       \l  br label %return\l}"];
	Node0x60c1630 -> Node0x60c26c0;
	Node0x60c1680 [shape=record,label="{land.lhs.true.181:                                \l  br label %return\l}"];
	Node0x60c1680 -> Node0x60c26c0;
	Node0x60c16d0 [shape=record,label="{land.lhs.true.186:                                \l  br label %return\l}"];
	Node0x60c16d0 -> Node0x60c26c0;
	Node0x60c1720 [shape=record,label="{lor.lhs.false.189:                                \l  br label %return\l}"];
	Node0x60c1720 -> Node0x60c26c0;
	Node0x60c1770 [shape=record,label="{land.lhs.true.193:                                \l  br label %return\l}"];
	Node0x60c1770 -> Node0x60c26c0;
	Node0x60c17c0 [shape=record,label="{land.lhs.true.196:                                \l  br label %return\l}"];
	Node0x60c17c0 -> Node0x60c26c0;
	Node0x60c1810 [shape=record,label="{if.then.201:                                      \l  br label %return\l}"];
	Node0x60c1810 -> Node0x60c26c0;
	Node0x60c1860 [shape=record,label="{if.end.202:                                       \l  br label %sw.epilog\l}"];
	Node0x60c1860 -> Node0x60c2670;
	Node0x60c18b0 [shape=record,label="{sw.bb.203:                                        \l  br label %return\l}"];
	Node0x60c18b0 -> Node0x60c26c0;
	Node0x60c1900 [shape=record,label="{land.lhs.true.229:                                \l  br label %return\l}"];
	Node0x60c1900 -> Node0x60c26c0;
	Node0x60c1950 [shape=record,label="{land.lhs.true.234:                                \l  br label %return\l}"];
	Node0x60c1950 -> Node0x60c26c0;
	Node0x60c19a0 [shape=record,label="{lor.lhs.false.237:                                \l  br label %return\l}"];
	Node0x60c19a0 -> Node0x60c26c0;
	Node0x60c19f0 [shape=record,label="{land.lhs.true.241:                                \l  br label %return\l}"];
	Node0x60c19f0 -> Node0x60c26c0;
	Node0x60c1a40 [shape=record,label="{land.lhs.true.244:                                \l  br label %return\l}"];
	Node0x60c1a40 -> Node0x60c26c0;
	Node0x60c1a90 [shape=record,label="{if.then.249:                                      \l  br label %return\l}"];
	Node0x60c1a90 -> Node0x60c26c0;
	Node0x60c1ae0 [shape=record,label="{if.end.250:                                       \l  br label %return\l}"];
	Node0x60c1ae0 -> Node0x60c26c0;
	Node0x60c1b30 [shape=record,label="{land.lhs.true.264:                                \l  br label %return\l}"];
	Node0x60c1b30 -> Node0x60c26c0;
	Node0x60c1b80 [shape=record,label="{land.lhs.true.269:                                \l  br label %return\l}"];
	Node0x60c1b80 -> Node0x60c26c0;
	Node0x60c1bd0 [shape=record,label="{lor.lhs.false.272:                                \l  br label %return\l}"];
	Node0x60c1bd0 -> Node0x60c26c0;
	Node0x60c1c20 [shape=record,label="{land.lhs.true.276:                                \l  br label %return\l}"];
	Node0x60c1c20 -> Node0x60c26c0;
	Node0x60c1c70 [shape=record,label="{land.lhs.true.279:                                \l  br label %return\l}"];
	Node0x60c1c70 -> Node0x60c26c0;
	Node0x60c1cc0 [shape=record,label="{if.then.284:                                      \l  br label %return\l}"];
	Node0x60c1cc0 -> Node0x60c26c0;
	Node0x60c1d10 [shape=record,label="{if.end.285:                                       \l  br label %return\l}"];
	Node0x60c1d10 -> Node0x60c26c0;
	Node0x60c1d60 [shape=record,label="{land.lhs.true.299:                                \l  br label %return\l}"];
	Node0x60c1d60 -> Node0x60c26c0;
	Node0x60c1db0 [shape=record,label="{land.lhs.true.304:                                \l  br label %return\l}"];
	Node0x60c1db0 -> Node0x60c26c0;
	Node0x60c1e00 [shape=record,label="{lor.lhs.false.307:                                \l  br label %return\l}"];
	Node0x60c1e00 -> Node0x60c26c0;
	Node0x60c1e50 [shape=record,label="{land.lhs.true.311:                                \l  br label %return\l}"];
	Node0x60c1e50 -> Node0x60c26c0;
	Node0x60c1ea0 [shape=record,label="{land.lhs.true.314:                                \l  br label %return\l}"];
	Node0x60c1ea0 -> Node0x60c26c0;
	Node0x60c1ef0 [shape=record,label="{if.then.319:                                      \l  br label %return\l}"];
	Node0x60c1ef0 -> Node0x60c26c0;
	Node0x60c1f40 [shape=record,label="{if.end.320:                                       \l  br label %sw.epilog\l}"];
	Node0x60c1f40 -> Node0x60c2670;
	Node0x60c1f90 [shape=record,label="{sw.bb.321:                                        \l  br label %return\l}"];
	Node0x60c1f90 -> Node0x60c26c0;
	Node0x60c1fe0 [shape=record,label="{land.lhs.true.347:                                \l  br label %return\l}"];
	Node0x60c1fe0 -> Node0x60c26c0;
	Node0x60c2030 [shape=record,label="{land.lhs.true.352:                                \l  br label %return\l}"];
	Node0x60c2030 -> Node0x60c26c0;
	Node0x60c2080 [shape=record,label="{lor.lhs.false.355:                                \l  br label %return\l}"];
	Node0x60c2080 -> Node0x60c26c0;
	Node0x60c20d0 [shape=record,label="{land.lhs.true.359:                                \l  br label %return\l}"];
	Node0x60c20d0 -> Node0x60c26c0;
	Node0x60c2120 [shape=record,label="{land.lhs.true.362:                                \l  br label %return\l}"];
	Node0x60c2120 -> Node0x60c26c0;
	Node0x60c2170 [shape=record,label="{if.then.367:                                      \l  br label %return\l}"];
	Node0x60c2170 -> Node0x60c26c0;
	Node0x60c21c0 [shape=record,label="{if.end.368:                                       \l  br label %return\l}"];
	Node0x60c21c0 -> Node0x60c26c0;
	Node0x60c2210 [shape=record,label="{land.lhs.true.382:                                \l  br label %return\l}"];
	Node0x60c2210 -> Node0x60c26c0;
	Node0x60c2260 [shape=record,label="{land.lhs.true.387:                                \l  br label %return\l}"];
	Node0x60c2260 -> Node0x60c26c0;
	Node0x60c22b0 [shape=record,label="{lor.lhs.false.390:                                \l  br label %return\l}"];
	Node0x60c22b0 -> Node0x60c26c0;
	Node0x60c2300 [shape=record,label="{land.lhs.true.394:                                \l  br label %return\l}"];
	Node0x60c2300 -> Node0x60c26c0;
	Node0x60c2350 [shape=record,label="{land.lhs.true.397:                                \l  br label %return\l}"];
	Node0x60c2350 -> Node0x60c26c0;
	Node0x60c23a0 [shape=record,label="{if.then.402:                                      \l  br label %return\l}"];
	Node0x60c23a0 -> Node0x60c26c0;
	Node0x60c23f0 [shape=record,label="{if.end.403:                                       \l  br label %return\l}"];
	Node0x60c23f0 -> Node0x60c26c0;
	Node0x60c2440 [shape=record,label="{land.lhs.true.417:                                \l  br label %return\l}"];
	Node0x60c2440 -> Node0x60c26c0;
	Node0x60c2490 [shape=record,label="{land.lhs.true.422:                                \l  br label %return\l}"];
	Node0x60c2490 -> Node0x60c26c0;
	Node0x60c24e0 [shape=record,label="{lor.lhs.false.425:                                \l  br label %return\l}"];
	Node0x60c24e0 -> Node0x60c26c0;
	Node0x60c2530 [shape=record,label="{land.lhs.true.429:                                \l  br label %return\l}"];
	Node0x60c2530 -> Node0x60c26c0;
	Node0x60c2580 [shape=record,label="{land.lhs.true.432:                                \l  br label %return\l}"];
	Node0x60c2580 -> Node0x60c26c0;
	Node0x60c25d0 [shape=record,label="{if.then.437:                                      \l  br label %return\l}"];
	Node0x60c25d0 -> Node0x60c26c0;
	Node0x60c2620 [shape=record,label="{if.end.438:                                       \l  br label %sw.epilog\l}"];
	Node0x60c2620 -> Node0x60c2670;
	Node0x60c2670 [shape=record,label="{sw.epilog:                                        \l  br label %return\l}"];
	Node0x60c2670 -> Node0x60c26c0;
	Node0x60c26c0 [shape=record,label="{return:                                           \l  ret i64 undef\l}"];
}
