digraph "CFG for 'next_nonempty_voxel' function" {
	label="CFG for 'next_nonempty_voxel' function";

	Node0x5f1e000 [shape=record,label="{entry:\l  %retval = alloca %struct.voxel*, align 8\l  %r.addr = alloca %struct.ray*, align 8\l  %indx = alloca i64, align 8\l  %v = alloca %struct.voxel*, align 8\l  %gr = alloca %struct.grid*, align 8\l  %rinfo = alloca %struct.rayinfo*, align 8\l  store %struct.ray* %r, %struct.ray** %r.addr, align 8\l  %0 = load %struct.ray** %r.addr, align 8\l  %call = call i64 @next_voxel(%struct.ray* %0)\l  store i64 %call, i64* %indx, align 8\l  %1 = load i64* %indx, align 8\l  %cmp = icmp slt i64 %1, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5f1e000:s0 -> Node0x5f1e050;
	Node0x5f1e000:s1 -> Node0x5f1e0a0;
	Node0x5f1e050 [shape=record,label="{if.then:                                          \l  store %struct.voxel* null, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f1e050 -> Node0x5f1e280;
	Node0x5f1e0a0 [shape=record,label="{if.end:                                           \l  %2 = load %struct.ray** %r.addr, align 8\l  %ri = getelementptr inbounds %struct.ray* %2, i32 0, i32 8\l  %3 = load %struct.rayinfo** %ri, align 8\l  store %struct.rayinfo* %3, %struct.rayinfo** %rinfo, align 8\l  %4 = load %struct.rayinfo** %rinfo, align 8\l  %grid = getelementptr inbounds %struct.rayinfo* %4, i32 0, i32 0\l  %5 = load %struct.grid** %grid, align 8\l  store %struct.grid* %5, %struct.grid** %gr, align 8\l  br label %while.cond\l}"];
	Node0x5f1e0a0 -> Node0x5f1e0f0;
	Node0x5f1e0f0 [shape=record,label="{while.cond:                                       \l  %6 = load i64* %indx, align 8\l  %7 = load %struct.grid** %gr, align 8\l  %call1 = call i64 @lookup_emptycells(i64 %6, %struct.grid* %7)\l  %cmp2 = icmp eq i64 %call1, 1\l  br i1 %cmp2, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5f1e0f0:s0 -> Node0x5f1e140;
	Node0x5f1e0f0:s1 -> Node0x5f1e230;
	Node0x5f1e140 [shape=record,label="{while.body:                                       \l  %8 = load %struct.ray** %r.addr, align 8\l  %call3 = call i64 @next_voxel(%struct.ray* %8)\l  store i64 %call3, i64* %indx, align 8\l  %9 = load i64* %indx, align 8\l  %cmp4 = icmp slt i64 %9, 0\l  br i1 %cmp4, label %if.then.5, label %if.end.6\l|{<s0>T|<s1>F}}"];
	Node0x5f1e140:s0 -> Node0x5f1e190;
	Node0x5f1e140:s1 -> Node0x5f1e1e0;
	Node0x5f1e190 [shape=record,label="{if.then.5:                                        \l  store %struct.voxel* null, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f1e190 -> Node0x5f1e280;
	Node0x5f1e1e0 [shape=record,label="{if.end.6:                                         \l  %10 = load %struct.ray** %r.addr, align 8\l  %ri7 = getelementptr inbounds %struct.ray* %10, i32 0, i32 8\l  %11 = load %struct.rayinfo** %ri7, align 8\l  store %struct.rayinfo* %11, %struct.rayinfo** %rinfo, align 8\l  %12 = load %struct.rayinfo** %rinfo, align 8\l  %grid8 = getelementptr inbounds %struct.rayinfo* %12, i32 0, i32 0\l  %13 = load %struct.grid** %grid8, align 8\l  store %struct.grid* %13, %struct.grid** %gr, align 8\l  br label %while.cond\l}"];
	Node0x5f1e1e0 -> Node0x5f1e0f0;
	Node0x5f1e230 [shape=record,label="{while.end:                                        \l  %14 = load i64* %indx, align 8\l  %15 = load %struct.grid** %gr, align 8\l  %call9 = call %struct.voxel* @lookup_hashtable(i64 %14, %struct.grid* %15)\l  store %struct.voxel* %call9, %struct.voxel** %v, align 8\l  %16 = load %struct.voxel** %v, align 8\l  store %struct.voxel* %16, %struct.voxel** %retval\l  br label %return\l}"];
	Node0x5f1e230 -> Node0x5f1e280;
	Node0x5f1e280 [shape=record,label="{return:                                           \l  %17 = load %struct.voxel** %retval\l  ret %struct.voxel* %17\l}"];
}
