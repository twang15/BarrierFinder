digraph "CFG for 'MatrixCopy' function" {
	label="CFG for 'MatrixCopy' function";

	Node0x5fd44f0 [shape=record,label="{entry:\l  %A.addr = alloca [4 x double]*, align 8\l  %B.addr = alloca [4 x double]*, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  store [4 x double]* %A, [4 x double]** %A.addr, align 8\l  store [4 x double]* %B, [4 x double]** %B.addr, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5fd44f0 -> Node0x5fd4540;
	Node0x5fd4540 [shape=record,label="{for.cond:                                         \l  %0 = load i64* %i, align 8\l  %cmp = icmp slt i64 %0, 4\l  br i1 %cmp, label %for.body, label %for.end.9\l|{<s0>T|<s1>F}}"];
	Node0x5fd4540:s0 -> Node0x5fd4590;
	Node0x5fd4540:s1 -> Node0x5fd4770;
	Node0x5fd4590 [shape=record,label="{for.body:                                         \l  store i64 0, i64* %j, align 8\l  br label %for.cond.1\l}"];
	Node0x5fd4590 -> Node0x5fd45e0;
	Node0x5fd45e0 [shape=record,label="{for.cond.1:                                       \l  %1 = load i64* %j, align 8\l  %cmp2 = icmp slt i64 %1, 4\l  br i1 %cmp2, label %for.body.3, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5fd45e0:s0 -> Node0x5fd4630;
	Node0x5fd45e0:s1 -> Node0x5fd46d0;
	Node0x5fd4630 [shape=record,label="{for.body.3:                                       \l  %2 = load i64* %j, align 8\l  %3 = load i64* %i, align 8\l  %4 = load [4 x double]** %B.addr, align 8\l  %arrayidx = getelementptr inbounds [4 x double]* %4, i64 %3\l  %arrayidx4 = getelementptr inbounds [4 x double]* %arrayidx, i32 0, i64 %2\l  %5 = load double* %arrayidx4, align 8\l  %6 = load i64* %j, align 8\l  %7 = load i64* %i, align 8\l  %8 = load [4 x double]** %A.addr, align 8\l  %arrayidx5 = getelementptr inbounds [4 x double]* %8, i64 %7\l  %arrayidx6 = getelementptr inbounds [4 x double]* %arrayidx5, i32 0, i64 %6\l  store double %5, double* %arrayidx6, align 8\l  br label %for.inc\l}"];
	Node0x5fd4630 -> Node0x5fd4680;
	Node0x5fd4680 [shape=record,label="{for.inc:                                          \l  %9 = load i64* %j, align 8\l  %inc = add nsw i64 %9, 1\l  store i64 %inc, i64* %j, align 8\l  br label %for.cond.1\l}"];
	Node0x5fd4680 -> Node0x5fd45e0;
	Node0x5fd46d0 [shape=record,label="{for.end:                                          \l  br label %for.inc.7\l}"];
	Node0x5fd46d0 -> Node0x5fd4720;
	Node0x5fd4720 [shape=record,label="{for.inc.7:                                        \l  %10 = load i64* %i, align 8\l  %inc8 = add nsw i64 %10, 1\l  store i64 %inc8, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5fd4720 -> Node0x5fd4540;
	Node0x5fd4770 [shape=record,label="{for.end.9:                                        \l  ret void\l}"];
}
