digraph "CFG for 'SphDataNormalize' function" {
	label="CFG for 'SphDataNormalize' function";

	Node0x6083af0 [shape=record,label="{entry:\l  %po.addr = alloca %struct.object*, align 8\l  %normMat.addr = alloca [4 x double]*, align 8\l  %i = alloca i64, align 8\l  %ps = alloca %struct.sphere*, align 8\l  %pe = alloca %struct.element*, align 8\l  %surf_point = alloca [4 x double], align 16\l  %center_point = alloca [4 x double], align 16\l  %rad_vector = alloca [4 x double], align 16\l  store %struct.object* %po, %struct.object** %po.addr, align 8\l  store [4 x double]* %normMat, [4 x double]** %normMat.addr, align 8\l  %0 = load %struct.object** %po.addr, align 8\l  %bv = getelementptr inbounds %struct.object* %0, i32 0, i32 2\l  %1 = load [4 x double]** %normMat.addr, align 8\l  call void @NormalizeBoundBox(%struct.bbox* %bv, [4 x double]* %1)\l  %2 = load %struct.object** %po.addr, align 8\l  %pelem = getelementptr inbounds %struct.object* %2, i32 0, i32 3\l  %3 = load %struct.element** %pelem, align 8\l  store %struct.element* %3, %struct.element** %pe, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x6083af0 -> Node0x6083b40;
	Node0x6083b40 [shape=record,label="{for.cond:                                         \l  %4 = load i64* %i, align 8\l  %5 = load %struct.object** %po.addr, align 8\l  %numelements = getelementptr inbounds %struct.object* %5, i32 0, i32 4\l  %6 = load i64* %numelements, align 8\l  %cmp = icmp slt i64 %4, %6\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6083b40:s0 -> Node0x6083b90;
	Node0x6083b40:s1 -> Node0x6083c30;
	Node0x6083b90 [shape=record,label="{for.body:                                         \l  %7 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %7, i32 0, i32 3\l  %8 = load i8** %data, align 8\l  %9 = bitcast i8* %8 to %struct.sphere*\l  store %struct.sphere* %9, %struct.sphere** %ps, align 8\l  %10 = load %struct.element** %pe, align 8\l  %bv1 = getelementptr inbounds %struct.element* %10, i32 0, i32 1\l  %11 = load [4 x double]** %normMat.addr, align 8\l  call void @NormalizeBoundBox(%struct.bbox* %bv1, [4 x double]* %11)\l  %12 = load %struct.sphere** %ps, align 8\l  %center = getelementptr inbounds %struct.sphere* %12, i32 0, i32 0\l  %arrayidx = getelementptr inbounds [4 x double]* %center, i32 0, i64 0\l  %13 = load double* %arrayidx, align 8\l  %14 = load %struct.sphere** %ps, align 8\l  %rad = getelementptr inbounds %struct.sphere* %14, i32 0, i32 1\l  %15 = load double* %rad, align 8\l  %add = fadd double %13, %15\l  %arrayidx2 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 0\l  store double %add, double* %arrayidx2, align 8\l  %16 = load %struct.sphere** %ps, align 8\l  %center3 = getelementptr inbounds %struct.sphere* %16, i32 0, i32 0\l  %arrayidx4 = getelementptr inbounds [4 x double]* %center3, i32 0, i64 1\l  %17 = load double* %arrayidx4, align 8\l  %arrayidx5 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 1\l  store double %17, double* %arrayidx5, align 8\l  %18 = load %struct.sphere** %ps, align 8\l  %center6 = getelementptr inbounds %struct.sphere* %18, i32 0, i32 0\l  %arrayidx7 = getelementptr inbounds [4 x double]* %center6, i32 0, i64 2\l  %19 = load double* %arrayidx7, align 8\l  %arrayidx8 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 2\l  store double %19, double* %arrayidx8, align 8\l  %20 = load %struct.sphere** %ps, align 8\l  %center10 = getelementptr inbounds %struct.sphere* %20, i32 0, i32 0\l  %arrayidx11 = getelementptr inbounds [4 x double]* %center10, i32 0, i64 0\l  %21 = load double* %arrayidx11, align 8\l  %arrayidx12 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  store double %21, double* %arrayidx12, align 8\l  %22 = load %struct.sphere** %ps, align 8\l  %center13 = getelementptr inbounds %struct.sphere* %22, i32 0, i32 0\l  %arrayidx14 = getelementptr inbounds [4 x double]* %center13, i32 0, i64 1\l  %23 = load double* %arrayidx14, align 8\l  %arrayidx15 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  store double %23, double* %arrayidx15, align 8\l  %24 = load %struct.sphere** %ps, align 8\l  %center16 = getelementptr inbounds %struct.sphere* %24, i32 0, i32 0\l  %arrayidx17 = getelementptr inbounds [4 x double]* %center16, i32 0, i64 2\l  %25 = load double* %arrayidx17, align 8\l  %arrayidx18 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  store double %25, double* %arrayidx18, align 8\l  %arraydecay = getelementptr inbounds [4 x double]* %center_point, i32 0, i32\l... 0\l  %26 = load [4 x double]** %normMat.addr, align 8\l  %arraydecay20 = getelementptr inbounds [4 x double]* %center_point, i32 0,\l... i32 0\l  call void @VecMatMult(double* %arraydecay, [4 x double]* %26, double*\l... %arraydecay20)\l  %arraydecay21 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i32\l... 0\l  %27 = load [4 x double]** %normMat.addr, align 8\l  %arraydecay22 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i32\l... 0\l  call void @VecMatMult(double* %arraydecay21, [4 x double]* %27, double*\l... %arraydecay22)\l  %arrayidx23 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 0\l  %28 = load double* %arrayidx23, align 8\l  %arrayidx24 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  %29 = load double* %arrayidx24, align 8\l  %sub = fsub double %28, %29\l  %arrayidx25 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  store double %sub, double* %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 1\l  %30 = load double* %arrayidx26, align 8\l  %arrayidx27 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  %31 = load double* %arrayidx27, align 8\l  %sub28 = fsub double %30, %31\l  %arrayidx29 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  store double %sub28, double* %arrayidx29, align 8\l  %arrayidx30 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 2\l  %32 = load double* %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  %33 = load double* %arrayidx31, align 8\l  %sub32 = fsub double %32, %33\l  %arrayidx33 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  store double %sub32, double* %arrayidx33, align 8\l  %arrayidx34 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  %34 = load double* %arrayidx34, align 8\l  %35 = load %struct.sphere** %ps, align 8\l  %center35 = getelementptr inbounds %struct.sphere* %35, i32 0, i32 0\l  %arrayidx36 = getelementptr inbounds [4 x double]* %center35, i32 0, i64 0\l  store double %34, double* %arrayidx36, align 8\l  %arrayidx37 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  %36 = load double* %arrayidx37, align 8\l  %37 = load %struct.sphere** %ps, align 8\l  %center38 = getelementptr inbounds %struct.sphere* %37, i32 0, i32 0\l  %arrayidx39 = getelementptr inbounds [4 x double]* %center38, i32 0, i64 1\l  store double %36, double* %arrayidx39, align 8\l  %arrayidx40 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  %38 = load double* %arrayidx40, align 8\l  %39 = load %struct.sphere** %ps, align 8\l  %center41 = getelementptr inbounds %struct.sphere* %39, i32 0, i32 0\l  %arrayidx42 = getelementptr inbounds [4 x double]* %center41, i32 0, i64 2\l  store double %38, double* %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  %40 = load double* %arrayidx43, align 8\l  %arrayidx44 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  %41 = load double* %arrayidx44, align 8\l  %mul = fmul double %40, %41\l  %arrayidx45 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  %42 = load double* %arrayidx45, align 8\l  %arrayidx46 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  %43 = load double* %arrayidx46, align 8\l  %mul47 = fmul double %42, %43\l  %add48 = fadd double %mul, %mul47\l  %arrayidx49 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  %44 = load double* %arrayidx49, align 8\l  %arrayidx50 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  %45 = load double* %arrayidx50, align 8\l  %mul51 = fmul double %44, %45\l  %add52 = fadd double %add48, %mul51\l  %call = call double @sqrt(double %add52)\l  %46 = load %struct.sphere** %ps, align 8\l  %rad53 = getelementptr inbounds %struct.sphere* %46, i32 0, i32 1\l  store double %call, double* %rad53, align 8\l  %47 = load %struct.sphere** %ps, align 8\l  %rad54 = getelementptr inbounds %struct.sphere* %47, i32 0, i32 1\l  %48 = load double* %rad54, align 8\l  %49 = load %struct.sphere** %ps, align 8\l  %rad55 = getelementptr inbounds %struct.sphere* %49, i32 0, i32 1\l  %50 = load double* %rad55, align 8\l  %mul56 = fmul double %48, %50\l  %51 = load %struct.sphere** %ps, align 8\l  %rad2 = getelementptr inbounds %struct.sphere* %51, i32 0, i32 2\l  store double %mul56, double* %rad2, align 8\l  %52 = load %struct.element** %pe, align 8\l  %incdec.ptr = getelementptr inbounds %struct.element* %52, i32 1\l  store %struct.element* %incdec.ptr, %struct.element** %pe, align 8\l  br label %for.inc\l}"];
	Node0x6083b90 -> Node0x6083be0;
	Node0x6083be0 [shape=record,label="{for.inc:                                          \l  %53 = load i64* %i, align 8\l  %inc = add nsw i64 %53, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x6083be0 -> Node0x6083b40;
	Node0x6083c30 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
