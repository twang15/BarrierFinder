digraph "CFG for 'PolyPeIntersect' function" {
	label="CFG for 'PolyPeIntersect' function";

	Node0x5ef8690 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %pr.addr = alloca %struct.ray*, align 8\l  %pe.addr = alloca %struct.element*, align 8\l  %hit.addr = alloca %struct.irecord*, align 8\l  %i = alloca i64, align 8\l  %vindex = alloca i64*, align 8\l  %toright = alloca i64, align 8\l  %sh = alloca i64, align 8\l  %nsh = alloca i64, align 8\l  %tmp = alloca double, align 8\l  %Rd_dot_Pn = alloca double, align 8\l  %Ro_dot_Pn = alloca double, align 8\l  %q1 = alloca double, align 8\l  %q2 = alloca double, align 8\l  %tval = alloca double, align 8\l  %x = alloca [101 x double], align 16\l  %y = alloca [101 x double], align 16\l  %ix = alloca double, align 8\l  %iy = alloca double, align 8\l  %dx = alloca double, align 8\l  %dy = alloca double, align 8\l  %xint = alloca double, align 8\l  %I = alloca [3 x double], align 16\l  %vlist = alloca [3 x double]*, align 8\l  %vpos = alloca [3 x double]*, align 8\l  %v1 = alloca [3 x double]*, align 8\l  %v2 = alloca [3 x double]*, align 8\l  %v3 = alloca [3 x double]*, align 8\l  %pp = alloca %struct.poly*, align 8\l  br label %cond.end\l}"];
	Node0x5ef8690 -> Node0x5ef8780;
	Node0x5ef86e0 [shape=record,label="{cond.true:                                        \l  br label %cond.end\l}"];
	Node0x5ef86e0 -> Node0x5ef8780;
	Node0x5ef8730 [shape=record,label="{cond.false:                                       \l  br label %cond.end\l}"];
	Node0x5ef8730 -> Node0x5ef8780;
	Node0x5ef8780 [shape=record,label="{cond.end:                                         \l  br label %return\l}"];
	Node0x5ef8780 -> Node0x5ef9770;
	Node0x5ef87d0 [shape=record,label="{if.then:                                          \l  br label %return\l}"];
	Node0x5ef87d0 -> Node0x5ef9770;
	Node0x5ef8820 [shape=record,label="{if.end:                                           \l  br label %return\l}"];
	Node0x5ef8820 -> Node0x5ef9770;
	Node0x5ef8870 [shape=record,label="{if.then.52:                                       \l  br label %return\l}"];
	Node0x5ef8870 -> Node0x5ef9770;
	Node0x5ef88c0 [shape=record,label="{if.end.53:                                        \l  br label %sw.epilog\l}"];
	Node0x5ef88c0 -> Node0x5ef8dc0;
	Node0x5ef8910 [shape=record,label="{sw.bb:                                            \l  br label %for.cond\l}"];
	Node0x5ef8910 -> Node0x5ef8960;
	Node0x5ef8960 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5ef8960 -> Node0x5ef8a50;
	Node0x5ef89b0 [shape=record,label="{for.body:                                         \l  br label %for.inc\l}"];
	Node0x5ef89b0 -> Node0x5ef8a00;
	Node0x5ef8a00 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5ef8a00 -> Node0x5ef8960;
	Node0x5ef8a50 [shape=record,label="{for.end:                                          \l  br label %sw.epilog\l}"];
	Node0x5ef8a50 -> Node0x5ef8dc0;
	Node0x5ef8aa0 [shape=record,label="{sw.bb.83:                                         \l  br label %for.cond.84\l}"];
	Node0x5ef8aa0 -> Node0x5ef8af0;
	Node0x5ef8af0 [shape=record,label="{for.cond.84:                                      \l  br label %for.end.96\l}"];
	Node0x5ef8af0 -> Node0x5ef8be0;
	Node0x5ef8b40 [shape=record,label="{for.body.87:                                      \l  br label %for.inc.94\l}"];
	Node0x5ef8b40 -> Node0x5ef8b90;
	Node0x5ef8b90 [shape=record,label="{for.inc.94:                                       \l  br label %for.cond.84\l}"];
	Node0x5ef8b90 -> Node0x5ef8af0;
	Node0x5ef8be0 [shape=record,label="{for.end.96:                                       \l  br label %sw.epilog\l}"];
	Node0x5ef8be0 -> Node0x5ef8dc0;
	Node0x5ef8c30 [shape=record,label="{sw.bb.99:                                         \l  br label %for.cond.100\l}"];
	Node0x5ef8c30 -> Node0x5ef8c80;
	Node0x5ef8c80 [shape=record,label="{for.cond.100:                                     \l  br label %for.end.112\l}"];
	Node0x5ef8c80 -> Node0x5ef8d70;
	Node0x5ef8cd0 [shape=record,label="{for.body.103:                                     \l  br label %for.inc.110\l}"];
	Node0x5ef8cd0 -> Node0x5ef8d20;
	Node0x5ef8d20 [shape=record,label="{for.inc.110:                                      \l  br label %for.cond.100\l}"];
	Node0x5ef8d20 -> Node0x5ef8c80;
	Node0x5ef8d70 [shape=record,label="{for.end.112:                                      \l  br label %sw.epilog\l}"];
	Node0x5ef8d70 -> Node0x5ef8dc0;
	Node0x5ef8dc0 [shape=record,label="{sw.epilog:                                        \l  br label %for.cond.115\l}"];
	Node0x5ef8dc0 -> Node0x5ef8e10;
	Node0x5ef8e10 [shape=record,label="{for.cond.115:                                     \l  br label %for.end.138\l}"];
	Node0x5ef8e10 -> Node0x5ef9090;
	Node0x5ef8e60 [shape=record,label="{for.body.118:                                     \l  br label %cond.end.130\l}"];
	Node0x5ef8e60 -> Node0x5ef8f50;
	Node0x5ef8eb0 [shape=record,label="{cond.true.125:                                    \l  br label %cond.end.130\l}"];
	Node0x5ef8eb0 -> Node0x5ef8f50;
	Node0x5ef8f00 [shape=record,label="{cond.false.127:                                   \l  br label %cond.end.130\l}"];
	Node0x5ef8f00 -> Node0x5ef8f50;
	Node0x5ef8f50 [shape=record,label="{cond.end.130:                                     \l  br label %if.end.135\l}"];
	Node0x5ef8f50 -> Node0x5ef8ff0;
	Node0x5ef8fa0 [shape=record,label="{if.then.133:                                      \l  br label %if.end.135\l}"];
	Node0x5ef8fa0 -> Node0x5ef8ff0;
	Node0x5ef8ff0 [shape=record,label="{if.end.135:                                       \l  br label %for.inc.136\l}"];
	Node0x5ef8ff0 -> Node0x5ef9040;
	Node0x5ef9040 [shape=record,label="{for.inc.136:                                      \l  br label %for.cond.115\l}"];
	Node0x5ef9040 -> Node0x5ef8e10;
	Node0x5ef9090 [shape=record,label="{for.end.138:                                      \l  br label %if.end.148\l}"];
	Node0x5ef9090 -> Node0x5ef9180;
	Node0x5ef90e0 [shape=record,label="{if.then.147:                                      \l  br label %if.end.148\l}"];
	Node0x5ef90e0 -> Node0x5ef9180;
	Node0x5ef9130 [shape=record,label="{if.else:                                          \l  br label %if.end.148\l}"];
	Node0x5ef9130 -> Node0x5ef9180;
	Node0x5ef9180 [shape=record,label="{if.end.148:                                       \l  br label %for.cond.149\l}"];
	Node0x5ef9180 -> Node0x5ef91d0;
	Node0x5ef91d0 [shape=record,label="{for.cond.149:                                     \l  br label %for.end.189\l}"];
	Node0x5ef91d0 -> Node0x5ef9680;
	Node0x5ef9220 [shape=record,label="{for.body.152:                                     \l  br label %if.end.158\l}"];
	Node0x5ef9220 -> Node0x5ef9310;
	Node0x5ef9270 [shape=record,label="{if.then.156:                                      \l  br label %if.end.158\l}"];
	Node0x5ef9270 -> Node0x5ef9310;
	Node0x5ef92c0 [shape=record,label="{if.else.157:                                      \l  br label %if.end.158\l}"];
	Node0x5ef92c0 -> Node0x5ef9310;
	Node0x5ef9310 [shape=record,label="{if.end.158:                                       \l  br label %if.end.186\l}"];
	Node0x5ef9310 -> Node0x5ef95e0;
	Node0x5ef9360 [shape=record,label="{if.then.159:                                      \l  br label %cond.end.168\l}"];
	Node0x5ef9360 -> Node0x5ef9450;
	Node0x5ef93b0 [shape=record,label="{cond.true.165:                                    \l  br label %cond.end.168\l}"];
	Node0x5ef93b0 -> Node0x5ef9450;
	Node0x5ef9400 [shape=record,label="{cond.false.166:                                   \l  br label %cond.end.168\l}"];
	Node0x5ef9400 -> Node0x5ef9450;
	Node0x5ef9450 [shape=record,label="{cond.end.168:                                     \l  br label %if.end.185\l}"];
	Node0x5ef9450 -> Node0x5ef9590;
	Node0x5ef94a0 [shape=record,label="{if.then.171:                                      \l  br label %if.end.184\l}"];
	Node0x5ef94a0 -> Node0x5ef9540;
	Node0x5ef94f0 [shape=record,label="{if.then.182:                                      \l  br label %if.end.184\l}"];
	Node0x5ef94f0 -> Node0x5ef9540;
	Node0x5ef9540 [shape=record,label="{if.end.184:                                       \l  br label %if.end.185\l}"];
	Node0x5ef9540 -> Node0x5ef9590;
	Node0x5ef9590 [shape=record,label="{if.end.185:                                       \l  br label %if.end.186\l}"];
	Node0x5ef9590 -> Node0x5ef95e0;
	Node0x5ef95e0 [shape=record,label="{if.end.186:                                       \l  br label %for.inc.187\l}"];
	Node0x5ef95e0 -> Node0x5ef9630;
	Node0x5ef9630 [shape=record,label="{for.inc.187:                                      \l  br label %for.cond.149\l}"];
	Node0x5ef9630 -> Node0x5ef91d0;
	Node0x5ef9680 [shape=record,label="{for.end.189:                                      \l  br label %return\l}"];
	Node0x5ef9680 -> Node0x5ef9770;
	Node0x5ef96d0 [shape=record,label="{if.then.191:                                      \l  br label %return\l}"];
	Node0x5ef96d0 -> Node0x5ef9770;
	Node0x5ef9720 [shape=record,label="{if.else.192:                                      \l  br label %return\l}"];
	Node0x5ef9720 -> Node0x5ef9770;
	Node0x5ef9770 [shape=record,label="{return:                                           \l  ret i64 undef\l}"];
}
