digraph "CFG for 'TriRead' function" {
	label="CFG for 'TriRead' function";

	Node0x60c7690 [shape=record,label="{entry:\l  %po.addr = alloca %struct.object*, align 8\l  %pf.addr = alloca %struct._IO_FILE*, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %instat = alloca i64, align 8\l  %totalverts = alloca i64, align 8\l  %normstr = alloca [5 x i8], align 1\l  %pnormals = alloca i64, align 8\l  %vnormals = alloca i64, align 8\l  %vlist = alloca [3 x double]*, align 8\l  %vptr = alloca [3 x double]*, align 8\l  %nlist = alloca [3 x double]*, align 8\l  %nptr = alloca [3 x double]*, align 8\l  %pt = alloca %struct.tri*, align 8\l  %pe = alloca %struct.element*, align 8\l  store %struct.object* %po, %struct.object** %po.addr, align 8\l  %0 = load %struct.object** %po.addr, align 8\l  %pelem = getelementptr inbounds %struct.object* %0, i32 0, i32 3\l  %1 = load %struct.element** %pelem, align 8\l  store %struct.element* %1, %struct.element** %pe, align 8\l  %call = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([4 x\l... i8]* @.str.4.435, i32 0, i32 0), i64* %totalverts)\l  %conv = sext i32 %call to i64\l  store i64 %conv, i64* %instat, align 8\l  %2 = load i64* %instat, align 8\l  %cmp = icmp ne i64 %2, 1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x60c7690:s0 -> Node0x60dd050;
	Node0x60c7690:s1 -> Node0x60dd0a0;
	Node0x60dd050 [shape=record,label="{if.then:                                          \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd050 -> Node0x60dd910;
	Node0x60dd0a0 [shape=record,label="{if.end:                                           \l  %3 = load %struct.object** %po.addr, align 8\l  %numelements = getelementptr inbounds %struct.object* %3, i32 0, i32 4\l  %4 = load i64* %numelements, align 8\l  %mul = mul i64 96, %4\l  %call3 = call i8* @GlobalMalloc(i64 %mul, i8* getelementptr inbounds ([6 x\l... i8]* @.str.6.437, i32 0, i32 0))\l  %5 = bitcast i8* %call3 to %struct.tri*\l  store %struct.tri* %5, %struct.tri** %pt, align 8\l  %6 = load i64* %totalverts, align 8\l  %add = add nsw i64 %6, 1\l  %mul4 = mul i64 24, %add\l  %call5 = call i8* @GlobalMalloc(i64 %mul4, i8* getelementptr inbounds ([6 x\l... i8]* @.str.6.437, i32 0, i32 0))\l  %7 = bitcast i8* %call5 to [3 x double]*\l  store [3 x double]* %7, [3 x double]** %vlist, align 8\l  %8 = load i64* %totalverts, align 8\l  %mul6 = mul i64 24, %8\l  %call7 = call i8* @GlobalMalloc(i64 %mul6, i8* getelementptr inbounds ([6 x\l... i8]* @.str.6.437, i32 0, i32 0))\l  %9 = bitcast i8* %call7 to [3 x double]*\l  store [3 x double]* %9, [3 x double]** %nlist, align 8\l  %10 = load [3 x double]** %vlist, align 8\l  store [3 x double]* %10, [3 x double]** %vptr, align 8\l  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([4 x\l... i8]* @.str.7.438, i32 0, i32 0), i8* undef)\l  %conv9 = sext i32 %call8 to i64\l  store i64 %conv9, i64* %instat, align 8\l  %11 = load i64* %instat, align 8\l  %cmp10 = icmp ne i64 %11, 1\l  br i1 %cmp10, label %if.then.12, label %if.end.14\l|{<s0>T|<s1>F}}"];
	Node0x60dd0a0:s0 -> Node0x60dd0f0;
	Node0x60dd0a0:s1 -> Node0x60dd140;
	Node0x60dd0f0 [shape=record,label="{if.then.12:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd0f0 -> Node0x60dd910;
	Node0x60dd140 [shape=record,label="{if.end.14:                                        \l  %arrayidx = getelementptr inbounds [5 x i8]* %normstr, i32 0, i64 2\l  %12 = load i8* %arrayidx, align 1\l  %conv15 = sext i8 %12 to i32\l  %cmp16 = icmp eq i32 %conv15, 121\l  %cond = select i1 %cmp16, i32 1, i32 0\l  %conv18 = sext i32 %cond to i64\l  store i64 %conv18, i64* %pnormals, align 8\l  %call20 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([4 x\l... i8]* @.str.7.438, i32 0, i32 0), i8* undef)\l  %conv21 = sext i32 %call20 to i64\l  store i64 %conv21, i64* %instat, align 8\l  %13 = load i64* %instat, align 8\l  %cmp22 = icmp ne i64 %13, 1\l  br i1 %cmp22, label %if.then.24, label %if.end.26\l|{<s0>T|<s1>F}}"];
	Node0x60dd140:s0 -> Node0x60dd190;
	Node0x60dd140:s1 -> Node0x60dd1e0;
	Node0x60dd190 [shape=record,label="{if.then.24:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd190 -> Node0x60dd910;
	Node0x60dd1e0 [shape=record,label="{if.end.26:                                        \l  %arrayidx27 = getelementptr inbounds [5 x i8]* %normstr, i32 0, i64 2\l  %14 = load i8* %arrayidx27, align 1\l  %conv28 = sext i8 %14 to i32\l  %cmp29 = icmp eq i32 %conv28, 121\l  %cond31 = select i1 %cmp29, i32 1, i32 0\l  %conv32 = sext i32 %cond31 to i64\l  store i64 %conv32, i64* %vnormals, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60dd1e0 -> Node0x60dd230;
	Node0x60dd230 [shape=record,label="{for.cond:                                         \l  %15 = load i64* %i, align 8\l  %16 = load i64* %totalverts, align 8\l  %cmp33 = icmp slt i64 %15, %16\l  br i1 %cmp33, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x60dd230:s0 -> Node0x60dd280;
	Node0x60dd230:s1 -> Node0x60dd500;
	Node0x60dd280 [shape=record,label="{for.body:                                         \l  %call38 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([12 x\l... i8]* @.str.10.441, i32 0, i32 0), double* undef, double* undef, double* undef)\l  %conv39 = sext i32 %call38 to i64\l  store i64 %conv39, i64* %instat, align 8\l  %17 = load i64* %instat, align 8\l  %cmp40 = icmp ne i64 %17, 3\l  br i1 %cmp40, label %if.then.42, label %if.end.44\l|{<s0>T|<s1>F}}"];
	Node0x60dd280:s0 -> Node0x60dd2d0;
	Node0x60dd280:s1 -> Node0x60dd320;
	Node0x60dd2d0 [shape=record,label="{if.then.42:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd2d0 -> Node0x60dd910;
	Node0x60dd320 [shape=record,label="{if.end.44:                                        \l  %18 = load i64* %vnormals, align 8\l  %tobool = icmp ne i64 %18, 0\l  br i1 %tobool, label %if.then.45, label %if.end.56\l|{<s0>T|<s1>F}}"];
	Node0x60dd320:s0 -> Node0x60dd370;
	Node0x60dd320:s1 -> Node0x60dd460;
	Node0x60dd370 [shape=record,label="{if.then.45:                                       \l  %call49 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([12 x\l... i8]* @.str.10.441, i32 0, i32 0), double* undef, double* undef, double* undef)\l  %conv50 = sext i32 %call49 to i64\l  store i64 %conv50, i64* %instat, align 8\l  %19 = load i64* %instat, align 8\l  %cmp51 = icmp ne i64 %19, 3\l  br i1 %cmp51, label %if.then.53, label %if.end.55\l|{<s0>T|<s1>F}}"];
	Node0x60dd370:s0 -> Node0x60dd3c0;
	Node0x60dd370:s1 -> Node0x60dd410;
	Node0x60dd3c0 [shape=record,label="{if.then.53:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd3c0 -> Node0x60dd910;
	Node0x60dd410 [shape=record,label="{if.end.55:                                        \l  br label %if.end.56\l}"];
	Node0x60dd410 -> Node0x60dd460;
	Node0x60dd460 [shape=record,label="{if.end.56:                                        \l  %20 = load [3 x double]** %vptr, align 8\l  %incdec.ptr57 = getelementptr inbounds [3 x double]* %20, i32 1\l  store [3 x double]* %incdec.ptr57, [3 x double]** %vptr, align 8\l  br label %for.inc\l}"];
	Node0x60dd460 -> Node0x60dd4b0;
	Node0x60dd4b0 [shape=record,label="{for.inc:                                          \l  %21 = load i64* %i, align 8\l  %inc = add nsw i64 %21, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60dd4b0 -> Node0x60dd230;
	Node0x60dd500 [shape=record,label="{for.end:                                          \l  %22 = load [3 x double]** %vptr, align 8\l  %arrayidx58 = getelementptr inbounds [3 x double]* %22, i32 0, i64 0\l  store double 1.000000e+32, double* %arrayidx58, align 8\l  %23 = load [3 x double]** %vptr, align 8\l  %arrayidx59 = getelementptr inbounds [3 x double]* %23, i32 0, i64 1\l  store double 1.000000e+32, double* %arrayidx59, align 8\l  %24 = load [3 x double]** %vptr, align 8\l  %arrayidx60 = getelementptr inbounds [3 x double]* %24, i32 0, i64 2\l  store double 1.000000e+32, double* %arrayidx60, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond.61\l}"];
	Node0x60dd500 -> Node0x60dd550;
	Node0x60dd550 [shape=record,label="{for.cond.61:                                      \l  %25 = load i64* %i, align 8\l  %26 = load %struct.object** %po.addr, align 8\l  %numelements62 = getelementptr inbounds %struct.object* %26, i32 0, i32 4\l  %27 = load i64* %numelements62, align 8\l  %cmp63 = icmp slt i64 %25, %27\l  br i1 %cmp63, label %for.body.65, label %for.end.99\l|{<s0>T|<s1>F}}"];
	Node0x60dd550:s0 -> Node0x60dd5a0;
	Node0x60dd550:s1 -> Node0x60dd820;
	Node0x60dd5a0 [shape=record,label="{for.body.65:                                      \l  %28 = load i64* %pnormals, align 8\l  %tobool66 = icmp ne i64 %28, 0\l  br i1 %tobool66, label %if.then.67, label %if.end.80\l|{<s0>T|<s1>F}}"];
	Node0x60dd5a0:s0 -> Node0x60dd5f0;
	Node0x60dd5a0:s1 -> Node0x60dd6e0;
	Node0x60dd5f0 [shape=record,label="{if.then.67:                                       \l  %call73 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([13 x\l... i8]* @.str.13.444, i32 0, i32 0), double* undef, double* undef, double* undef)\l  %conv74 = sext i32 %call73 to i64\l  store i64 %conv74, i64* %instat, align 8\l  %29 = load i64* %instat, align 8\l  %cmp75 = icmp ne i64 %29, 3\l  br i1 %cmp75, label %if.then.77, label %if.end.79\l|{<s0>T|<s1>F}}"];
	Node0x60dd5f0:s0 -> Node0x60dd640;
	Node0x60dd5f0:s1 -> Node0x60dd690;
	Node0x60dd640 [shape=record,label="{if.then.77:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd640 -> Node0x60dd910;
	Node0x60dd690 [shape=record,label="{if.end.79:                                        \l  br label %if.end.80\l}"];
	Node0x60dd690 -> Node0x60dd6e0;
	Node0x60dd6e0 [shape=record,label="{if.end.80:                                        \l  %30 = load [3 x double]** %vlist, align 8\l  %31 = load %struct.tri** %pt, align 8\l  %vptr81 = getelementptr inbounds %struct.tri* %31, i32 0, i32 2\l  store [3 x double]* %30, [3 x double]** %vptr81, align 8\l  %32 = load [3 x double]** %nlist, align 8\l  %33 = load %struct.tri** %pt, align 8\l  %nptr82 = getelementptr inbounds %struct.tri* %33, i32 0, i32 3\l  store [3 x double]* %32, [3 x double]** %nptr82, align 8\l  %34 = load i64* %vnormals, align 8\l  %35 = load %struct.tri** %pt, align 8\l  %norminterp = getelementptr inbounds %struct.tri* %35, i32 0, i32 6\l  store i64 %34, i64* %norminterp, align 8\l  %call88 = call i32 (%struct._IO_FILE*, i8*, ...)\l... *@__isoc99_fscanf(%struct._IO_FILE* undef, i8* getelementptr inbounds ([12 x\l... i8]* @.str.15.446, i32 0, i32 0), i64* undef, i64* undef, i64* undef)\l  %conv89 = sext i32 %call88 to i64\l  store i64 %conv89, i64* %instat, align 8\l  %36 = load i64* %instat, align 8\l  %cmp90 = icmp ne i64 %36, 3\l  br i1 %cmp90, label %if.then.92, label %if.end.94\l|{<s0>T|<s1>F}}"];
	Node0x60dd6e0:s0 -> Node0x60dd730;
	Node0x60dd6e0:s1 -> Node0x60dd780;
	Node0x60dd730 [shape=record,label="{if.then.92:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60dd730 -> Node0x60dd910;
	Node0x60dd780 [shape=record,label="{if.end.94:                                        \l  %37 = load %struct.tri** %pt, align 8\l  %38 = bitcast %struct.tri* %37 to i8*\l  %39 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %39, i32 0, i32 3\l  store i8* %38, i8** %data, align 8\l  %40 = load %struct.object** %po.addr, align 8\l  %41 = load %struct.element** %pe, align 8\l  %parent = getelementptr inbounds %struct.element* %41, i32 0, i32 2\l  store %struct.object* %40, %struct.object** %parent, align 8\l  %42 = load %struct.element** %pe, align 8\l  %43 = load %struct.tri** %pt, align 8\l  call void @TriElementBoundBox(%struct.element* %42, %struct.tri* %43)\l  %44 = load %struct.tri** %pt, align 8\l  %incdec.ptr95 = getelementptr inbounds %struct.tri* %44, i32 1\l  store %struct.tri* %incdec.ptr95, %struct.tri** %pt, align 8\l  %45 = load %struct.element** %pe, align 8\l  %incdec.ptr96 = getelementptr inbounds %struct.element* %45, i32 1\l  store %struct.element* %incdec.ptr96, %struct.element** %pe, align 8\l  br label %for.inc.97\l}"];
	Node0x60dd780 -> Node0x60dd7d0;
	Node0x60dd7d0 [shape=record,label="{for.inc.97:                                       \l  %46 = load i64* %i, align 8\l  %inc98 = add nsw i64 %46, 1\l  store i64 %inc98, i64* %i, align 8\l  br label %for.cond.61\l}"];
	Node0x60dd7d0 -> Node0x60dd550;
	Node0x60dd820 [shape=record,label="{for.end.99:                                       \l  %47 = load i64* %vnormals, align 8\l  %tobool100 = icmp ne i64 %47, 0\l  br i1 %tobool100, label %if.end.102, label %if.then.101\l|{<s0>T|<s1>F}}"];
	Node0x60dd820:s0 -> Node0x60dd8c0;
	Node0x60dd820:s1 -> Node0x60dd870;
	Node0x60dd870 [shape=record,label="{if.then.101:                                      \l  %48 = load [3 x double]** %nlist, align 8\l  %49 = bitcast [3 x double]* %48 to i8*\l  call void @GlobalFree(i8* %49)\l  br label %if.end.102\l}"];
	Node0x60dd870 -> Node0x60dd8c0;
	Node0x60dd8c0 [shape=record,label="{if.end.102:                                       \l  ret void\l}"];
	Node0x60dd910 [shape=record,label="{UnifiedUnreachableBlock:                          \l  unreachable\l}"];
}
