digraph "CFG for 'GlobalFree' function" {
	label="CFG for 'GlobalFree' function";

	Node0x5ffb460 [shape=record,label="{entry:\l  %p.addr = alloca i8*, align 8\l  %pcom = alloca i64, align 8\l  %ncom = alloca i64, align 8\l  %pn = alloca %struct.node*, align 8\l  %prev = alloca %struct.node*, align 8\l  %curr = alloca %struct.node*, align 8\l  %next = alloca %struct.node*, align 8\l  store i8* %p, i8** %p.addr, align 8\l  %0 = load %struct.node** @begmem, align 8\l  %tobool = icmp ne %struct.node* %0, null\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ffb460:s0 -> Node0x5ffb500;
	Node0x5ffb460:s1 -> Node0x5ffb4b0;
	Node0x5ffb4b0 [shape=record,label="{if.then:                                          \l  br label %return\l}"];
	Node0x5ffb4b0 -> Node0x6003520;
	Node0x5ffb500 [shape=record,label="{if.end:                                           \l  %1 = load i8** %p.addr, align 8\l  %2 = load i64* @nodesize, align 8\l  %sub = sub i64 0, %2\l  %add.ptr = getelementptr inbounds i8* %1, i64 %sub\l  %3 = bitcast i8* %add.ptr to %struct.node*\l  store %struct.node* %3, %struct.node** %pn, align 8\l  %4 = load %struct.node** %pn, align 8\l  %cksm = getelementptr inbounds %struct.node* %4, i32 0, i32 3\l  %5 = load i64* %cksm, align 8\l  %cmp = icmp ne i64 %5, 1437226410\l  br i1 %cmp, label %if.then.1, label %if.end.2\l|{<s0>T|<s1>F}}"];
	Node0x5ffb500:s0 -> Node0x6001ef0;
	Node0x5ffb500:s1 -> Node0x6001f40;
	Node0x6001ef0 [shape=record,label="{if.then.1:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x6001ef0 -> Node0x6003570;
	Node0x6001f40 [shape=record,label="{if.end.2:                                         \l  %6 = load %struct.node** %pn, align 8\l  %free = getelementptr inbounds %struct.node* %6, i32 0, i32 2\l  %7 = load i64* %free, align 8\l  %tobool3 = icmp ne i64 %7, 0\l  br i1 %tobool3, label %if.then.4, label %if.end.6\l|{<s0>T|<s1>F}}"];
	Node0x6001f40:s0 -> Node0x6001f90;
	Node0x6001f40:s1 -> Node0x6001fe0;
	Node0x6001f90 [shape=record,label="{if.then.4:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x6001f90 -> Node0x6003570;
	Node0x6001fe0 [shape=record,label="{if.end.6:                                         \l  store i64 0, i64* %pcom, align 8\l  store %struct.node* null, %struct.node** %prev, align 8\l  %8 = load %struct.gmem** @gm, align 8\l  %freelist = getelementptr inbounds %struct.gmem* %8, i32 0, i32 5\l  %9 = load %struct.node** %freelist, align 8\l  %tobool8 = icmp ne %struct.node* %9, null\l  br i1 %tobool8, label %if.then.9, label %if.end.30\l|{<s0>T|<s1>F}}"];
	Node0x6001fe0:s0 -> Node0x6002030;
	Node0x6001fe0:s1 -> Node0x6002440;
	Node0x6002030 [shape=record,label="{if.then.9:                                        \l  %10 = load %struct.gmem** @gm, align 8\l  %freelist10 = getelementptr inbounds %struct.gmem* %10, i32 0, i32 5\l  %11 = load %struct.node** %freelist10, align 8\l  store %struct.node* %11, %struct.node** %curr, align 8\l  br label %while.cond\l}"];
	Node0x6002030 -> Node0x6002080;
	Node0x6002080 [shape=record,label="{while.cond:                                       \l  %12 = load %struct.node** %curr, align 8\l  %13 = load %struct.node** %pn, align 8\l  %cmp11 = icmp ult %struct.node* %12, %13\l  br i1 %cmp11, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x6002080:s0 -> Node0x60020d0;
	Node0x6002080:s1 -> Node0x6002120;
	Node0x60020d0 [shape=record,label="{land.rhs:                                         \l  %14 = load %struct.node** %curr, align 8\l  %15 = load %struct.node** @endmem, align 8\l  %cmp12 = icmp ult %struct.node* %14, %15\l  br label %land.end\l}"];
	Node0x60020d0 -> Node0x6002120;
	Node0x6002120 [shape=record,label="{land.end:                                         \l  %16 = phi i1 [ false, %while.cond ], [ %cmp12, %land.rhs ]\l  br i1 %16, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x6002120:s0 -> Node0x6002170;
	Node0x6002120:s1 -> Node0x6002350;
	Node0x6002170 [shape=record,label="{while.body:                                       \l  %17 = load %struct.node** %curr, align 8\l  %cksm13 = getelementptr inbounds %struct.node* %17, i32 0, i32 3\l  %18 = load i64* %cksm13, align 8\l  %cmp14 = icmp ne i64 %18, 1437226410\l  br i1 %cmp14, label %if.then.15, label %if.end.17\l|{<s0>T|<s1>F}}"];
	Node0x6002170:s0 -> Node0x60021c0;
	Node0x6002170:s1 -> Node0x6002210;
	Node0x60021c0 [shape=record,label="{if.then.15:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60021c0 -> Node0x6003570;
	Node0x6002210 [shape=record,label="{if.end.17:                                        \l  %19 = load %struct.node** %curr, align 8\l  %free18 = getelementptr inbounds %struct.node* %19, i32 0, i32 2\l  %20 = load i64* %free18, align 8\l  %tobool19 = icmp ne i64 %20, 0\l  br i1 %tobool19, label %if.then.20, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6002210:s0 -> Node0x6002260;
	Node0x6002210:s1 -> Node0x60022b0;
	Node0x6002260 [shape=record,label="{if.then.20:                                       \l  %21 = load %struct.node** %curr, align 8\l  store %struct.node* %21, %struct.node** %prev, align 8\l  store i64 1, i64* %pcom, align 8\l  br label %if.end.21\l}"];
	Node0x6002260 -> Node0x6002300;
	Node0x60022b0 [shape=record,label="{if.else:                                          \l  store i64 0, i64* %pcom, align 8\l  br label %if.end.21\l}"];
	Node0x60022b0 -> Node0x6002300;
	Node0x6002300 [shape=record,label="{if.end.21:                                        \l  %22 = load %struct.node** %curr, align 8\l  %23 = bitcast %struct.node* %22 to i8*\l  %24 = load %struct.node** %curr, align 8\l  %size = getelementptr inbounds %struct.node* %24, i32 0, i32 1\l  %25 = load i64* %size, align 8\l  %26 = load i64* @nodesize, align 8\l  %add = add i64 %25, %26\l  %add.ptr22 = getelementptr inbounds i8* %23, i64 %add\l  %27 = bitcast i8* %add.ptr22 to %struct.node*\l  store %struct.node* %27, %struct.node** %curr, align 8\l  br label %while.cond\l}"];
	Node0x6002300 -> Node0x6002080;
	Node0x6002350 [shape=record,label="{while.end:                                        \l  %28 = load %struct.node** %curr, align 8\l  %29 = load %struct.node** @endmem, align 8\l  %cmp23 = icmp uge %struct.node* %28, %29\l  br i1 %cmp23, label %if.then.24, label %if.end.29\l|{<s0>T|<s1>F}}"];
	Node0x6002350:s0 -> Node0x60023a0;
	Node0x6002350:s1 -> Node0x60023f0;
	Node0x60023a0 [shape=record,label="{if.then.24:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60023a0 -> Node0x6003570;
	Node0x60023f0 [shape=record,label="{if.end.29:                                        \l  br label %if.end.30\l}"];
	Node0x60023f0 -> Node0x6002440;
	Node0x6002440 [shape=record,label="{if.end.30:                                        \l  store i64 1, i64* %ncom, align 8\l  store %struct.node* null, %struct.node** %next, align 8\l  %30 = load %struct.node** %pn, align 8\l  %31 = bitcast %struct.node* %30 to i8*\l  %32 = load %struct.node** %pn, align 8\l  %size31 = getelementptr inbounds %struct.node* %32, i32 0, i32 1\l  %33 = load i64* %size31, align 8\l  %34 = load i64* @nodesize, align 8\l  %add32 = add i64 %33, %34\l  %add.ptr33 = getelementptr inbounds i8* %31, i64 %add32\l  %35 = bitcast i8* %add.ptr33 to %struct.node*\l  store %struct.node* %35, %struct.node** %curr, align 8\l  br label %while.cond.34\l}"];
	Node0x6002440 -> Node0x6002490;
	Node0x6002490 [shape=record,label="{while.cond.34:                                    \l  %36 = load %struct.node** %next, align 8\l  %tobool35 = icmp ne %struct.node* %36, null\l  br i1 %tobool35, label %land.end.38, label %land.rhs.36\l|{<s0>T|<s1>F}}"];
	Node0x6002490:s0 -> Node0x6002530;
	Node0x6002490:s1 -> Node0x60024e0;
	Node0x60024e0 [shape=record,label="{land.rhs.36:                                      \l  %37 = load %struct.node** %curr, align 8\l  %38 = load %struct.node** @endmem, align 8\l  %cmp37 = icmp ult %struct.node* %37, %38\l  br label %land.end.38\l}"];
	Node0x60024e0 -> Node0x6002530;
	Node0x6002530 [shape=record,label="{land.end.38:                                      \l  %39 = phi i1 [ false, %while.cond.34 ], [ %cmp37, %land.rhs.36 ]\l  br i1 %39, label %while.body.39, label %while.end.53\l|{<s0>T|<s1>F}}"];
	Node0x6002530:s0 -> Node0x6002580;
	Node0x6002530:s1 -> Node0x6002760;
	Node0x6002580 [shape=record,label="{while.body.39:                                    \l  %40 = load %struct.node** %curr, align 8\l  %cksm40 = getelementptr inbounds %struct.node* %40, i32 0, i32 3\l  %41 = load i64* %cksm40, align 8\l  %cmp41 = icmp ne i64 %41, 1437226410\l  br i1 %cmp41, label %if.then.42, label %if.end.44\l|{<s0>T|<s1>F}}"];
	Node0x6002580:s0 -> Node0x60025d0;
	Node0x6002580:s1 -> Node0x6002620;
	Node0x60025d0 [shape=record,label="{if.then.42:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x60025d0 -> Node0x6003570;
	Node0x6002620 [shape=record,label="{if.end.44:                                        \l  %42 = load %struct.node** %curr, align 8\l  %free45 = getelementptr inbounds %struct.node* %42, i32 0, i32 2\l  %43 = load i64* %free45, align 8\l  %tobool46 = icmp ne i64 %43, 0\l  br i1 %tobool46, label %if.then.47, label %if.else.48\l|{<s0>T|<s1>F}}"];
	Node0x6002620:s0 -> Node0x6002670;
	Node0x6002620:s1 -> Node0x60026c0;
	Node0x6002670 [shape=record,label="{if.then.47:                                       \l  %44 = load %struct.node** %curr, align 8\l  store %struct.node* %44, %struct.node** %next, align 8\l  br label %if.end.49\l}"];
	Node0x6002670 -> Node0x6002710;
	Node0x60026c0 [shape=record,label="{if.else.48:                                       \l  store i64 0, i64* %ncom, align 8\l  br label %if.end.49\l}"];
	Node0x60026c0 -> Node0x6002710;
	Node0x6002710 [shape=record,label="{if.end.49:                                        \l  %45 = load %struct.node** %curr, align 8\l  %46 = bitcast %struct.node* %45 to i8*\l  %47 = load %struct.node** %curr, align 8\l  %size50 = getelementptr inbounds %struct.node* %47, i32 0, i32 1\l  %48 = load i64* %size50, align 8\l  %49 = load i64* @nodesize, align 8\l  %add51 = add i64 %48, %49\l  %add.ptr52 = getelementptr inbounds i8* %46, i64 %add51\l  %50 = bitcast i8* %add.ptr52 to %struct.node*\l  store %struct.node* %50, %struct.node** %curr, align 8\l  br label %while.cond.34\l}"];
	Node0x6002710 -> Node0x6002490;
	Node0x6002760 [shape=record,label="{while.end.53:                                     \l  %51 = load %struct.node** %next, align 8\l  %tobool54 = icmp ne %struct.node* %51, null\l  br i1 %tobool54, label %if.end.56, label %if.then.55\l|{<s0>T|<s1>F}}"];
	Node0x6002760:s0 -> Node0x6002800;
	Node0x6002760:s1 -> Node0x60027b0;
	Node0x60027b0 [shape=record,label="{if.then.55:                                       \l  store i64 0, i64* %ncom, align 8\l  br label %if.end.56\l}"];
	Node0x60027b0 -> Node0x6002800;
	Node0x6002800 [shape=record,label="{if.end.56:                                        \l  %52 = load %struct.node** %pn, align 8\l  store %struct.node* %52, %struct.node** %curr, align 8\l  %53 = load %struct.node** %curr, align 8\l  %free57 = getelementptr inbounds %struct.node* %53, i32 0, i32 2\l  store i64 1, i64* %free57, align 8\l  %54 = load %struct.node** %next, align 8\l  %tobool58 = icmp ne %struct.node* %54, null\l  br i1 %tobool58, label %land.lhs.true, label %if.else.68\l|{<s0>T|<s1>F}}"];
	Node0x6002800:s0 -> Node0x6002850;
	Node0x6002800:s1 -> Node0x6002940;
	Node0x6002850 [shape=record,label="{land.lhs.true:                                    \l  %55 = load i64* %ncom, align 8\l  %tobool59 = icmp ne i64 %55, 0\l  br i1 %tobool59, label %if.else.68, label %land.lhs.true.60\l|{<s0>T|<s1>F}}"];
	Node0x6002850:s0 -> Node0x6002940;
	Node0x6002850:s1 -> Node0x60028a0;
	Node0x60028a0 [shape=record,label="{land.lhs.true.60:                                 \l  %56 = load i64* %pcom, align 8\l  %tobool61 = icmp ne i64 %56, 0\l  br i1 %tobool61, label %if.then.62, label %if.else.68\l|{<s0>T|<s1>F}}"];
	Node0x60028a0:s0 -> Node0x60028f0;
	Node0x60028a0:s1 -> Node0x6002940;
	Node0x60028f0 [shape=record,label="{if.then.62:                                       \l  %57 = load %struct.node** %next, align 8\l  %58 = load %struct.node** %prev, align 8\l  %next63 = getelementptr inbounds %struct.node* %58, i32 0, i32 0\l  store %struct.node* %57, %struct.node** %next63, align 8\l  %59 = load %struct.node** %curr, align 8\l  %size64 = getelementptr inbounds %struct.node* %59, i32 0, i32 1\l  %60 = load i64* %size64, align 8\l  %61 = load i64* @nodesize, align 8\l  %add65 = add i64 %60, %61\l  %62 = load %struct.node** %prev, align 8\l  %size66 = getelementptr inbounds %struct.node* %62, i32 0, i32 1\l  %63 = load i64* %size66, align 8\l  %add67 = add i64 %63, %add65\l  store i64 %add67, i64* %size66, align 8\l  br label %if.end.161\l}"];
	Node0x60028f0 -> Node0x60034d0;
	Node0x6002940 [shape=record,label="{if.else.68:                                       \l  %64 = load %struct.node** %next, align 8\l  %tobool69 = icmp ne %struct.node* %64, null\l  br i1 %tobool69, label %land.lhs.true.70, label %if.else.79\l|{<s0>T|<s1>F}}"];
	Node0x6002940:s0 -> Node0x6002990;
	Node0x6002940:s1 -> Node0x6002ad0;
	Node0x6002990 [shape=record,label="{land.lhs.true.70:                                 \l  %65 = load i64* %ncom, align 8\l  %tobool71 = icmp ne i64 %65, 0\l  br i1 %tobool71, label %if.else.79, label %land.lhs.true.72\l|{<s0>T|<s1>F}}"];
	Node0x6002990:s0 -> Node0x6002ad0;
	Node0x6002990:s1 -> Node0x60029e0;
	Node0x60029e0 [shape=record,label="{land.lhs.true.72:                                 \l  %66 = load %struct.node** %prev, align 8\l  %tobool73 = icmp ne %struct.node* %66, null\l  br i1 %tobool73, label %land.lhs.true.74, label %if.else.79\l|{<s0>T|<s1>F}}"];
	Node0x60029e0:s0 -> Node0x6002a30;
	Node0x60029e0:s1 -> Node0x6002ad0;
	Node0x6002a30 [shape=record,label="{land.lhs.true.74:                                 \l  %67 = load i64* %pcom, align 8\l  %tobool75 = icmp ne i64 %67, 0\l  br i1 %tobool75, label %if.else.79, label %if.then.76\l|{<s0>T|<s1>F}}"];
	Node0x6002a30:s0 -> Node0x6002ad0;
	Node0x6002a30:s1 -> Node0x6002a80;
	Node0x6002a80 [shape=record,label="{if.then.76:                                       \l  %68 = load %struct.node** %next, align 8\l  %69 = load %struct.node** %curr, align 8\l  %next78 = getelementptr inbounds %struct.node* %69, i32 0, i32 0\l  store %struct.node* %68, %struct.node** %next78, align 8\l  br label %if.end.160\l}"];
	Node0x6002a80 -> Node0x6003480;
	Node0x6002ad0 [shape=record,label="{if.else.79:                                       \l  %70 = load %struct.node** %next, align 8\l  %tobool80 = icmp ne %struct.node* %70, null\l  br i1 %tobool80, label %land.lhs.true.81, label %if.else.88\l|{<s0>T|<s1>F}}"];
	Node0x6002ad0:s0 -> Node0x6002b20;
	Node0x6002ad0:s1 -> Node0x6002c10;
	Node0x6002b20 [shape=record,label="{land.lhs.true.81:                                 \l  %71 = load i64* %ncom, align 8\l  %tobool82 = icmp ne i64 %71, 0\l  br i1 %tobool82, label %if.else.88, label %land.lhs.true.83\l|{<s0>T|<s1>F}}"];
	Node0x6002b20:s0 -> Node0x6002c10;
	Node0x6002b20:s1 -> Node0x6002b70;
	Node0x6002b70 [shape=record,label="{land.lhs.true.83:                                 \l  %72 = load %struct.node** %prev, align 8\l  %tobool84 = icmp ne %struct.node* %72, null\l  br i1 %tobool84, label %if.else.88, label %if.then.85\l|{<s0>T|<s1>F}}"];
	Node0x6002b70:s0 -> Node0x6002c10;
	Node0x6002b70:s1 -> Node0x6002bc0;
	Node0x6002bc0 [shape=record,label="{if.then.85:                                       \l  %73 = load %struct.node** %curr, align 8\l  %74 = load %struct.gmem** @gm, align 8\l  %freelist86 = getelementptr inbounds %struct.gmem* %74, i32 0, i32 5\l  store %struct.node* %73, %struct.node** %freelist86, align 8\l  %75 = load %struct.node** %next, align 8\l  %76 = load %struct.node** %curr, align 8\l  %next87 = getelementptr inbounds %struct.node* %76, i32 0, i32 0\l  store %struct.node* %75, %struct.node** %next87, align 8\l  br label %if.end.159\l}"];
	Node0x6002bc0 -> Node0x6003430;
	Node0x6002c10 [shape=record,label="{if.else.88:                                       \l  %77 = load i64* %ncom, align 8\l  %tobool89 = icmp ne i64 %77, 0\l  br i1 %tobool89, label %land.lhs.true.90, label %if.else.101\l|{<s0>T|<s1>F}}"];
	Node0x6002c10:s0 -> Node0x6002c60;
	Node0x6002c10:s1 -> Node0x6002d00;
	Node0x6002c60 [shape=record,label="{land.lhs.true.90:                                 \l  %78 = load i64* %pcom, align 8\l  %tobool91 = icmp ne i64 %78, 0\l  br i1 %tobool91, label %if.then.92, label %if.else.101\l|{<s0>T|<s1>F}}"];
	Node0x6002c60:s0 -> Node0x6002cb0;
	Node0x6002c60:s1 -> Node0x6002d00;
	Node0x6002cb0 [shape=record,label="{if.then.92:                                       \l  %79 = load %struct.node** %next, align 8\l  %next93 = getelementptr inbounds %struct.node* %79, i32 0, i32 0\l  %80 = load %struct.node** %next93, align 8\l  %81 = load %struct.node** %prev, align 8\l  %next94 = getelementptr inbounds %struct.node* %81, i32 0, i32 0\l  store %struct.node* %80, %struct.node** %next94, align 8\l  %82 = load %struct.node** %curr, align 8\l  %size95 = getelementptr inbounds %struct.node* %82, i32 0, i32 1\l  %83 = load i64* %size95, align 8\l  %84 = load %struct.node** %next, align 8\l  %size96 = getelementptr inbounds %struct.node* %84, i32 0, i32 1\l  %85 = load i64* %size96, align 8\l  %add97 = add i64 %83, %85\l  %86 = load i64* @nodesize, align 8\l  %mul = mul i64 2, %86\l  %add98 = add i64 %add97, %mul\l  %87 = load %struct.node** %prev, align 8\l  %size99 = getelementptr inbounds %struct.node* %87, i32 0, i32 1\l  %88 = load i64* %size99, align 8\l  %add100 = add i64 %88, %add98\l  store i64 %add100, i64* %size99, align 8\l  br label %if.end.158\l}"];
	Node0x6002cb0 -> Node0x60033e0;
	Node0x6002d00 [shape=record,label="{if.else.101:                                      \l  %89 = load i64* %ncom, align 8\l  %tobool102 = icmp ne i64 %89, 0\l  br i1 %tobool102, label %land.lhs.true.103, label %if.else.115\l|{<s0>T|<s1>F}}"];
	Node0x6002d00:s0 -> Node0x6002d50;
	Node0x6002d00:s1 -> Node0x6002e40;
	Node0x6002d50 [shape=record,label="{land.lhs.true.103:                                \l  %90 = load %struct.node** %prev, align 8\l  %tobool104 = icmp ne %struct.node* %90, null\l  br i1 %tobool104, label %land.lhs.true.105, label %if.else.115\l|{<s0>T|<s1>F}}"];
	Node0x6002d50:s0 -> Node0x6002da0;
	Node0x6002d50:s1 -> Node0x6002e40;
	Node0x6002da0 [shape=record,label="{land.lhs.true.105:                                \l  %91 = load i64* %pcom, align 8\l  %tobool106 = icmp ne i64 %91, 0\l  br i1 %tobool106, label %if.else.115, label %if.then.107\l|{<s0>T|<s1>F}}"];
	Node0x6002da0:s0 -> Node0x6002e40;
	Node0x6002da0:s1 -> Node0x6002df0;
	Node0x6002df0 [shape=record,label="{if.then.107:                                      \l  %92 = load %struct.node** %curr, align 8\l  %93 = load %struct.node** %prev, align 8\l  %next108 = getelementptr inbounds %struct.node* %93, i32 0, i32 0\l  store %struct.node* %92, %struct.node** %next108, align 8\l  %94 = load %struct.node** %next, align 8\l  %next109 = getelementptr inbounds %struct.node* %94, i32 0, i32 0\l  %95 = load %struct.node** %next109, align 8\l  %96 = load %struct.node** %curr, align 8\l  %next110 = getelementptr inbounds %struct.node* %96, i32 0, i32 0\l  store %struct.node* %95, %struct.node** %next110, align 8\l  %97 = load %struct.node** %next, align 8\l  %size111 = getelementptr inbounds %struct.node* %97, i32 0, i32 1\l  %98 = load i64* %size111, align 8\l  %99 = load i64* @nodesize, align 8\l  %add112 = add i64 %98, %99\l  %100 = load %struct.node** %curr, align 8\l  %size113 = getelementptr inbounds %struct.node* %100, i32 0, i32 1\l  %101 = load i64* %size113, align 8\l  %add114 = add i64 %101, %add112\l  store i64 %add114, i64* %size113, align 8\l  br label %if.end.157\l}"];
	Node0x6002df0 -> Node0x6003390;
	Node0x6002e40 [shape=record,label="{if.else.115:                                      \l  %102 = load i64* %ncom, align 8\l  %tobool116 = icmp ne i64 %102, 0\l  br i1 %tobool116, label %land.lhs.true.117, label %if.else.127\l|{<s0>T|<s1>F}}"];
	Node0x6002e40:s0 -> Node0x6002e90;
	Node0x6002e40:s1 -> Node0x6002f30;
	Node0x6002e90 [shape=record,label="{land.lhs.true.117:                                \l  %103 = load %struct.node** %prev, align 8\l  %tobool118 = icmp ne %struct.node* %103, null\l  br i1 %tobool118, label %if.else.127, label %if.then.119\l|{<s0>T|<s1>F}}"];
	Node0x6002e90:s0 -> Node0x6002f30;
	Node0x6002e90:s1 -> Node0x6002ee0;
	Node0x6002ee0 [shape=record,label="{if.then.119:                                      \l  %104 = load %struct.node** %curr, align 8\l  %105 = load %struct.gmem** @gm, align 8\l  %freelist120 = getelementptr inbounds %struct.gmem* %105, i32 0, i32 5\l  store %struct.node* %104, %struct.node** %freelist120, align 8\l  %106 = load %struct.node** %next, align 8\l  %next121 = getelementptr inbounds %struct.node* %106, i32 0, i32 0\l  %107 = load %struct.node** %next121, align 8\l  %108 = load %struct.node** %curr, align 8\l  %next122 = getelementptr inbounds %struct.node* %108, i32 0, i32 0\l  store %struct.node* %107, %struct.node** %next122, align 8\l  %109 = load %struct.node** %next, align 8\l  %size123 = getelementptr inbounds %struct.node* %109, i32 0, i32 1\l  %110 = load i64* %size123, align 8\l  %111 = load i64* @nodesize, align 8\l  %add124 = add i64 %110, %111\l  %112 = load %struct.node** %curr, align 8\l  %size125 = getelementptr inbounds %struct.node* %112, i32 0, i32 1\l  %113 = load i64* %size125, align 8\l  %add126 = add i64 %113, %add124\l  store i64 %add126, i64* %size125, align 8\l  br label %if.end.156\l}"];
	Node0x6002ee0 -> Node0x6003340;
	Node0x6002f30 [shape=record,label="{if.else.127:                                      \l  %114 = load %struct.node** %next, align 8\l  %tobool128 = icmp ne %struct.node* %114, null\l  br i1 %tobool128, label %if.else.137, label %land.lhs.true.129\l|{<s0>T|<s1>F}}"];
	Node0x6002f30:s0 -> Node0x6003020;
	Node0x6002f30:s1 -> Node0x6002f80;
	Node0x6002f80 [shape=record,label="{land.lhs.true.129:                                \l  %115 = load i64* %pcom, align 8\l  %tobool130 = icmp ne i64 %115, 0\l  br i1 %tobool130, label %if.then.131, label %if.else.137\l|{<s0>T|<s1>F}}"];
	Node0x6002f80:s0 -> Node0x6002fd0;
	Node0x6002f80:s1 -> Node0x6003020;
	Node0x6002fd0 [shape=record,label="{if.then.131:                                      \l  %116 = load %struct.node** %prev, align 8\l  %next132 = getelementptr inbounds %struct.node* %116, i32 0, i32 0\l  store %struct.node* null, %struct.node** %next132, align 8\l  %117 = load %struct.node** %curr, align 8\l  %size133 = getelementptr inbounds %struct.node* %117, i32 0, i32 1\l  %118 = load i64* %size133, align 8\l  %119 = load i64* @nodesize, align 8\l  %add134 = add i64 %118, %119\l  %120 = load %struct.node** %prev, align 8\l  %size135 = getelementptr inbounds %struct.node* %120, i32 0, i32 1\l  %121 = load i64* %size135, align 8\l  %add136 = add i64 %121, %add134\l  store i64 %add136, i64* %size135, align 8\l  br label %if.end.155\l}"];
	Node0x6002fd0 -> Node0x60032f0;
	Node0x6003020 [shape=record,label="{if.else.137:                                      \l  %122 = load %struct.node** %next, align 8\l  %tobool138 = icmp ne %struct.node* %122, null\l  br i1 %tobool138, label %if.else.146, label %land.lhs.true.139\l|{<s0>T|<s1>F}}"];
	Node0x6003020:s0 -> Node0x6003160;
	Node0x6003020:s1 -> Node0x6003070;
	Node0x6003070 [shape=record,label="{land.lhs.true.139:                                \l  %123 = load %struct.node** %prev, align 8\l  %tobool140 = icmp ne %struct.node* %123, null\l  br i1 %tobool140, label %land.lhs.true.141, label %if.else.146\l|{<s0>T|<s1>F}}"];
	Node0x6003070:s0 -> Node0x60030c0;
	Node0x6003070:s1 -> Node0x6003160;
	Node0x60030c0 [shape=record,label="{land.lhs.true.141:                                \l  %124 = load i64* %pcom, align 8\l  %tobool142 = icmp ne i64 %124, 0\l  br i1 %tobool142, label %if.else.146, label %if.then.143\l|{<s0>T|<s1>F}}"];
	Node0x60030c0:s0 -> Node0x6003160;
	Node0x60030c0:s1 -> Node0x6003110;
	Node0x6003110 [shape=record,label="{if.then.143:                                      \l  %125 = load %struct.node** %curr, align 8\l  %next145 = getelementptr inbounds %struct.node* %125, i32 0, i32 0\l  store %struct.node* null, %struct.node** %next145, align 8\l  br label %if.end.154\l}"];
	Node0x6003110 -> Node0x60032a0;
	Node0x6003160 [shape=record,label="{if.else.146:                                      \l  %126 = load %struct.node** %next, align 8\l  %tobool147 = icmp ne %struct.node* %126, null\l  br i1 %tobool147, label %if.end.153, label %land.lhs.true.148\l|{<s0>T|<s1>F}}"];
	Node0x6003160:s0 -> Node0x6003250;
	Node0x6003160:s1 -> Node0x60031b0;
	Node0x60031b0 [shape=record,label="{land.lhs.true.148:                                \l  %127 = load %struct.node** %prev, align 8\l  %tobool149 = icmp ne %struct.node* %127, null\l  br i1 %tobool149, label %if.end.153, label %if.then.150\l|{<s0>T|<s1>F}}"];
	Node0x60031b0:s0 -> Node0x6003250;
	Node0x60031b0:s1 -> Node0x6003200;
	Node0x6003200 [shape=record,label="{if.then.150:                                      \l  %128 = load %struct.node** %curr, align 8\l  %129 = load %struct.gmem** @gm, align 8\l  %freelist151 = getelementptr inbounds %struct.gmem* %129, i32 0, i32 5\l  store %struct.node* %128, %struct.node** %freelist151, align 8\l  %130 = load %struct.node** %curr, align 8\l  %next152 = getelementptr inbounds %struct.node* %130, i32 0, i32 0\l  store %struct.node* null, %struct.node** %next152, align 8\l  br label %if.end.153\l}"];
	Node0x6003200 -> Node0x6003250;
	Node0x6003250 [shape=record,label="{if.end.153:                                       \l  br label %if.end.154\l}"];
	Node0x6003250 -> Node0x60032a0;
	Node0x60032a0 [shape=record,label="{if.end.154:                                       \l  br label %if.end.155\l}"];
	Node0x60032a0 -> Node0x60032f0;
	Node0x60032f0 [shape=record,label="{if.end.155:                                       \l  br label %if.end.156\l}"];
	Node0x60032f0 -> Node0x6003340;
	Node0x6003340 [shape=record,label="{if.end.156:                                       \l  br label %if.end.157\l}"];
	Node0x6003340 -> Node0x6003390;
	Node0x6003390 [shape=record,label="{if.end.157:                                       \l  br label %if.end.158\l}"];
	Node0x6003390 -> Node0x60033e0;
	Node0x60033e0 [shape=record,label="{if.end.158:                                       \l  br label %if.end.159\l}"];
	Node0x60033e0 -> Node0x6003430;
	Node0x6003430 [shape=record,label="{if.end.159:                                       \l  br label %if.end.160\l}"];
	Node0x6003430 -> Node0x6003480;
	Node0x6003480 [shape=record,label="{if.end.160:                                       \l  br label %if.end.161\l}"];
	Node0x6003480 -> Node0x60034d0;
	Node0x60034d0 [shape=record,label="{if.end.161:                                       \l  br label %return\l}"];
	Node0x60034d0 -> Node0x6003520;
	Node0x6003520 [shape=record,label="{return:                                           \l  ret void\l}"];
	Node0x6003570 [shape=record,label="{UnifiedUnreachableBlock:                          \l  unreachable\l}"];
}
