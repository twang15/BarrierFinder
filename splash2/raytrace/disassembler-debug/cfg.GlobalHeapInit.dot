digraph "CFG for 'GlobalHeapInit' function" {
	label="CFG for 'GlobalHeapInit' function";

	Node0x5ff3440 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %size.addr = alloca i64, align 8\l  %i = alloca i64, align 8\l  %ptr = alloca i8*, align 8\l  store i64 %size, i64* %size.addr, align 8\l  %0 = load i64* %size.addr, align 8\l  %add = add i64 %0, 7\l  %shr = lshr i64 %add, 3\l  %shl = shl i64 %shr, 3\l  store i64 %shl, i64* %size.addr, align 8\l  %1 = load i64* %size.addr, align 8\l  %call = call i8* @malloc(i64 %1)\l  %2 = bitcast i8* %call to %struct.node*\l  %3 = load %struct.gmem** @gm, align 8\l  %freelist = getelementptr inbounds %struct.gmem* %3, i32 0, i32 5\l  store %struct.node* %2, %struct.node** %freelist, align 8\l  %4 = load %struct.gmem** @gm, align 8\l  %freelist1 = getelementptr inbounds %struct.gmem* %4, i32 0, i32 5\l  %5 = load %struct.node** %freelist1, align 8\l  %tobool = icmp ne %struct.node* %5, null\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ff3440:s0 -> Node0x5ff34e0;
	Node0x5ff3440:s1 -> Node0x5ff3490;
	Node0x5ff3490 [shape=record,label="{if.then:                                          \l  store i64 0, i64* %retval\l  br label %return\l}"];
	Node0x5ff3490 -> Node0x5ff3530;
	Node0x5ff34e0 [shape=record,label="{if.end:                                           \l  store i64 32, i64* @nodesize, align 8\l  %6 = load %struct.gmem** @gm, align 8\l  %freelist2 = getelementptr inbounds %struct.gmem* %6, i32 0, i32 5\l  %7 = load %struct.node** %freelist2, align 8\l  store %struct.node* %7, %struct.node** @begmem, align 8\l  %8 = load %struct.gmem** @gm, align 8\l  %freelist3 = getelementptr inbounds %struct.gmem* %8, i32 0, i32 5\l  %9 = load %struct.node** %freelist3, align 8\l  %10 = bitcast %struct.node* %9 to i8*\l  %11 = load i64* %size.addr, align 8\l  %add.ptr = getelementptr inbounds i8* %10, i64 %11\l  %12 = bitcast i8* %add.ptr to %struct.node*\l  store %struct.node* %12, %struct.node** @endmem, align 8\l  %13 = load i64* %size.addr, align 8\l  %14 = load i64* @nodesize, align 8\l  %sub = sub i64 %13, %14\l  %15 = load %struct.gmem** @gm, align 8\l  %freelist4 = getelementptr inbounds %struct.gmem* %15, i32 0, i32 5\l  %16 = load %struct.node** %freelist4, align 8\l  %size5 = getelementptr inbounds %struct.node* %16, i32 0, i32 1\l  store i64 %sub, i64* %size5, align 8\l  %17 = load %struct.gmem** @gm, align 8\l  %freelist6 = getelementptr inbounds %struct.gmem* %17, i32 0, i32 5\l  %18 = load %struct.node** %freelist6, align 8\l  %next = getelementptr inbounds %struct.node* %18, i32 0, i32 0\l  store %struct.node* null, %struct.node** %next, align 8\l  %19 = load %struct.gmem** @gm, align 8\l  %freelist7 = getelementptr inbounds %struct.gmem* %19, i32 0, i32 5\l  %20 = load %struct.node** %freelist7, align 8\l  %free = getelementptr inbounds %struct.node* %20, i32 0, i32 2\l  store i64 1, i64* %free, align 8\l  %21 = load %struct.gmem** @gm, align 8\l  %freelist8 = getelementptr inbounds %struct.gmem* %21, i32 0, i32 5\l  %22 = load %struct.node** %freelist8, align 8\l  %cksm = getelementptr inbounds %struct.node* %22, i32 0, i32 3\l  store i64 1437226410, i64* %cksm, align 8\l  store i64 1, i64* %retval\l  br label %return\l}"];
	Node0x5ff34e0 -> Node0x5ff3530;
	Node0x5ff3530 [shape=record,label="{return:                                           \l  %23 = load i64* %retval\l  ret i64 %23\l}"];
}
