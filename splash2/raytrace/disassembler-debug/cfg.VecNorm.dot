digraph "CFG for 'VecNorm' function" {
	label="CFG for 'VecNorm' function";

	Node0x5fccb90 [shape=record,label="{entry:\l  %V.addr = alloca double*, align 8\l  %l = alloca double, align 8\l  store double* %V, double** %V.addr, align 8\l  %0 = load double** %V.addr, align 8\l  %arrayidx = getelementptr inbounds double* %0, i64 0\l  %1 = load double* %arrayidx, align 8\l  %2 = load double** %V.addr, align 8\l  %arrayidx1 = getelementptr inbounds double* %2, i64 0\l  %3 = load double* %arrayidx1, align 8\l  %mul = fmul double %1, %3\l  %4 = load double** %V.addr, align 8\l  %arrayidx2 = getelementptr inbounds double* %4, i64 1\l  %5 = load double* %arrayidx2, align 8\l  %6 = load double** %V.addr, align 8\l  %arrayidx3 = getelementptr inbounds double* %6, i64 1\l  %7 = load double* %arrayidx3, align 8\l  %mul4 = fmul double %5, %7\l  %add = fadd double %mul, %mul4\l  %8 = load double** %V.addr, align 8\l  %arrayidx5 = getelementptr inbounds double* %8, i64 2\l  %9 = load double* %arrayidx5, align 8\l  %10 = load double** %V.addr, align 8\l  %arrayidx6 = getelementptr inbounds double* %10, i64 2\l  %11 = load double* %arrayidx6, align 8\l  %mul7 = fmul double %9, %11\l  %add8 = fadd double %add, %mul7\l  %call = call double @sqrt(double %add8)\l  store double %call, double* %l, align 8\l  %12 = load double* %l, align 8\l  %cmp = fcmp ogt double %12, 1.000000e-07\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5fccb90:s0 -> Node0x5fccbe0;
	Node0x5fccb90:s1 -> Node0x5fccc30;
	Node0x5fccbe0 [shape=record,label="{if.then:                                          \l  %13 = load double* %l, align 8\l  %14 = load double** %V.addr, align 8\l  %arrayidx9 = getelementptr inbounds double* %14, i64 0\l  %15 = load double* %arrayidx9, align 8\l  %div = fdiv double %15, %13\l  store double %div, double* %arrayidx9, align 8\l  %16 = load double* %l, align 8\l  %17 = load double** %V.addr, align 8\l  %arrayidx10 = getelementptr inbounds double* %17, i64 1\l  %18 = load double* %arrayidx10, align 8\l  %div11 = fdiv double %18, %16\l  store double %div11, double* %arrayidx10, align 8\l  %19 = load double* %l, align 8\l  %20 = load double** %V.addr, align 8\l  %arrayidx12 = getelementptr inbounds double* %20, i64 2\l  %21 = load double* %arrayidx12, align 8\l  %div13 = fdiv double %21, %19\l  store double %div13, double* %arrayidx12, align 8\l  br label %if.end\l}"];
	Node0x5fccbe0 -> Node0x5fccc30;
	Node0x5fccc30 [shape=record,label="{if.end:                                           \l  ret void\l}"];
}
