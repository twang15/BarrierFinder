digraph "CFG for 'ObjectMalloc' function" {
	label="CFG for 'ObjectMalloc' function";

	Node0x6010bd0 [shape=record,label="{entry:\l  %ObjectType.addr = alloca i64, align 8\l  %count.addr = alloca i64, align 8\l  %n = alloca i64, align 8\l  %p = alloca i8*, align 8\l  %i = alloca i64, align 8\l  %x = alloca %struct.voxel**, align 8\l  %i21 = alloca i64, align 8\l  %w = alloca i64, align 8\l  %x22 = alloca i64*, align 8\l  store i64 %ObjectType, i64* %ObjectType.addr, align 8\l  store i64 %count, i64* %count.addr, align 8\l  %0 = load i64* %ObjectType.addr, align 8\l  switch i64 %0, label %sw.default [\l    i64 0, label %sw.bb\l    i64 1, label %sw.bb.1\l    i64 2, label %sw.bb.10\l    i64 3, label %sw.bb.20\l    i64 6, label %sw.bb.39\l    i64 7, label %sw.bb.48\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>6|<s6>7}}"];
	Node0x6010bd0:s0 -> Node0x6011620;
	Node0x6010bd0:s1 -> Node0x6010c20;
	Node0x6010bd0:s2 -> Node0x6010d60;
	Node0x6010bd0:s3 -> Node0x6010ea0;
	Node0x6010bd0:s4 -> Node0x6011120;
	Node0x6010bd0:s5 -> Node0x60113a0;
	Node0x6010bd0:s6 -> Node0x60114e0;
	Node0x6010c20 [shape=record,label="{sw.bb:                                            \l  %1 = load i64* %count.addr, align 8\l  %mul = mul i64 %1, 144\l  store i64 %mul, i64* %n, align 8\l  %2 = load i64* %n, align 8\l  %call = call i8* @GlobalMalloc(i64 %2, i8* getelementptr inbounds ([5 x i8]*\l... @.str.22.329, i32 0, i32 0))\l  store i8* %call, i8** %p, align 8\l  br label %cond.end\l}"];
	Node0x6010c20 -> Node0x6010d10;
	Node0x6010c70 [shape=record,label="{cond.true:                                        \l  br label %cond.end\l}"];
	Node0x6010c70 -> Node0x6010d10;
	Node0x6010cc0 [shape=record,label="{cond.false:                                       \l  br label %cond.end\l}"];
	Node0x6010cc0 -> Node0x6010d10;
	Node0x6010d10 [shape=record,label="{cond.end:                                         \l  br label %sw.epilog\l}"];
	Node0x6010d10 -> Node0x6011670;
	Node0x6010d60 [shape=record,label="{sw.bb.1:                                          \l  %3 = load i64* %count.addr, align 8\l  %mul2 = mul i64 %3, 40\l  store i64 %mul2, i64* %n, align 8\l  %4 = load i64* %n, align 8\l  %call3 = call i8* @GlobalMalloc(i64 %4, i8* getelementptr inbounds ([6 x\l... i8]* @.str.23.330, i32 0, i32 0))\l  store i8* %call3, i8** %p, align 8\l  br label %cond.end.8\l}"];
	Node0x6010d60 -> Node0x6010e50;
	Node0x6010db0 [shape=record,label="{cond.true.6:                                      \l  br label %cond.end.8\l}"];
	Node0x6010db0 -> Node0x6010e50;
	Node0x6010e00 [shape=record,label="{cond.false.7:                                     \l  br label %cond.end.8\l}"];
	Node0x6010e00 -> Node0x6010e50;
	Node0x6010e50 [shape=record,label="{cond.end.8:                                       \l  br label %sw.epilog\l}"];
	Node0x6010e50 -> Node0x6011670;
	Node0x6010ea0 [shape=record,label="{sw.bb.10:                                         \l  %5 = load i64* %count.addr, align 8\l  %mul11 = mul i64 %5, 8\l  store i64 %mul11, i64* %n, align 8\l  %6 = load i64* %n, align 8\l  %call12 = call i8* @GlobalMalloc(i64 %6, i8* getelementptr inbounds ([10 x\l... i8]* @.str.24.331, i32 0, i32 0))\l  store i8* %call12, i8** %p, align 8\l  %7 = load i8** %p, align 8\l  %8 = bitcast i8* %7 to %struct.voxel**\l  store %struct.voxel** %8, %struct.voxel*** %x, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x6010ea0 -> Node0x6010ef0;
	Node0x6010ef0 [shape=record,label="{for.cond:                                         \l  %9 = load i64* %i, align 8\l  %10 = load i64* %count.addr, align 8\l  %cmp13 = icmp slt i64 %9, %10\l  br i1 %cmp13, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6010ef0:s0 -> Node0x6010f40;
	Node0x6010ef0:s1 -> Node0x6010fe0;
	Node0x6010f40 [shape=record,label="{for.body:                                         \l  %11 = load i64* %i, align 8\l  %12 = load %struct.voxel*** %x, align 8\l  %arrayidx = getelementptr inbounds %struct.voxel** %12, i64 %11\l  store %struct.voxel* null, %struct.voxel** %arrayidx, align 8\l  br label %for.inc\l}"];
	Node0x6010f40 -> Node0x6010f90;
	Node0x6010f90 [shape=record,label="{for.inc:                                          \l  %13 = load i64* %i, align 8\l  %inc = add nsw i64 %13, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x6010f90 -> Node0x6010ef0;
	Node0x6010fe0 [shape=record,label="{for.end:                                          \l  br label %cond.end.18\l}"];
	Node0x6010fe0 -> Node0x60110d0;
	Node0x6011030 [shape=record,label="{cond.true.16:                                     \l  br label %cond.end.18\l}"];
	Node0x6011030 -> Node0x60110d0;
	Node0x6011080 [shape=record,label="{cond.false.17:                                    \l  br label %cond.end.18\l}"];
	Node0x6011080 -> Node0x60110d0;
	Node0x60110d0 [shape=record,label="{cond.end.18:                                      \l  br label %sw.epilog\l}"];
	Node0x60110d0 -> Node0x6011670;
	Node0x6011120 [shape=record,label="{sw.bb.20:                                         \l  %14 = load i64* %count.addr, align 8\l  %div = udiv i64 %14, 64\l  %add23 = add i64 1, %div\l  store i64 %add23, i64* %w, align 8\l  %15 = load i64* %w, align 8\l  %mul24 = mul i64 %15, 8\l  store i64 %mul24, i64* %n, align 8\l  %16 = load i64* %n, align 8\l  %call25 = call i8* @GlobalMalloc(i64 %16, i8* getelementptr inbounds ([11 x\l... i8]* @.str.25.332, i32 0, i32 0))\l  store i8* %call25, i8** %p, align 8\l  %17 = load i8** %p, align 8\l  %18 = bitcast i8* %17 to i64*\l  store i64* %18, i64** %x22, align 8\l  store i64 0, i64* %i21, align 8\l  br label %for.cond.26\l}"];
	Node0x6011120 -> Node0x6011170;
	Node0x6011170 [shape=record,label="{for.cond.26:                                      \l  %19 = load i64* %i21, align 8\l  %20 = load i64* %w, align 8\l  %cmp27 = icmp slt i64 %19, %20\l  br i1 %cmp27, label %for.body.28, label %for.end.32\l|{<s0>T|<s1>F}}"];
	Node0x6011170:s0 -> Node0x60111c0;
	Node0x6011170:s1 -> Node0x6011260;
	Node0x60111c0 [shape=record,label="{for.body.28:                                      \l  %21 = load i64* %i21, align 8\l  %22 = load i64** %x22, align 8\l  %arrayidx29 = getelementptr inbounds i64* %22, i64 %21\l  store i64 -1, i64* %arrayidx29, align 8\l  br label %for.inc.30\l}"];
	Node0x60111c0 -> Node0x6011210;
	Node0x6011210 [shape=record,label="{for.inc.30:                                       \l  %23 = load i64* %i21, align 8\l  %inc31 = add nsw i64 %23, 1\l  store i64 %inc31, i64* %i21, align 8\l  br label %for.cond.26\l}"];
	Node0x6011210 -> Node0x6011170;
	Node0x6011260 [shape=record,label="{for.end.32:                                       \l  br label %cond.end.37\l}"];
	Node0x6011260 -> Node0x6011350;
	Node0x60112b0 [shape=record,label="{cond.true.35:                                     \l  br label %cond.end.37\l}"];
	Node0x60112b0 -> Node0x6011350;
	Node0x6011300 [shape=record,label="{cond.false.36:                                    \l  br label %cond.end.37\l}"];
	Node0x6011300 -> Node0x6011350;
	Node0x6011350 [shape=record,label="{cond.end.37:                                      \l  br label %sw.epilog\l}"];
	Node0x6011350 -> Node0x6011670;
	Node0x60113a0 [shape=record,label="{sw.bb.39:                                         \l  %24 = load i64* %count.addr, align 8\l  %mul40 = mul i64 %24, 120\l  store i64 %mul40, i64* %n, align 8\l  %25 = load i64* %n, align 8\l  %call41 = call i8* @GlobalMalloc(i64 %25, i8* getelementptr inbounds ([8 x\l... i8]* @.str.26.333, i32 0, i32 0))\l  store i8* %call41, i8** %p, align 8\l  br label %cond.end.46\l}"];
	Node0x60113a0 -> Node0x6011490;
	Node0x60113f0 [shape=record,label="{cond.true.44:                                     \l  br label %cond.end.46\l}"];
	Node0x60113f0 -> Node0x6011490;
	Node0x6011440 [shape=record,label="{cond.false.45:                                    \l  br label %cond.end.46\l}"];
	Node0x6011440 -> Node0x6011490;
	Node0x6011490 [shape=record,label="{cond.end.46:                                      \l  br label %sw.epilog\l}"];
	Node0x6011490 -> Node0x6011670;
	Node0x60114e0 [shape=record,label="{sw.bb.48:                                         \l  %26 = load i64* %count.addr, align 8\l  %mul49 = mul i64 %26, 8\l  store i64 %mul49, i64* %n, align 8\l  %27 = load i64* %n, align 8\l  %call50 = call i8* @GlobalMalloc(i64 %27, i8* getelementptr inbounds ([9 x\l... i8]* @.str.27.334, i32 0, i32 0))\l  store i8* %call50, i8** %p, align 8\l  br label %cond.end.55\l}"];
	Node0x60114e0 -> Node0x60115d0;
	Node0x6011530 [shape=record,label="{cond.true.53:                                     \l  br label %cond.end.55\l}"];
	Node0x6011530 -> Node0x60115d0;
	Node0x6011580 [shape=record,label="{cond.false.54:                                    \l  br label %cond.end.55\l}"];
	Node0x6011580 -> Node0x60115d0;
	Node0x60115d0 [shape=record,label="{cond.end.55:                                      \l  br label %sw.epilog\l}"];
	Node0x60115d0 -> Node0x6011670;
	Node0x6011620 [shape=record,label="{sw.default:                                       \l  unreachable\l}"];
	Node0x6011670 [shape=record,label="{sw.epilog:                                        \l  %28 = load i8** %p, align 8\l  ret i8* %28\l}"];
}
