digraph "CFG for 'RayTrace' function" {
	label="CFG for 'RayTrace' function";

	Node0x609d770 [shape=record,label="{entry:\l  %pid.addr = alloca i64, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %x = alloca i64, align 8\l  %y = alloca i64, align 8\l  %xx = alloca double, align 8\l  %yy = alloca double, align 8\l  %N = alloca [3 x double], align 16\l  %Ipoint = alloca [3 x double], align 16\l  %c = alloca [3 x double], align 16\l  %ray = alloca %struct.ray*, align 8\l  %rmsg = alloca %struct.ray, align 8\l  %job = alloca %struct.rayjob, align 8\l  %po = alloca %struct.object*, align 8\l  %hit = alloca i64, align 8\l  %hitrecord = alloca %struct.irecord, align 8\l  store i64 %pid, i64* %pid.addr, align 8\l  store %struct.ray* %rmsg, %struct.ray** %ray, align 8\l  br label %while.cond\l}"];
	Node0x609d770 -> Node0x609d7c0;
	Node0x609d7c0 [shape=record,label="{while.cond:                                       \l  %0 = load i64* %pid.addr, align 8\l  %call = call i64 @GetJobs(%struct.rayjob* %job, i64 %0)\l  %cmp = icmp ne i64 %call, 0\l  br i1 %cmp, label %while.body, label %while.end.92\l|{<s0>T|<s1>F}}"];
	Node0x609d7c0:s0 -> Node0x609d810;
	Node0x609d7c0:s1 -> Node0x609def0;
	Node0x609d810 [shape=record,label="{while.body:                                       \l  br label %while.cond.1\l}"];
	Node0x609d810 -> Node0x609d860;
	Node0x609d860 [shape=record,label="{while.cond.1:                                     \l  %call2 = call i64 @GetRayJobFromBundle(%struct.rayjob* %job, i64* %x, i64*\l... %y)\l  %tobool = icmp ne i64 %call2, 0\l  br i1 %tobool, label %while.body.3, label %while.end.91\l|{<s0>T|<s1>F}}"];
	Node0x609d860:s0 -> Node0x609d8b0;
	Node0x609d860:s1 -> Node0x609dea0;
	Node0x609d8b0 [shape=record,label="{while.body.3:                                     \l  %1 = load i64* %x, align 8\l  %conv = sitofp i64 %1 to double\l  store double %conv, double* %xx, align 8\l  %2 = load i64* %y, align 8\l  %conv4 = sitofp i64 %2 to double\l  store double %conv4, double* %yy, align 8\l  %3 = load i64* @AntiAlias, align 8\l  %tobool5 = icmp ne i64 %3, 0\l  br i1 %tobool5, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x609d8b0:s0 -> Node0x609d900;
	Node0x609d8b0:s1 -> Node0x609da90;
	Node0x609d900 [shape=record,label="{if.then:                                          \l  store i64 0, i64* %j, align 8\l  br label %for.cond\l}"];
	Node0x609d900 -> Node0x609d950;
	Node0x609d950 [shape=record,label="{for.cond:                                         \l  %4 = load i64* %j, align 8\l  %5 = load i64* @NumSubRays, align 8\l  %cmp6 = icmp slt i64 %4, %5\l  br i1 %cmp6, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x609d950:s0 -> Node0x609d9a0;
	Node0x609d950:s1 -> Node0x609da40;
	Node0x609d9a0 [shape=record,label="{for.body:                                         \l  %6 = load %struct.ray** %ray, align 8\l  %7 = load double* %xx, align 8\l  %call8 = call double @frand()\l  %add = fadd double %7, %call8\l  %8 = load double* %yy, align 8\l  %call9 = call double @frand()\l  %add10 = fadd double %8, %call9\l  call void @ConvertPrimRayJobToRayMsg(%struct.ray* %6, double %add, double\l... %add10)\l  %9 = load %struct.ray** %ray, align 8\l  %10 = load i64* %pid.addr, align 8\l  call void @PushRayTreeStack(%struct.ray* %9, i64 %10)\l  br label %for.inc\l}"];
	Node0x609d9a0 -> Node0x609d9f0;
	Node0x609d9f0 [shape=record,label="{for.inc:                                          \l  %11 = load i64* %j, align 8\l  %inc = add nsw i64 %11, 1\l  store i64 %inc, i64* %j, align 8\l  br label %for.cond\l}"];
	Node0x609d9f0 -> Node0x609d950;
	Node0x609da40 [shape=record,label="{for.end:                                          \l  br label %if.end\l}"];
	Node0x609da40 -> Node0x609dae0;
	Node0x609da90 [shape=record,label="{if.else:                                          \l  %12 = load %struct.ray** %ray, align 8\l  %13 = load double* %xx, align 8\l  %14 = load double* %yy, align 8\l  call void @ConvertPrimRayJobToRayMsg(%struct.ray* %12, double %13, double\l... %14)\l  %15 = load %struct.ray** %ray, align 8\l  %16 = load i64* %pid.addr, align 8\l  call void @PushRayTreeStack(%struct.ray* %15, i64 %16)\l  br label %if.end\l}"];
	Node0x609da90 -> Node0x609dae0;
	Node0x609dae0 [shape=record,label="{if.end:                                           \l  br label %while.cond.11\l}"];
	Node0x609dae0 -> Node0x609db30;
	Node0x609db30 [shape=record,label="{while.cond.11:                                    \l  %17 = load %struct.ray** %ray, align 8\l  %18 = load i64* %pid.addr, align 8\l  %call12 = call i64 @PopRayTreeStack(%struct.ray* %17, i64 %18)\l  %cmp13 = icmp ne i64 %call12, 0\l  br i1 %cmp13, label %while.body.15, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x609db30:s0 -> Node0x609db80;
	Node0x609db30:s1 -> Node0x609de50;
	Node0x609db80 [shape=record,label="{while.body.15:                                    \l  %19 = load i64* @TraversalType, align 8\l  switch i64 %19, label %sw.epilog [\l    i64 0, label %sw.bb\l    i64 1, label %sw.bb.17\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x609db80:s0 -> Node0x609dc70;
	Node0x609db80:s1 -> Node0x609dbd0;
	Node0x609db80:s2 -> Node0x609dc20;
	Node0x609dbd0 [shape=record,label="{sw.bb:                                            \l  %call16 = call i64 @Intersect(%struct.ray* undef, %struct.irecord*\l... %hitrecord)\l  store i64 %call16, i64* %hit, align 8\l  br label %sw.epilog\l}"];
	Node0x609dbd0 -> Node0x609dc70;
	Node0x609dc20 [shape=record,label="{sw.bb.17:                                         \l  %20 = load %struct.ray** %ray, align 8\l  %call18 = call i64 @TraverseHierarchyUniform(%struct.ray* %20,\l... %struct.irecord* %hitrecord, i64 undef)\l  store i64 %call18, i64* %hit, align 8\l  br label %sw.epilog\l}"];
	Node0x609dc20 -> Node0x609dc70;
	Node0x609dc70 [shape=record,label="{sw.epilog:                                        \l  %21 = load i64* %hit, align 8\l  %tobool19 = icmp ne i64 %21, 0\l  br i1 %tobool19, label %if.then.20, label %if.else.69\l|{<s0>T|<s1>F}}"];
	Node0x609dc70:s0 -> Node0x609dcc0;
	Node0x609dc70:s1 -> Node0x609ddb0;
	Node0x609dcc0 [shape=record,label="{if.then.20:                                       \l  %22 = load %struct.ray** %ray, align 8\l  %P = getelementptr inbounds %struct.ray* %22, i32 0, i32 3\l  %arrayidx = getelementptr inbounds [3 x double]* %P, i32 0, i64 0\l  %23 = load double* %arrayidx, align 8\l  %24 = load %struct.ray** %ray, align 8\l  %D = getelementptr inbounds %struct.ray* %24, i32 0, i32 4\l  %arrayidx21 = getelementptr inbounds [3 x double]* %D, i32 0, i64 0\l  %25 = load double* %arrayidx21, align 8\l  %t = getelementptr inbounds %struct.irecord* %hitrecord, i32 0, i32 0\l  %26 = load double* %t, align 8\l  %mul = fmul double %25, %26\l  %add22 = fadd double %23, %mul\l  %arrayidx23 = getelementptr inbounds [3 x double]* %Ipoint, i32 0, i64 0\l  store double %add22, double* %arrayidx23, align 8\l  %27 = load %struct.ray** %ray, align 8\l  %P24 = getelementptr inbounds %struct.ray* %27, i32 0, i32 3\l  %arrayidx25 = getelementptr inbounds [3 x double]* %P24, i32 0, i64 1\l  %28 = load double* %arrayidx25, align 8\l  %29 = load %struct.ray** %ray, align 8\l  %D26 = getelementptr inbounds %struct.ray* %29, i32 0, i32 4\l  %arrayidx27 = getelementptr inbounds [3 x double]* %D26, i32 0, i64 1\l  %30 = load double* %arrayidx27, align 8\l  %t28 = getelementptr inbounds %struct.irecord* %hitrecord, i32 0, i32 0\l  %31 = load double* %t28, align 8\l  %mul29 = fmul double %30, %31\l  %add30 = fadd double %28, %mul29\l  %arrayidx31 = getelementptr inbounds [3 x double]* %Ipoint, i32 0, i64 1\l  store double %add30, double* %arrayidx31, align 8\l  %32 = load %struct.ray** %ray, align 8\l  %P32 = getelementptr inbounds %struct.ray* %32, i32 0, i32 3\l  %arrayidx33 = getelementptr inbounds [3 x double]* %P32, i32 0, i64 2\l  %33 = load double* %arrayidx33, align 8\l  %34 = load %struct.ray** %ray, align 8\l  %D34 = getelementptr inbounds %struct.ray* %34, i32 0, i32 4\l  %arrayidx35 = getelementptr inbounds [3 x double]* %D34, i32 0, i64 2\l  %35 = load double* %arrayidx35, align 8\l  %t36 = getelementptr inbounds %struct.irecord* %hitrecord, i32 0, i32 0\l  %36 = load double* %t36, align 8\l  %mul37 = fmul double %35, %36\l  %add38 = fadd double %33, %mul37\l  %arrayidx39 = getelementptr inbounds [3 x double]* %Ipoint, i32 0, i64 2\l  store double %add38, double* %arrayidx39, align 8\l  %37 = load %struct.ray** %ray, align 8\l  %D41 = getelementptr inbounds %struct.ray* %37, i32 0, i32 4\l  %arrayidx42 = getelementptr inbounds [3 x double]* %D41, i32 0, i64 0\l  %38 = load double* %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds [3 x double]* %N, i32 0, i64 0\l  %39 = load double* %arrayidx43, align 8\l  %mul44 = fmul double %38, %39\l  %40 = load %struct.ray** %ray, align 8\l  %D45 = getelementptr inbounds %struct.ray* %40, i32 0, i32 4\l  %arrayidx46 = getelementptr inbounds [3 x double]* %D45, i32 0, i64 1\l  %41 = load double* %arrayidx46, align 8\l  %arrayidx47 = getelementptr inbounds [3 x double]* %N, i32 0, i64 1\l  %42 = load double* %arrayidx47, align 8\l  %mul48 = fmul double %41, %42\l  %add49 = fadd double %mul44, %mul48\l  %43 = load %struct.ray** %ray, align 8\l  %D50 = getelementptr inbounds %struct.ray* %43, i32 0, i32 4\l  %arrayidx51 = getelementptr inbounds [3 x double]* %D50, i32 0, i64 2\l  %44 = load double* %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds [3 x double]* %N, i32 0, i64 2\l  %45 = load double* %arrayidx52, align 8\l  %mul53 = fmul double %44, %45\l  %add54 = fadd double %add49, %mul53\l  %cmp55 = fcmp ogt double %add54, 0.000000e+00\l  br i1 %cmp55, label %if.then.57, label %if.end.66\l|{<s0>T|<s1>F}}"];
	Node0x609dcc0:s0 -> Node0x609dd10;
	Node0x609dcc0:s1 -> Node0x609dd60;
	Node0x609dd10 [shape=record,label="{if.then.57:                                       \l  %arrayidx58 = getelementptr inbounds [3 x double]* %N, i32 0, i64 0\l  %46 = load double* %arrayidx58, align 8\l  %sub = fsub double -0.000000e+00, %46\l  %arrayidx59 = getelementptr inbounds [3 x double]* %N, i32 0, i64 0\l  store double %sub, double* %arrayidx59, align 8\l  %arrayidx60 = getelementptr inbounds [3 x double]* %N, i32 0, i64 1\l  %47 = load double* %arrayidx60, align 8\l  %sub61 = fsub double -0.000000e+00, %47\l  %arrayidx62 = getelementptr inbounds [3 x double]* %N, i32 0, i64 1\l  store double %sub61, double* %arrayidx62, align 8\l  %arrayidx63 = getelementptr inbounds [3 x double]* %N, i32 0, i64 2\l  %48 = load double* %arrayidx63, align 8\l  %sub64 = fsub double -0.000000e+00, %48\l  %arrayidx65 = getelementptr inbounds [3 x double]* %N, i32 0, i64 2\l  store double %sub64, double* %arrayidx65, align 8\l  br label %if.end.66\l}"];
	Node0x609dd10 -> Node0x609dd60;
	Node0x609dd60 [shape=record,label="{if.end.66:                                        \l  %arraydecay67 = getelementptr inbounds [3 x double]* %Ipoint, i32 0, i32 0\l  %arraydecay68 = getelementptr inbounds [3 x double]* %N, i32 0, i32 0\l  %49 = load %struct.ray** %ray, align 8\l  %50 = load i64* %pid.addr, align 8\l  call void @Shade(double* %arraydecay67, double* %arraydecay68, %struct.ray*\l... %49, %struct.irecord* %hitrecord, i64 %50)\l  br label %if.end.90\l}"];
	Node0x609dd60 -> Node0x609de00;
	Node0x609ddb0 [shape=record,label="{if.else.69:                                       \l  %51 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 5, i64 0), align 8\l  %arrayidx70 = getelementptr inbounds [3 x double]* %c, i32 0, i64 0\l  store double %51, double* %arrayidx70, align 8\l  %52 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 5, i64 1), align 8\l  %arrayidx71 = getelementptr inbounds [3 x double]* %c, i32 0, i64 1\l  store double %52, double* %arrayidx71, align 8\l  %53 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 5, i64 2), align 8\l  %arrayidx72 = getelementptr inbounds [3 x double]* %c, i32 0, i64 2\l  store double %53, double* %arrayidx72, align 8\l  %54 = load %struct.ray** %ray, align 8\l  %weight = getelementptr inbounds %struct.ray* %54, i32 0, i32 6\l  %55 = load float* %weight, align 4\l  %conv73 = fpext float %55 to double\l  %arrayidx74 = getelementptr inbounds [3 x double]* %c, i32 0, i64 0\l  %56 = load double* %arrayidx74, align 8\l  %mul75 = fmul double %conv73, %56\l  %arrayidx76 = getelementptr inbounds [3 x double]* %c, i32 0, i64 0\l  store double %mul75, double* %arrayidx76, align 8\l  %57 = load %struct.ray** %ray, align 8\l  %weight77 = getelementptr inbounds %struct.ray* %57, i32 0, i32 6\l  %58 = load float* %weight77, align 4\l  %conv78 = fpext float %58 to double\l  %arrayidx79 = getelementptr inbounds [3 x double]* %c, i32 0, i64 1\l  %59 = load double* %arrayidx79, align 8\l  %mul80 = fmul double %conv78, %59\l  %arrayidx81 = getelementptr inbounds [3 x double]* %c, i32 0, i64 1\l  store double %mul80, double* %arrayidx81, align 8\l  %60 = load %struct.ray** %ray, align 8\l  %weight82 = getelementptr inbounds %struct.ray* %60, i32 0, i32 6\l  %61 = load float* %weight82, align 4\l  %conv83 = fpext float %61 to double\l  %arrayidx84 = getelementptr inbounds [3 x double]* %c, i32 0, i64 2\l  %62 = load double* %arrayidx84, align 8\l  %mul85 = fmul double %conv83, %62\l  %arrayidx86 = getelementptr inbounds [3 x double]* %c, i32 0, i64 2\l  store double %mul85, double* %arrayidx86, align 8\l  %arraydecay87 = getelementptr inbounds [3 x double]* %c, i32 0, i32 0\l  %63 = load %struct.ray** %ray, align 8\l  %x88 = getelementptr inbounds %struct.ray* %63, i32 0, i32 1\l  %64 = load i64* %x88, align 8\l  %65 = load %struct.ray** %ray, align 8\l  %y89 = getelementptr inbounds %struct.ray* %65, i32 0, i32 2\l  %66 = load i64* %y89, align 8\l  call void @AddPixelColor(double* %arraydecay87, i64 %64, i64 %66)\l  br label %if.end.90\l}"];
	Node0x609ddb0 -> Node0x609de00;
	Node0x609de00 [shape=record,label="{if.end.90:                                        \l  br label %while.cond.11\l}"];
	Node0x609de00 -> Node0x609db30;
	Node0x609de50 [shape=record,label="{while.end:                                        \l  br label %while.cond.1\l}"];
	Node0x609de50 -> Node0x609d860;
	Node0x609dea0 [shape=record,label="{while.end.91:                                     \l  br label %while.cond\l}"];
	Node0x609dea0 -> Node0x609d7c0;
	Node0x609def0 [shape=record,label="{while.end.92:                                     \l  ret void\l}"];
}
