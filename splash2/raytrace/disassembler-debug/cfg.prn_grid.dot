digraph "CFG for 'prn_grid' function" {
	label="CFG for 'prn_grid' function";

	Node0x5f23e30 [shape=record,label="{entry:\l  %g.addr = alloca %struct.grid*, align 8\l  %i = alloca i64, align 8\l  %n = alloca i64, align 8\l  %cnt = alloca i64, align 8\l  %ng = alloca %struct.grid*, align 8\l  %v = alloca %struct.voxel*, align 8\l  store %struct.grid* %g, %struct.grid** %g.addr, align 8\l  br label %if.end\l}"];
	Node0x5f23e30 -> Node0x5f60150;
	Node0x5f600b0 [shape=record,label="{if.then:                                          \l  br label %if.end\l}"];
	Node0x5f600b0 -> Node0x5f60150;
	Node0x5f60100 [shape=record,label="{if.else:                                          \l  br label %if.end\l}"];
	Node0x5f60100 -> Node0x5f60150;
	Node0x5f60150 [shape=record,label="{if.end:                                           \l  %0 = load %struct.grid** %g.addr, align 8\l  %indx_inc26 = getelementptr inbounds %struct.grid* %0, i32 0, i32 5\l  %arrayidx27 = getelementptr inbounds [3 x i64]* %indx_inc26, i32 0, i64 1\l  %1 = load i64* %arrayidx27, align 8\l  %2 = load %struct.grid** %g.addr, align 8\l  %indx_inc28 = getelementptr inbounds %struct.grid* %2, i32 0, i32 5\l  %arrayidx29 = getelementptr inbounds [3 x i64]* %indx_inc28, i32 0, i64 2\l  %3 = load i64* %arrayidx29, align 8\l  %mul = mul nsw i64 %1, %3\l  store i64 %mul, i64* %n, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f60150 -> Node0x5f601a0;
	Node0x5f601a0 [shape=record,label="{for.cond:                                         \l  %4 = load i64* %i, align 8\l  %5 = load i64* %n, align 8\l  %cmp30 = icmp slt i64 %4, %5\l  br i1 %cmp30, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5f601a0:s0 -> Node0x5f601f0;
	Node0x5f601a0:s1 -> Node0x5f60380;
	Node0x5f601f0 [shape=record,label="{for.body:                                         \l  %6 = load i64* %i, align 8\l  %7 = load %struct.grid** %g.addr, align 8\l  %call31 = call i64 @lookup_emptycells(i64 %6, %struct.grid* %7)\l  %cmp32 = icmp eq i64 %call31, 1\l  br i1 %cmp32, label %if.then.33, label %if.else.35\l|{<s0>T|<s1>F}}"];
	Node0x5f601f0:s0 -> Node0x5f60240;
	Node0x5f601f0:s1 -> Node0x5f60290;
	Node0x5f60240 [shape=record,label="{if.then.33:                                       \l  br label %if.end.37\l}"];
	Node0x5f60240 -> Node0x5f602e0;
	Node0x5f60290 [shape=record,label="{if.else.35:                                       \l  %8 = load i64* %i, align 8\l  %9 = load %struct.grid** %g.addr, align 8\l  %call36 = call %struct.voxel* @lookup_hashtable(i64 %8, %struct.grid* %9)\l  store %struct.voxel* %call36, %struct.voxel** %v, align 8\l  %10 = load %struct.voxel** %v, align 8\l  call void @prn_voxel(%struct.voxel* %10)\l  br label %if.end.37\l}"];
	Node0x5f60290 -> Node0x5f602e0;
	Node0x5f602e0 [shape=record,label="{if.end.37:                                        \l  br label %for.inc\l}"];
	Node0x5f602e0 -> Node0x5f60330;
	Node0x5f60330 [shape=record,label="{for.inc:                                          \l  %11 = load i64* %i, align 8\l  %inc = add nsw i64 %11, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f60330 -> Node0x5f601a0;
	Node0x5f60380 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
