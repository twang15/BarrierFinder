digraph "CFG for 'ShadowIntersect' function" {
	label="CFG for 'ShadowIntersect' function";

	Node0x5fbbeb0 [shape=record,label="{entry:\l  %pr.addr = alloca %struct.ray*, align 8\l  %lightdist.addr = alloca double, align 8\l  %pe.addr = alloca %struct.element*, align 8\l  %trans = alloca double, align 8\l  %po = alloca %struct.object*, align 8\l  %newhit = alloca %struct.irecord, align 8\l  store double %lightdist, double* %lightdist.addr, align 8\l  store %struct.element* %pe, %struct.element** %pe.addr, align 8\l  store double 1.000000e+00, double* %trans, align 8\l  %0 = load %struct.gmem** @gm, align 8\l  %modelroot = getelementptr inbounds %struct.gmem* %0, i32 0, i32 3\l  %1 = load %struct.object** %modelroot, align 8\l  store %struct.object* %1, %struct.object** %po, align 8\l  br label %while.cond\l}"];
	Node0x5fbbeb0 -> Node0x5fbbf00;
	Node0x5fbbf00 [shape=record,label="{while.cond:                                       \l  %2 = load %struct.object** %po, align 8\l  %tobool = icmp ne %struct.object* %2, null\l  br i1 %tobool, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x5fbbf00:s0 -> Node0x5fbbf50;
	Node0x5fbbf00:s1 -> Node0x5fbbfa0;
	Node0x5fbbf50 [shape=record,label="{land.rhs:                                         \l  %3 = load double* %trans, align 8\l  %cmp = fcmp ogt double %3, 0.000000e+00\l  br label %land.end\l}"];
	Node0x5fbbf50 -> Node0x5fbbfa0;
	Node0x5fbbfa0 [shape=record,label="{land.end:                                         \l  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]\l  br i1 %4, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5fbbfa0:s0 -> Node0x5fbbff0;
	Node0x5fbbfa0:s1 -> Node0x5fbc180;
	Node0x5fbbff0 [shape=record,label="{while.body:                                       \l  %5 = load %struct.object** %po, align 8\l  %procs = getelementptr inbounds %struct.object* %5, i32 0, i32 5\l  %6 = load %struct.pprocs** %procs, align 8\l  %intersect = getelementptr inbounds %struct.pprocs* %6, i32 0, i32 5\l  %7 = load i64 (...)** %intersect, align 8\l  %callee.knr.cast = bitcast i64 (...)* %7 to i64 (%struct.ray*,\l... %struct.object*, %struct.irecord*, ...)*\l  %call = call i64 (%struct.ray*, %struct.object*, %struct.irecord*, ...)\l... *%callee.knr.cast(%struct.ray* undef, %struct.object* undef, %struct.irecord*\l... %newhit)\l  %tobool1 = icmp ne i64 %call, 0\l  br i1 %tobool1, label %land.lhs.true, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5fbbff0:s0 -> Node0x5fbc040;
	Node0x5fbbff0:s1 -> Node0x5fbc130;
	Node0x5fbc040 [shape=record,label="{land.lhs.true:                                    \l  %pelem = getelementptr inbounds %struct.irecord* %newhit, i32 0, i32 1\l  %8 = load %struct.element** %pelem, align 8\l  %9 = load %struct.element** %pe.addr, align 8\l  %cmp2 = icmp ne %struct.element* %8, %9\l  br i1 %cmp2, label %land.lhs.true.3, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5fbc040:s0 -> Node0x5fbc090;
	Node0x5fbc040:s1 -> Node0x5fbc130;
	Node0x5fbc090 [shape=record,label="{land.lhs.true.3:                                  \l  %t = getelementptr inbounds %struct.irecord* %newhit, i32 0, i32 0\l  %10 = load double* %t, align 8\l  %11 = load double* %lightdist.addr, align 8\l  %cmp4 = fcmp olt double %10, %11\l  br i1 %cmp4, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5fbc090:s0 -> Node0x5fbc0e0;
	Node0x5fbc090:s1 -> Node0x5fbc130;
	Node0x5fbc0e0 [shape=record,label="{if.then:                                          \l  %pelem5 = getelementptr inbounds %struct.irecord* %newhit, i32 0, i32 1\l  %12 = load %struct.element** %pelem5, align 8\l  %parent = getelementptr inbounds %struct.element* %12, i32 0, i32 2\l  %13 = load %struct.object** %parent, align 8\l  %surf = getelementptr inbounds %struct.object* %13, i32 0, i32 6\l  %14 = load %struct.surf** %surf, align 8\l  %ktran = getelementptr inbounds %struct.surf* %14, i32 0, i32 4\l  %15 = load double* %ktran, align 8\l  %16 = load double* %trans, align 8\l  %mul = fmul double %16, %15\l  store double %mul, double* %trans, align 8\l  br label %if.end\l}"];
	Node0x5fbc0e0 -> Node0x5fbc130;
	Node0x5fbc130 [shape=record,label="{if.end:                                           \l  %17 = load %struct.object** %po, align 8\l  %next = getelementptr inbounds %struct.object* %17, i32 0, i32 7\l  %18 = load %struct.object** %next, align 8\l  store %struct.object* %18, %struct.object** %po, align 8\l  br label %while.cond\l}"];
	Node0x5fbc130 -> Node0x5fbbf00;
	Node0x5fbc180 [shape=record,label="{while.end:                                        \l  %19 = load double* %trans, align 8\l  ret double %19\l}"];
}
