digraph "CFG for 'OpenFrameBuffer' function" {
	label="CFG for 'OpenFrameBuffer' function";

	Node0x5f3e6d0 [shape=record,label="{entry:\l  %i = alloca i64, align 8\l  %fb = alloca %struct.pixel*, align 8\l  %0 = load i64* getelementptr inbounds (%struct.display* @Display, i32 0, i32\l... 7), align 8\l  %mul = mul i64 %0, 12\l  %call = call i8* @GlobalMalloc(i64 %mul, i8* getelementptr inbounds ([7 x\l... i8]* @.str.1.141, i32 0, i32 0))\l  %1 = bitcast i8* %call to %struct.pixel*\l  store %struct.pixel* %1, %struct.pixel** getelementptr inbounds\l... (%struct.display* @Display, i32 0, i32 16), align 8\l  store %struct.pixel* %1, %struct.pixel** %fb, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f3e6d0 -> Node0x5f3e720;
	Node0x5f3e720 [shape=record,label="{for.cond:                                         \l  %2 = load i64* %i, align 8\l  %3 = load i64* getelementptr inbounds (%struct.display* @Display, i32 0, i32\l... 7), align 8\l  %cmp = icmp slt i64 %2, %3\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5f3e720:s0 -> Node0x5f3e770;
	Node0x5f3e720:s1 -> Node0x5f3ec40;
	Node0x5f3e770 [shape=record,label="{for.body:                                         \l  %4 = load %struct.pixel** %fb, align 8\l  %r = getelementptr inbounds %struct.pixel* %4, i32 0, i32 0\l  store float 0.000000e+00, float* %r, align 4\l  %5 = load %struct.pixel** %fb, align 8\l  %g = getelementptr inbounds %struct.pixel* %5, i32 0, i32 1\l  store float 0.000000e+00, float* %g, align 4\l  %6 = load %struct.pixel** %fb, align 8\l  %b = getelementptr inbounds %struct.pixel* %6, i32 0, i32 2\l  store float 0.000000e+00, float* %b, align 4\l  %7 = load %struct.pixel** %fb, align 8\l  %incdec.ptr = getelementptr inbounds %struct.pixel* %7, i32 1\l  store %struct.pixel* %incdec.ptr, %struct.pixel** %fb, align 8\l  br label %for.inc\l}"];
	Node0x5f3e770 -> Node0x5f3e7c0;
	Node0x5f3e7c0 [shape=record,label="{for.inc:                                          \l  %8 = load i64* %i, align 8\l  %inc = add nsw i64 %8, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5f3e7c0 -> Node0x5f3e720;
	Node0x5f3ec40 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
