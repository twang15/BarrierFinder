digraph "CFG for 'ConvertPrimRayJobToRayMsg' function" {
	label="CFG for 'ConvertPrimRayJobToRayMsg' function";

	Node0x6096d70 [shape=record,label="{entry:\l  %ray.addr = alloca %struct.ray*, align 8\l  %x.addr = alloca double, align 8\l  %y.addr = alloca double, align 8\l  %dir = alloca [4 x double], align 16\l  %origin = alloca [4 x double], align 16\l  store %struct.ray* %ray, %struct.ray** %ray.addr, align 8\l  store double %x, double* %x.addr, align 8\l  store double %y, double* %y.addr, align 8\l  %0 = load i64* getelementptr inbounds (%struct.view* @View, i32 0, i32 6),\l... align 8\l  %cmp = icmp eq i64 %0, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6096d70:s0 -> Node0x60971c0;
	Node0x6096d70:s1 -> Node0x6097210;
	Node0x60971c0 [shape=record,label="{if.then:                                          \l  %1 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 12), align 8\l  %sub = fsub double -0.000000e+00, %1\l  %2 = load double* %x.addr, align 8\l  %3 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 14), align 8\l  %mul = fmul double %2, %3\l  %add = fadd double %sub, %mul\l  %arrayidx = getelementptr inbounds [4 x double]* %dir, i32 0, i64 0\l  store double %add, double* %arrayidx, align 8\l  %4 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 13), align 8\l  %5 = load double* %y.addr, align 8\l  %6 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 15), align 8\l  %mul1 = fmul double %5, %6\l  %sub2 = fsub double %4, %mul1\l  %arrayidx3 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 1\l  store double %sub2, double* %arrayidx3, align 8\l  %7 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 9), align 8\l  %arrayidx4 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 2\l  store double %7, double* %arrayidx4, align 8\l  %arraydecay = getelementptr inbounds [4 x double]* %dir, i32 0, i32 0\l  call void @TransformViewRay(double* %arraydecay)\l  %arraydecay6 = getelementptr inbounds [4 x double]* %dir, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay6)\l  %arrayidx7 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 0\l  %8 = load double* %arrayidx7, align 8\l  %9 = load %struct.ray** %ray.addr, align 8\l  %D = getelementptr inbounds %struct.ray* %9, i32 0, i32 4\l  %arrayidx8 = getelementptr inbounds [3 x double]* %D, i32 0, i64 0\l  store double %8, double* %arrayidx8, align 8\l  %arrayidx9 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 1\l  %10 = load double* %arrayidx9, align 8\l  %11 = load %struct.ray** %ray.addr, align 8\l  %D10 = getelementptr inbounds %struct.ray* %11, i32 0, i32 4\l  %arrayidx11 = getelementptr inbounds [3 x double]* %D10, i32 0, i64 1\l  store double %10, double* %arrayidx11, align 8\l  %arrayidx12 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 2\l  %12 = load double* %arrayidx12, align 8\l  %13 = load %struct.ray** %ray.addr, align 8\l  %D13 = getelementptr inbounds %struct.ray* %13, i32 0, i32 4\l  %arrayidx14 = getelementptr inbounds [3 x double]* %D13, i32 0, i64 2\l  store double %12, double* %arrayidx14, align 8\l  %14 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 0, i64 0), align 8\l  %15 = load %struct.ray** %ray.addr, align 8\l  %P = getelementptr inbounds %struct.ray* %15, i32 0, i32 3\l  %arrayidx15 = getelementptr inbounds [3 x double]* %P, i32 0, i64 0\l  store double %14, double* %arrayidx15, align 8\l  %16 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 0, i64 1), align 8\l  %17 = load %struct.ray** %ray.addr, align 8\l  %P16 = getelementptr inbounds %struct.ray* %17, i32 0, i32 3\l  %arrayidx17 = getelementptr inbounds [3 x double]* %P16, i32 0, i64 1\l  store double %16, double* %arrayidx17, align 8\l  %18 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 0, i64 2), align 8\l  %19 = load %struct.ray** %ray.addr, align 8\l  %P18 = getelementptr inbounds %struct.ray* %19, i32 0, i32 3\l  %arrayidx19 = getelementptr inbounds [3 x double]* %P18, i32 0, i64 2\l  store double %18, double* %arrayidx19, align 8\l  br label %if.end\l}"];
	Node0x60971c0 -> Node0x6097260;
	Node0x6097210 [shape=record,label="{if.else:                                          \l  %arrayidx20 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 0\l  store double 0.000000e+00, double* %arrayidx20, align 8\l  %arrayidx21 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 1\l  store double 0.000000e+00, double* %arrayidx21, align 8\l  %arrayidx22 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 2\l  store double 1.000000e+00, double* %arrayidx22, align 8\l  %arraydecay24 = getelementptr inbounds [4 x double]* %dir, i32 0, i32 0\l  call void @TransformViewRay(double* %arraydecay24)\l  %arraydecay25 = getelementptr inbounds [4 x double]* %dir, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay25)\l  %arrayidx26 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 0\l  %20 = load double* %arrayidx26, align 8\l  %21 = load %struct.ray** %ray.addr, align 8\l  %D27 = getelementptr inbounds %struct.ray* %21, i32 0, i32 4\l  %arrayidx28 = getelementptr inbounds [3 x double]* %D27, i32 0, i64 0\l  store double %20, double* %arrayidx28, align 8\l  %arrayidx29 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 1\l  %22 = load double* %arrayidx29, align 8\l  %23 = load %struct.ray** %ray.addr, align 8\l  %D30 = getelementptr inbounds %struct.ray* %23, i32 0, i32 4\l  %arrayidx31 = getelementptr inbounds [3 x double]* %D30, i32 0, i64 1\l  store double %22, double* %arrayidx31, align 8\l  %arrayidx32 = getelementptr inbounds [4 x double]* %dir, i32 0, i64 2\l  %24 = load double* %arrayidx32, align 8\l  %25 = load %struct.ray** %ray.addr, align 8\l  %D33 = getelementptr inbounds %struct.ray* %25, i32 0, i32 4\l  %arrayidx34 = getelementptr inbounds [3 x double]* %D33, i32 0, i64 2\l  store double %24, double* %arrayidx34, align 8\l  %26 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 12), align 8\l  %sub35 = fsub double -0.000000e+00, %26\l  %27 = load double* %x.addr, align 8\l  %28 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 14), align 8\l  %mul36 = fmul double %27, %28\l  %add37 = fadd double %sub35, %mul36\l  %arrayidx38 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 0\l  store double %add37, double* %arrayidx38, align 8\l  %29 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 13), align 8\l  %30 = load double* %y.addr, align 8\l  %31 = load double* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 15), align 8\l  %mul39 = fmul double %30, %31\l  %sub40 = fsub double %29, %mul39\l  %arrayidx41 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 1\l  store double %sub40, double* %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 2\l  store double 0.000000e+00, double* %arrayidx42, align 8\l  %arraydecay44 = getelementptr inbounds [4 x double]* %origin, i32 0, i32 0\l  call void @TransformViewRay(double* %arraydecay44)\l  %arrayidx45 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 0\l  %32 = load double* %arrayidx45, align 8\l  %33 = load %struct.ray** %ray.addr, align 8\l  %P46 = getelementptr inbounds %struct.ray* %33, i32 0, i32 3\l  %arrayidx47 = getelementptr inbounds [3 x double]* %P46, i32 0, i64 0\l  store double %32, double* %arrayidx47, align 8\l  %arrayidx48 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 1\l  %34 = load double* %arrayidx48, align 8\l  %35 = load %struct.ray** %ray.addr, align 8\l  %P49 = getelementptr inbounds %struct.ray* %35, i32 0, i32 3\l  %arrayidx50 = getelementptr inbounds [3 x double]* %P49, i32 0, i64 1\l  store double %34, double* %arrayidx50, align 8\l  %arrayidx51 = getelementptr inbounds [4 x double]* %origin, i32 0, i64 2\l  %36 = load double* %arrayidx51, align 8\l  %37 = load %struct.ray** %ray.addr, align 8\l  %P52 = getelementptr inbounds %struct.ray* %37, i32 0, i32 3\l  %arrayidx53 = getelementptr inbounds [3 x double]* %P52, i32 0, i64 2\l  store double %36, double* %arrayidx53, align 8\l  br label %if.end\l}"];
	Node0x6097210 -> Node0x6097260;
	Node0x6097260 [shape=record,label="{if.end:                                           \l  %38 = load %struct.ray** %ray.addr, align 8\l  %level = getelementptr inbounds %struct.ray* %38, i32 0, i32 5\l  store i64 0, i64* %level, align 8\l  %39 = load i64* @NumSubRays, align 8\l  %conv = sitofp i64 %39 to double\l  %div = fdiv double 1.000000e+00, %conv\l  %conv54 = fptrunc double %div to float\l  %40 = load %struct.ray** %ray.addr, align 8\l  %weight = getelementptr inbounds %struct.ray* %40, i32 0, i32 6\l  store float %conv54, float* %weight, align 4\l  %41 = load %struct.gmem** @gm, align 8\l  %rid = getelementptr inbounds %struct.gmem* %41, i32 0, i32 2\l  %42 = load i64* %rid, align 8\l  %inc = add nsw i64 %42, 1\l  store i64 %inc, i64* %rid, align 8\l  %43 = load %struct.ray** %ray.addr, align 8\l  %id = getelementptr inbounds %struct.ray* %43, i32 0, i32 0\l  store i64 %42, i64* %id, align 8\l  %44 = load double* %x.addr, align 8\l  %conv57 = fptosi double %44 to i64\l  %45 = load %struct.ray** %ray.addr, align 8\l  %x58 = getelementptr inbounds %struct.ray* %45, i32 0, i32 1\l  store i64 %conv57, i64* %x58, align 8\l  %46 = load double* %y.addr, align 8\l  %conv59 = fptosi double %46 to i64\l  %47 = load %struct.ray** %ray.addr, align 8\l  %y60 = getelementptr inbounds %struct.ray* %47, i32 0, i32 2\l  store i64 %conv59, i64* %y60, align 8\l  ret void\l}"];
}
