digraph "CFG for 'GlobalRealloc' function" {
	label="CFG for 'GlobalRealloc' function";

	Node0x5ffb570 [shape=record,label="{entry:\l  %retval = alloca i8*, align 8\l  %p.addr = alloca i8*, align 8\l  %size.addr = alloca i64, align 8\l  %oldsize = alloca i64, align 8\l  %newsize = alloca i64, align 8\l  %totsize = alloca i64, align 8\l  %q = alloca i8*, align 8\l  %r = alloca i64*, align 8\l  %s = alloca i64*, align 8\l  %pn = alloca %struct.node*, align 8\l  %prev = alloca %struct.node*, align 8\l  %curr = alloca %struct.node*, align 8\l  %next = alloca %struct.node*, align 8\l  %node = alloca %struct.node*, align 8\l  store i8* %p, i8** %p.addr, align 8\l  store i64 %size, i64* %size.addr, align 8\l  %0 = load i64* %size.addr, align 8\l  %tobool = icmp ne i64 %0, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ffb570:s0 -> Node0x5ffb610;
	Node0x5ffb570:s1 -> Node0x5ffb5c0;
	Node0x5ffb5c0 [shape=record,label="{if.then:                                          \l  %1 = load i8** %p.addr, align 8\l  call void @GlobalFree(i8* %1)\l  br label %return\l}"];
	Node0x5ffb5c0 -> Node0x5ffc150;
	Node0x5ffb610 [shape=record,label="{if.end:                                           \l  %2 = load i8** %p.addr, align 8\l  %tobool1 = icmp ne i8* %2, null\l  br i1 %tobool1, label %if.end.3, label %if.then.2\l|{<s0>T|<s1>F}}"];
	Node0x5ffb610:s0 -> Node0x5ffb6b0;
	Node0x5ffb610:s1 -> Node0x5ffb660;
	Node0x5ffb660 [shape=record,label="{if.then.2:                                        \l  %3 = load i64* %size.addr, align 8\l  %call = call i8* @GlobalMalloc(i64 %3, i8* getelementptr inbounds ([14 x\l... i8]* @.str.12.319, i32 0, i32 0))\l  br label %return\l}"];
	Node0x5ffb660 -> Node0x5ffc150;
	Node0x5ffb6b0 [shape=record,label="{if.end.3:                                         \l  %4 = load i8** %p.addr, align 8\l  %5 = load i64* @nodesize, align 8\l  %sub = sub i64 0, %5\l  %add.ptr = getelementptr inbounds i8* %4, i64 %sub\l  %6 = bitcast i8* %add.ptr to %struct.node*\l  store %struct.node* %6, %struct.node** %pn, align 8\l  %7 = load %struct.node** %pn, align 8\l  %cksm = getelementptr inbounds %struct.node* %7, i32 0, i32 3\l  %8 = load i64* %cksm, align 8\l  %cmp = icmp ne i64 %8, 1437226410\l  br i1 %cmp, label %if.then.4, label %if.end.6\l|{<s0>T|<s1>F}}"];
	Node0x5ffb6b0:s0 -> Node0x5ffb700;
	Node0x5ffb6b0:s1 -> Node0x5ffb750;
	Node0x5ffb700 [shape=record,label="{if.then.4:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ffb700 -> Node0x5ffc1a0;
	Node0x5ffb750 [shape=record,label="{if.end.6:                                         \l  %9 = load %struct.node** %pn, align 8\l  %free = getelementptr inbounds %struct.node* %9, i32 0, i32 2\l  %10 = load i64* %free, align 8\l  %tobool7 = icmp ne i64 %10, 0\l  br i1 %tobool7, label %if.then.8, label %if.end.10\l|{<s0>T|<s1>F}}"];
	Node0x5ffb750:s0 -> Node0x5ffb7a0;
	Node0x5ffb750:s1 -> Node0x5ffb7f0;
	Node0x5ffb7a0 [shape=record,label="{if.then.8:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ffb7a0 -> Node0x5ffc1a0;
	Node0x5ffb7f0 [shape=record,label="{if.end.10:                                        \l  %11 = load i64* %size.addr, align 8\l  %add = add i64 %11, 7\l  %shr = lshr i64 %add, 3\l  %shl = shl i64 %shr, 3\l  store i64 %shl, i64* %newsize, align 8\l  %12 = load %struct.node** %pn, align 8\l  %size11 = getelementptr inbounds %struct.node* %12, i32 0, i32 1\l  %13 = load i64* %size11, align 8\l  store i64 %13, i64* %oldsize, align 8\l  %14 = load i64* %newsize, align 8\l  %15 = load i64* %oldsize, align 8\l  %cmp12 = icmp ule i64 %14, %15\l  br i1 %cmp12, label %if.then.13, label %if.end.27\l|{<s0>T|<s1>F}}"];
	Node0x5ffb7f0:s0 -> Node0x5ffb840;
	Node0x5ffb7f0:s1 -> Node0x5ffb930;
	Node0x5ffb840 [shape=record,label="{if.then.13:                                       \l  %16 = load i64* %oldsize, align 8\l  %17 = load i64* %newsize, align 8\l  %sub14 = sub i64 %16, %17\l  %cmp15 = icmp ult i64 %sub14, 48\l  br i1 %cmp15, label %if.then.16, label %if.end.17\l|{<s0>T|<s1>F}}"];
	Node0x5ffb840:s0 -> Node0x5ffb890;
	Node0x5ffb840:s1 -> Node0x5ffb8e0;
	Node0x5ffb890 [shape=record,label="{if.then.16:                                       \l  br label %return\l}"];
	Node0x5ffb890 -> Node0x5ffc150;
	Node0x5ffb8e0 [shape=record,label="{if.end.17:                                        \l  %18 = load i8** %p.addr, align 8\l  %19 = load i64* %newsize, align 8\l  %add.ptr19 = getelementptr inbounds i8* %18, i64 %19\l  %20 = bitcast i8* %add.ptr19 to %struct.node*\l  store %struct.node* %20, %struct.node** %next, align 8\l  %21 = load %struct.node** %next, align 8\l  %22 = bitcast %struct.node* %21 to i8*\l  %23 = load i64* @nodesize, align 8\l  %add.ptr26 = getelementptr inbounds i8* %22, i64 %23\l  %24 = bitcast i8* %add.ptr26 to %struct.node*\l  store %struct.node* %24, %struct.node** %next, align 8\l  %25 = load %struct.node** %next, align 8\l  %26 = bitcast %struct.node* %25 to i8*\l  call void @GlobalFree(i8* %26)\l  br label %return\l}"];
	Node0x5ffb8e0 -> Node0x5ffc150;
	Node0x5ffb930 [shape=record,label="{if.end.27:                                        \l  %27 = load i8** %p.addr, align 8\l  %28 = load i64* %oldsize, align 8\l  %add.ptr28 = getelementptr inbounds i8* %27, i64 %28\l  %29 = bitcast i8* %add.ptr28 to %struct.node*\l  store %struct.node* %29, %struct.node** %next, align 8\l  %30 = load i64* %oldsize, align 8\l  %31 = load i64* @nodesize, align 8\l  %add29 = add i64 %30, %31\l  %32 = load %struct.node** %next, align 8\l  %size30 = getelementptr inbounds %struct.node* %32, i32 0, i32 1\l  %33 = load i64* %size30, align 8\l  %add31 = add i64 %add29, %33\l  store i64 %add31, i64* %totsize, align 8\l  %34 = load %struct.node** %next, align 8\l  %35 = load %struct.node** @endmem, align 8\l  %cmp33 = icmp ult %struct.node* %34, %35\l  br i1 %cmp33, label %land.lhs.true, label %if.end.83\l|{<s0>T|<s1>F}}"];
	Node0x5ffb930:s0 -> Node0x5ffb980;
	Node0x5ffb930:s1 -> Node0x5ffbf70;
	Node0x5ffb980 [shape=record,label="{land.lhs.true:                                    \l  %36 = load %struct.node** %next, align 8\l  %free34 = getelementptr inbounds %struct.node* %36, i32 0, i32 2\l  %37 = load i64* %free34, align 8\l  %tobool35 = icmp ne i64 %37, 0\l  br i1 %tobool35, label %land.lhs.true.36, label %if.end.83\l|{<s0>T|<s1>F}}"];
	Node0x5ffb980:s0 -> Node0x5ffb9d0;
	Node0x5ffb980:s1 -> Node0x5ffbf70;
	Node0x5ffb9d0 [shape=record,label="{land.lhs.true.36:                                 \l  %38 = load i64* %totsize, align 8\l  %39 = load i64* %newsize, align 8\l  %cmp37 = icmp uge i64 %38, %39\l  br i1 %cmp37, label %if.then.38, label %if.end.83\l|{<s0>T|<s1>F}}"];
	Node0x5ffb9d0:s0 -> Node0x5ffba20;
	Node0x5ffb9d0:s1 -> Node0x5ffbf70;
	Node0x5ffba20 [shape=record,label="{if.then.38:                                       \l  br label %while.cond\l}"];
	Node0x5ffba20 -> Node0x5ffba70;
	Node0x5ffba70 [shape=record,label="{while.cond:                                       \l  br label %land.end\l}"];
	Node0x5ffba70 -> Node0x5ffbb60;
	Node0x5ffbac0 [shape=record,label="{land.lhs.true.40:                                 \l  br label %land.end\l}"];
	Node0x5ffbac0 -> Node0x5ffbb60;
	Node0x5ffbb10 [shape=record,label="{land.rhs:                                         \l  br label %land.end\l}"];
	Node0x5ffbb10 -> Node0x5ffbb60;
	Node0x5ffbb60 [shape=record,label="{land.end:                                         \l  br label %while.end\l}"];
	Node0x5ffbb60 -> Node0x5ffbc00;
	Node0x5ffbbb0 [shape=record,label="{while.body:                                       \l  br label %while.cond\l}"];
	Node0x5ffbbb0 -> Node0x5ffba70;
	Node0x5ffbc00 [shape=record,label="{while.end:                                        \l  br i1 undef, label %if.then.45, label %if.end.47\l|{<s0>T|<s1>F}}"];
	Node0x5ffbc00:s0 -> Node0x5ffbc50;
	Node0x5ffbc00:s1 -> Node0x5ffbca0;
	Node0x5ffbc50 [shape=record,label="{if.then.45:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ffbc50 -> Node0x5ffc1a0;
	Node0x5ffbca0 [shape=record,label="{if.end.47:                                        \l  br label %return\l}"];
	Node0x5ffbca0 -> Node0x5ffc150;
	Node0x5ffbcf0 [shape=record,label="{if.then.50:                                       \l  br label %if.end.57\l}"];
	Node0x5ffbcf0 -> Node0x5ffbde0;
	Node0x5ffbd40 [shape=record,label="{if.then.52:                                       \l  br label %if.end.57\l}"];
	Node0x5ffbd40 -> Node0x5ffbde0;
	Node0x5ffbd90 [shape=record,label="{if.else:                                          \l  br label %if.end.57\l}"];
	Node0x5ffbd90 -> Node0x5ffbde0;
	Node0x5ffbde0 [shape=record,label="{if.end.57:                                        \l  br label %return\l}"];
	Node0x5ffbde0 -> Node0x5ffc150;
	Node0x5ffbe30 [shape=record,label="{if.else.63:                                       \l  br label %if.end.77\l}"];
	Node0x5ffbe30 -> Node0x5ffbf20;
	Node0x5ffbe80 [shape=record,label="{if.then.73:                                       \l  br label %if.end.77\l}"];
	Node0x5ffbe80 -> Node0x5ffbf20;
	Node0x5ffbed0 [shape=record,label="{if.else.75:                                       \l  br label %if.end.77\l}"];
	Node0x5ffbed0 -> Node0x5ffbf20;
	Node0x5ffbf20 [shape=record,label="{if.end.77:                                        \l  br label %return\l}"];
	Node0x5ffbf20 -> Node0x5ffc150;
	Node0x5ffbf70 [shape=record,label="{if.end.83:                                        \l  %40 = load i64* %newsize, align 8\l  %call86 = call i8* @GlobalMalloc(i64 %40, i8* getelementptr inbounds ([14 x\l... i8]* @.str.12.319, i32 0, i32 0))\l  store i8* %call86, i8** %q, align 8\l  %41 = bitcast i8* %call86 to i64*\l  store i64* %41, i64** %s, align 8\l  %42 = load i8** %q, align 8\l  %tobool87 = icmp ne i8* %42, null\l  br i1 %tobool87, label %if.end.89, label %if.then.88\l|{<s0>T|<s1>F}}"];
	Node0x5ffbf70:s0 -> Node0x5ffc010;
	Node0x5ffbf70:s1 -> Node0x5ffbfc0;
	Node0x5ffbfc0 [shape=record,label="{if.then.88:                                       \l  br label %return\l}"];
	Node0x5ffbfc0 -> Node0x5ffc150;
	Node0x5ffc010 [shape=record,label="{if.end.89:                                        \l  %43 = load i8** %p.addr, align 8\l  %44 = bitcast i8* %43 to i64*\l  store i64* %44, i64** %r, align 8\l  %45 = load i64* %oldsize, align 8\l  %shr90 = lshr i64 %45, 2\l  store i64 %shr90, i64* %oldsize, align 8\l  br label %while.cond.91\l}"];
	Node0x5ffc010 -> Node0x5ffc060;
	Node0x5ffc060 [shape=record,label="{while.cond.91:                                    \l  %46 = load i64* %oldsize, align 8\l  %dec = add i64 %46, -1\l  store i64 %dec, i64* %oldsize, align 8\l  %tobool92 = icmp ne i64 %46, 0\l  br i1 %tobool92, label %while.body.93, label %while.end.95\l|{<s0>T|<s1>F}}"];
	Node0x5ffc060:s0 -> Node0x5ffc0b0;
	Node0x5ffc060:s1 -> Node0x5ffc100;
	Node0x5ffc0b0 [shape=record,label="{while.body.93:                                    \l  %47 = load i64** %r, align 8\l  %incdec.ptr = getelementptr inbounds i64* %47, i32 1\l  store i64* %incdec.ptr, i64** %r, align 8\l  %48 = load i64* %47, align 8\l  %49 = load i64** %s, align 8\l  %incdec.ptr94 = getelementptr inbounds i64* %49, i32 1\l  store i64* %incdec.ptr94, i64** %s, align 8\l  store i64 %48, i64* %49, align 8\l  br label %while.cond.91\l}"];
	Node0x5ffc0b0 -> Node0x5ffc060;
	Node0x5ffc100 [shape=record,label="{while.end.95:                                     \l  %50 = load i8** %p.addr, align 8\l  call void @GlobalFree(i8* %50)\l  br label %return\l}"];
	Node0x5ffc100 -> Node0x5ffc150;
	Node0x5ffc150 [shape=record,label="{return:                                           \l  ret i8* undef\l}"];
	Node0x5ffc1a0 [shape=record,label="{UnifiedUnreachableBlock:                          \l  unreachable\l}"];
}
