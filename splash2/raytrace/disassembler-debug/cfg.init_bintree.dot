digraph "CFG for 'init_bintree' function" {
	label="CFG for 'init_bintree' function";

	Node0x5ed03d0 [shape=record,label="{entry:\l  %ng.addr = alloca %struct.grid*, align 8\l  %btn = alloca %struct.btnode*, align 8\l  %pepa = alloca %struct.element**, align 8\l  store %struct.grid* %ng, %struct.grid** %ng.addr, align 8\l  %call = call i8* @ObjectMalloc(i64 6, i64 1)\l  %0 = bitcast i8* %call to %struct.btnode*\l  store %struct.btnode* %0, %struct.btnode** %btn, align 8\l  %1 = load %struct.btnode** %btn, align 8\l  %btn1 = getelementptr inbounds %struct.btnode* %1, i32 0, i32 7\l  %arrayidx = getelementptr inbounds [2 x %struct.btnode*]* %btn1, i32 0, i64 0\l  store %struct.btnode* null, %struct.btnode** %arrayidx, align 8\l  %2 = load %struct.btnode** %btn, align 8\l  %btn2 = getelementptr inbounds %struct.btnode* %2, i32 0, i32 7\l  %arrayidx3 = getelementptr inbounds [2 x %struct.btnode*]* %btn2, i32 0, i64\l... 1\l  store %struct.btnode* null, %struct.btnode** %arrayidx3, align 8\l  %3 = load %struct.btnode** %btn, align 8\l  %axis = getelementptr inbounds %struct.btnode* %3, i32 0, i32 5\l  store i64 -1, i64* %axis, align 8\l  %4 = load %struct.grid** %ng.addr, align 8\l  %min = getelementptr inbounds %struct.grid* %4, i32 0, i32 7\l  %arrayidx4 = getelementptr inbounds [3 x double]* %min, i32 0, i64 0\l  %5 = load double* %arrayidx4, align 8\l  %6 = load %struct.btnode** %btn, align 8\l  %p = getelementptr inbounds %struct.btnode* %6, i32 0, i32 1\l  %arrayidx5 = getelementptr inbounds [3 x double]* %p, i32 0, i64 0\l  store double %5, double* %arrayidx5, align 8\l  %7 = load %struct.grid** %ng.addr, align 8\l  %min6 = getelementptr inbounds %struct.grid* %7, i32 0, i32 7\l  %arrayidx7 = getelementptr inbounds [3 x double]* %min6, i32 0, i64 1\l  %8 = load double* %arrayidx7, align 8\l  %9 = load %struct.btnode** %btn, align 8\l  %p8 = getelementptr inbounds %struct.btnode* %9, i32 0, i32 1\l  %arrayidx9 = getelementptr inbounds [3 x double]* %p8, i32 0, i64 1\l  store double %8, double* %arrayidx9, align 8\l  %10 = load %struct.grid** %ng.addr, align 8\l  %min10 = getelementptr inbounds %struct.grid* %10, i32 0, i32 7\l  %arrayidx11 = getelementptr inbounds [3 x double]* %min10, i32 0, i64 2\l  %11 = load double* %arrayidx11, align 8\l  %12 = load %struct.btnode** %btn, align 8\l  %p12 = getelementptr inbounds %struct.btnode* %12, i32 0, i32 1\l  %arrayidx13 = getelementptr inbounds [3 x double]* %p12, i32 0, i64 2\l  store double %11, double* %arrayidx13, align 8\l  %13 = load %struct.grid** %ng.addr, align 8\l  %indx_inc = getelementptr inbounds %struct.grid* %13, i32 0, i32 5\l  %arrayidx14 = getelementptr inbounds [3 x i64]* %indx_inc, i32 0, i64 1\l  %14 = load i64* %arrayidx14, align 8\l  %15 = load %struct.btnode** %btn, align 8\l  %n = getelementptr inbounds %struct.btnode* %15, i32 0, i32 3\l  %arrayidx15 = getelementptr inbounds [3 x i64]* %n, i32 0, i64 0\l  store i64 %14, i64* %arrayidx15, align 8\l  %16 = load %struct.grid** %ng.addr, align 8\l  %indx_inc16 = getelementptr inbounds %struct.grid* %16, i32 0, i32 5\l  %arrayidx17 = getelementptr inbounds [3 x i64]* %indx_inc16, i32 0, i64 1\l  %17 = load i64* %arrayidx17, align 8\l  %18 = load %struct.btnode** %btn, align 8\l  %n18 = getelementptr inbounds %struct.btnode* %18, i32 0, i32 3\l  %arrayidx19 = getelementptr inbounds [3 x i64]* %n18, i32 0, i64 1\l  store i64 %17, i64* %arrayidx19, align 8\l  %19 = load %struct.grid** %ng.addr, align 8\l  %indx_inc20 = getelementptr inbounds %struct.grid* %19, i32 0, i32 5\l  %arrayidx21 = getelementptr inbounds [3 x i64]* %indx_inc20, i32 0, i64 1\l  %20 = load i64* %arrayidx21, align 8\l  %21 = load %struct.btnode** %btn, align 8\l  %n22 = getelementptr inbounds %struct.btnode* %21, i32 0, i32 3\l  %arrayidx23 = getelementptr inbounds [3 x i64]* %n22, i32 0, i64 2\l  store i64 %20, i64* %arrayidx23, align 8\l  %22 = load %struct.btnode** %btn, align 8\l  %i = getelementptr inbounds %struct.btnode* %22, i32 0, i32 4\l  %arrayidx24 = getelementptr inbounds [3 x i64]* %i, i32 0, i64 0\l  store i64 0, i64* %arrayidx24, align 8\l  %23 = load %struct.grid** %ng.addr, align 8\l  %num_prims = getelementptr inbounds %struct.grid* %23, i32 0, i32 4\l  %24 = load i64* %num_prims, align 8\l  %25 = load %struct.btnode** %btn, align 8\l  %nprims = getelementptr inbounds %struct.btnode* %25, i32 0, i32 2\l  store i64 %24, i64* %nprims, align 8\l  %26 = load %struct.btnode** %btn, align 8\l  %nprims29 = getelementptr inbounds %struct.btnode* %26, i32 0, i32 2\l  %27 = load i64* %nprims29, align 8\l  %28 = load %struct.btnode** %btn, align 8\l  %totalPrimsAllocated = getelementptr inbounds %struct.btnode* %28, i32 0,\l... i32 6\l  store i64 %27, i64* %totalPrimsAllocated, align 8\l  %29 = load %struct.grid** %ng.addr, align 8\l  %num_prims30 = getelementptr inbounds %struct.grid* %29, i32 0, i32 4\l  %30 = load i64* %num_prims30, align 8\l  %cmp = icmp sgt i64 %30, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5ed03d0:s0 -> Node0x5ed0420;
	Node0x5ed03d0:s1 -> Node0x5ed84d0;
	Node0x5ed0420 [shape=record,label="{if.then:                                          \l  %31 = load %struct.grid** %ng.addr, align 8\l  %pepa31 = getelementptr inbounds %struct.grid* %31, i32 0, i32 3\l  %32 = load %struct.element*** %pepa31, align 8\l  %33 = load %struct.btnode** %btn, align 8\l  %pe = getelementptr inbounds %struct.btnode* %33, i32 0, i32 0\l  store %struct.element** %32, %struct.element*** %pe, align 8\l  br label %if.end\l}"];
	Node0x5ed0420 -> Node0x5ed8520;
	Node0x5ed84d0 [shape=record,label="{if.else:                                          \l  %34 = load %struct.btnode** %btn, align 8\l  %pe32 = getelementptr inbounds %struct.btnode* %34, i32 0, i32 0\l  store %struct.element** null, %struct.element*** %pe32, align 8\l  br label %if.end\l}"];
	Node0x5ed84d0 -> Node0x5ed8520;
	Node0x5ed8520 [shape=record,label="{if.end:                                           \l  %35 = load %struct.btnode** %btn, align 8\l  ret %struct.btnode* %35\l}"];
}
