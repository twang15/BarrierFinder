digraph "CFG for 'Shade' function" {
	label="CFG for 'Shade' function";

	Node0x5ef8590 [shape=record,label="{entry:\l  %iP.addr = alloca double*, align 8\l  %N.addr = alloca double*, align 8\l  %ray.addr = alloca %struct.ray*, align 8\l  %hit.addr = alloca %struct.irecord*, align 8\l  %pid.addr = alloca i64, align 8\l  %Lvec = alloca [3 x double], align 16\l  %Hvec = alloca [3 x double], align 16\l  %Evec = alloca [3 x double], align 16\l  %shad_ray = alloca %struct.ray, align 8\l  %secondary_ray = alloca %struct.ray, align 8\l  %surfcol = alloca [3 x double], align 16\l  %col = alloca [3 x double], align 16\l  %NdotL = alloca double, align 8\l  %Diff = alloca double, align 8\l  %NdotH = alloca double, align 8\l  %spec = alloca double, align 8\l  %po = alloca %struct.object*, align 8\l  %s = alloca %struct.surf*, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %lightlen = alloca double, align 8\l  %shadtrans = alloca double, align 8\l  %lptr = alloca %struct.light*, align 8\l  store double* %iP, double** %iP.addr, align 8\l  store double* %N, double** %N.addr, align 8\l  store %struct.ray* %ray, %struct.ray** %ray.addr, align 8\l  store %struct.irecord* %hit, %struct.irecord** %hit.addr, align 8\l  store i64 %pid, i64* %pid.addr, align 8\l  %0 = load %struct.irecord** %hit.addr, align 8\l  %pelem = getelementptr inbounds %struct.irecord* %0, i32 0, i32 1\l  %1 = load %struct.element** %pelem, align 8\l  %parent = getelementptr inbounds %struct.element* %1, i32 0, i32 2\l  %2 = load %struct.object** %parent, align 8\l  store %struct.object* %2, %struct.object** %po, align 8\l  %3 = load %struct.object** %po, align 8\l  %surf = getelementptr inbounds %struct.object* %3, i32 0, i32 6\l  %4 = load %struct.surf** %surf, align 8\l  store %struct.surf* %4, %struct.surf** %s, align 8\l  %5 = load %struct.surf** %s, align 8\l  %fcolor = getelementptr inbounds %struct.surf* %5, i32 0, i32 0\l  %arrayidx = getelementptr inbounds [3 x double]* %fcolor, i32 0, i64 0\l  %6 = load double* %arrayidx, align 8\l  %arrayidx1 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 0\l  store double %6, double* %arrayidx1, align 8\l  %7 = load %struct.surf** %s, align 8\l  %fcolor2 = getelementptr inbounds %struct.surf* %7, i32 0, i32 0\l  %arrayidx3 = getelementptr inbounds [3 x double]* %fcolor2, i32 0, i64 1\l  %8 = load double* %arrayidx3, align 8\l  %arrayidx4 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 1\l  store double %8, double* %arrayidx4, align 8\l  %9 = load %struct.surf** %s, align 8\l  %fcolor5 = getelementptr inbounds %struct.surf* %9, i32 0, i32 0\l  %arrayidx6 = getelementptr inbounds [3 x double]* %fcolor5, i32 0, i64 2\l  %10 = load double* %arrayidx6, align 8\l  %arrayidx7 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 2\l  store double %10, double* %arrayidx7, align 8\l  %11 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 8, i64 0), align 8\l  %arrayidx8 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 0\l  %12 = load double* %arrayidx8, align 8\l  %mul = fmul double %11, %12\l  %arrayidx9 = getelementptr inbounds [3 x double]* %col, i32 0, i64 0\l  store double %mul, double* %arrayidx9, align 8\l  %13 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 8, i64 1), align 8\l  %arrayidx10 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 1\l  %14 = load double* %arrayidx10, align 8\l  %mul11 = fmul double %13, %14\l  %arrayidx12 = getelementptr inbounds [3 x double]* %col, i32 0, i64 1\l  store double %mul11, double* %arrayidx12, align 8\l  %15 = load double* getelementptr inbounds (%struct.view* @View, i32 0, i32\l... 8, i64 2), align 8\l  %arrayidx13 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 2\l  %16 = load double* %arrayidx13, align 8\l  %mul14 = fmul double %15, %16\l  %arrayidx15 = getelementptr inbounds [3 x double]* %col, i32 0, i64 2\l  store double %mul14, double* %arrayidx15, align 8\l  %17 = load double** %iP.addr, align 8\l  %arrayidx16 = getelementptr inbounds double* %17, i64 0\l  %18 = load double* %arrayidx16, align 8\l  %P = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 3\l  %arrayidx17 = getelementptr inbounds [3 x double]* %P, i32 0, i64 0\l  store double %18, double* %arrayidx17, align 8\l  %19 = load double** %iP.addr, align 8\l  %arrayidx18 = getelementptr inbounds double* %19, i64 1\l  %20 = load double* %arrayidx18, align 8\l  %P19 = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 3\l  %arrayidx20 = getelementptr inbounds [3 x double]* %P19, i32 0, i64 1\l  store double %20, double* %arrayidx20, align 8\l  %21 = load double** %iP.addr, align 8\l  %arrayidx21 = getelementptr inbounds double* %21, i64 2\l  %22 = load double* %arrayidx21, align 8\l  %P22 = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 3\l  %arrayidx23 = getelementptr inbounds [3 x double]* %P22, i32 0, i64 2\l  store double %22, double* %arrayidx23, align 8\l  %23 = load %struct.ray** %ray.addr, align 8\l  %D = getelementptr inbounds %struct.ray* %23, i32 0, i32 4\l  %arrayidx24 = getelementptr inbounds [3 x double]* %D, i32 0, i64 0\l  %24 = load double* %arrayidx24, align 8\l  %sub = fsub double -0.000000e+00, %24\l  %arrayidx25 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 0\l  store double %sub, double* %arrayidx25, align 8\l  %25 = load %struct.ray** %ray.addr, align 8\l  %D26 = getelementptr inbounds %struct.ray* %25, i32 0, i32 4\l  %arrayidx27 = getelementptr inbounds [3 x double]* %D26, i32 0, i64 1\l  %26 = load double* %arrayidx27, align 8\l  %sub28 = fsub double -0.000000e+00, %26\l  %arrayidx29 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 1\l  store double %sub28, double* %arrayidx29, align 8\l  %27 = load %struct.ray** %ray.addr, align 8\l  %D30 = getelementptr inbounds %struct.ray* %27, i32 0, i32 4\l  %arrayidx31 = getelementptr inbounds [3 x double]* %D30, i32 0, i64 2\l  %28 = load double* %arrayidx31, align 8\l  %sub32 = fsub double -0.000000e+00, %28\l  %arrayidx33 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 2\l  store double %sub32, double* %arrayidx33, align 8\l  %29 = load %struct.light** @lights, align 8\l  store %struct.light* %29, %struct.light** %lptr, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x5ef8590 -> Node0x6068e90;
	Node0x6068e90 [shape=record,label="{for.cond:                                         \l  %30 = load i64* %i, align 8\l  %31 = load i64* @nlights, align 8\l  %cmp = icmp slt i64 %30, %31\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x6068e90:s0 -> Node0x6068ee0;
	Node0x6068e90:s1 -> Node0x606a4a0;
	Node0x6068ee0 [shape=record,label="{for.body:                                         \l  %32 = load %struct.light** %lptr, align 8\l  %pos = getelementptr inbounds %struct.light* %32, i32 0, i32 0\l  %arrayidx34 = getelementptr inbounds [4 x double]* %pos, i32 0, i64 0\l  %33 = load double* %arrayidx34, align 8\l  %34 = load double** %iP.addr, align 8\l  %arrayidx35 = getelementptr inbounds double* %34, i64 0\l  %35 = load double* %arrayidx35, align 8\l  %sub36 = fsub double %33, %35\l  %arrayidx37 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  store double %sub36, double* %arrayidx37, align 8\l  %36 = load %struct.light** %lptr, align 8\l  %pos38 = getelementptr inbounds %struct.light* %36, i32 0, i32 0\l  %arrayidx39 = getelementptr inbounds [4 x double]* %pos38, i32 0, i64 1\l  %37 = load double* %arrayidx39, align 8\l  %38 = load double** %iP.addr, align 8\l  %arrayidx40 = getelementptr inbounds double* %38, i64 1\l  %39 = load double* %arrayidx40, align 8\l  %sub41 = fsub double %37, %39\l  %arrayidx42 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  store double %sub41, double* %arrayidx42, align 8\l  %40 = load %struct.light** %lptr, align 8\l  %pos43 = getelementptr inbounds %struct.light* %40, i32 0, i32 0\l  %arrayidx44 = getelementptr inbounds [4 x double]* %pos43, i32 0, i64 2\l  %41 = load double* %arrayidx44, align 8\l  %42 = load double** %iP.addr, align 8\l  %arrayidx45 = getelementptr inbounds double* %42, i64 2\l  %43 = load double* %arrayidx45, align 8\l  %sub46 = fsub double %41, %43\l  %arrayidx47 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  store double %sub46, double* %arrayidx47, align 8\l  %arrayidx48 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  %44 = load double* %arrayidx48, align 8\l  %arrayidx49 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  %45 = load double* %arrayidx49, align 8\l  %mul50 = fmul double %44, %45\l  %arrayidx51 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  %46 = load double* %arrayidx51, align 8\l  %arrayidx52 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  %47 = load double* %arrayidx52, align 8\l  %mul53 = fmul double %46, %47\l  %add = fadd double %mul50, %mul53\l  %arrayidx54 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  %48 = load double* %arrayidx54, align 8\l  %arrayidx55 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  %49 = load double* %arrayidx55, align 8\l  %mul56 = fmul double %48, %49\l  %add57 = fadd double %add, %mul56\l  %call = call double @sqrt(double %add57)\l  store double %call, double* %lightlen, align 8\l  %arraydecay = getelementptr inbounds [3 x double]* %Lvec, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay)\l  %arrayidx58 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  %50 = load double* %arrayidx58, align 8\l  %D59 = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 4\l  %arrayidx60 = getelementptr inbounds [3 x double]* %D59, i32 0, i64 0\l  store double %50, double* %arrayidx60, align 8\l  %arrayidx61 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  %51 = load double* %arrayidx61, align 8\l  %D62 = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 4\l  %arrayidx63 = getelementptr inbounds [3 x double]* %D62, i32 0, i64 1\l  store double %51, double* %arrayidx63, align 8\l  %arrayidx64 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  %52 = load double* %arrayidx64, align 8\l  %D65 = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 4\l  %arrayidx66 = getelementptr inbounds [3 x double]* %D65, i32 0, i64 2\l  store double %52, double* %arrayidx66, align 8\l  %53 = load %struct.gmem** @gm, align 8\l  %rid = getelementptr inbounds %struct.gmem* %53, i32 0, i32 2\l  %54 = load i64* %rid, align 8\l  %inc = add nsw i64 %54, 1\l  store i64 %inc, i64* %rid, align 8\l  %id = getelementptr inbounds %struct.ray* %shad_ray, i32 0, i32 0\l  store i64 %54, i64* %id, align 8\l  %55 = load double** %N.addr, align 8\l  %arrayidx70 = getelementptr inbounds double* %55, i64 0\l  %56 = load double* %arrayidx70, align 8\l  %arrayidx71 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  %57 = load double* %arrayidx71, align 8\l  %mul72 = fmul double %56, %57\l  %58 = load double** %N.addr, align 8\l  %arrayidx73 = getelementptr inbounds double* %58, i64 1\l  %59 = load double* %arrayidx73, align 8\l  %arrayidx74 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  %60 = load double* %arrayidx74, align 8\l  %mul75 = fmul double %59, %60\l  %add76 = fadd double %mul72, %mul75\l  %61 = load double** %N.addr, align 8\l  %arrayidx77 = getelementptr inbounds double* %61, i64 2\l  %62 = load double* %arrayidx77, align 8\l  %arrayidx78 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  %63 = load double* %arrayidx78, align 8\l  %mul79 = fmul double %62, %63\l  %add80 = fadd double %add76, %mul79\l  store double %add80, double* %NdotL, align 8\l  %64 = load double* %NdotL, align 8\l  %cmp81 = fcmp ogt double %64, 0.000000e+00\l  br i1 %cmp81, label %if.then, label %if.end.164\l|{<s0>T|<s1>F}}"];
	Node0x6068ee0:s0 -> Node0x6068f30;
	Node0x6068ee0:s1 -> Node0x606a400;
	Node0x6068f30 [shape=record,label="{if.then:                                          \l  %65 = load i64* getelementptr inbounds (%struct.view* @View, i32 0, i32 9),\l... align 8\l  %tobool = icmp ne i64 %65, 0\l  br i1 %tobool, label %land.lhs.true, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x6068f30:s0 -> Node0x6068f80;
	Node0x6068f30:s1 -> Node0x606a180;
	Node0x6068f80 [shape=record,label="{land.lhs.true:                                    \l  %66 = load %struct.light** %lptr, align 8\l  %shadow = getelementptr inbounds %struct.light* %66, i32 0, i32 2\l  %67 = load i64* %shadow, align 8\l  %tobool82 = icmp ne i64 %67, 0\l  br i1 %tobool82, label %if.else, label %if.then.83\l|{<s0>T|<s1>F}}"];
	Node0x6068f80:s0 -> Node0x606a180;
	Node0x6068f80:s1 -> Node0x6068fd0;
	Node0x6068fd0 [shape=record,label="{if.then.83:                                       \l  %68 = load i64* @TraversalType, align 8\l  switch i64 %68, label %sw.epilog [\l    i64 0, label %sw.bb\l    i64 1, label %sw.bb.86\l  ]\l|{<s0>def|<s1>0|<s2>1}}"];
	Node0x6068fd0:s0 -> Node0x606a130;
	Node0x6068fd0:s1 -> Node0x6069020;
	Node0x6068fd0:s2 -> Node0x606a0e0;
	Node0x6069020 [shape=record,label="{sw.bb:                                            \l  %69 = load double* %lightlen, align 8\l  %70 = load %struct.irecord** %hit.addr, align 8\l  %pelem84 = getelementptr inbounds %struct.irecord* %70, i32 0, i32 1\l  %71 = load %struct.element** %pelem84, align 8\l  %call85 = call double @ShadowIntersect(%struct.ray* %shad_ray, double %69,\l... %struct.element* %71)\l  store double %call85, double* %shadtrans, align 8\l  br label %sw.epilog\l}"];
	Node0x6069020 -> Node0x606a130;
	Node0x606a0e0 [shape=record,label="{sw.bb.86:                                         \l  %72 = load double* %lightlen, align 8\l  %73 = load %struct.irecord** %hit.addr, align 8\l  %pelem87 = getelementptr inbounds %struct.irecord* %73, i32 0, i32 1\l  %74 = load %struct.element** %pelem87, align 8\l  %call88 = call double @HuniformShadowIntersect(%struct.ray* %shad_ray,\l... double %72, %struct.element* %74, i64 undef)\l  store double %call88, double* %shadtrans, align 8\l  br label %sw.epilog\l}"];
	Node0x606a0e0 -> Node0x606a130;
	Node0x606a130 [shape=record,label="{sw.epilog:                                        \l  br label %if.end\l}"];
	Node0x606a130 -> Node0x606a1d0;
	Node0x606a180 [shape=record,label="{if.else:                                          \l  store double 1.000000e+00, double* %shadtrans, align 8\l  br label %if.end\l}"];
	Node0x606a180 -> Node0x606a1d0;
	Node0x606a1d0 [shape=record,label="{if.end:                                           \l  %75 = load double* %shadtrans, align 8\l  %cmp89 = fcmp ogt double %75, 0.000000e+00\l  br i1 %cmp89, label %if.then.90, label %if.end.163\l|{<s0>T|<s1>F}}"];
	Node0x606a1d0:s0 -> Node0x606a220;
	Node0x606a1d0:s1 -> Node0x606a3b0;
	Node0x606a220 [shape=record,label="{if.then.90:                                       \l  %76 = load %struct.object** %po, align 8\l  %surf91 = getelementptr inbounds %struct.object* %76, i32 0, i32 6\l  %77 = load %struct.surf** %surf91, align 8\l  %kdiff = getelementptr inbounds %struct.surf* %77, i32 0, i32 2\l  %78 = load double* %kdiff, align 8\l  %79 = load double* %NdotL, align 8\l  %mul92 = fmul double %78, %79\l  %80 = load double* %shadtrans, align 8\l  %mul93 = fmul double %mul92, %80\l  store double %mul93, double* %Diff, align 8\l  %arrayidx94 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 0\l  %81 = load double* %arrayidx94, align 8\l  %82 = load %struct.light** %lptr, align 8\l  %col95 = getelementptr inbounds %struct.light* %82, i32 0, i32 1\l  %arrayidx96 = getelementptr inbounds [3 x double]* %col95, i32 0, i64 0\l  %83 = load double* %arrayidx96, align 8\l  %mul97 = fmul double %81, %83\l  %84 = load double* %Diff, align 8\l  %mul98 = fmul double %mul97, %84\l  %arrayidx99 = getelementptr inbounds [3 x double]* %col, i32 0, i64 0\l  %85 = load double* %arrayidx99, align 8\l  %add100 = fadd double %85, %mul98\l  store double %add100, double* %arrayidx99, align 8\l  %arrayidx101 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 1\l  %86 = load double* %arrayidx101, align 8\l  %87 = load %struct.light** %lptr, align 8\l  %col102 = getelementptr inbounds %struct.light* %87, i32 0, i32 1\l  %arrayidx103 = getelementptr inbounds [3 x double]* %col102, i32 0, i64 1\l  %88 = load double* %arrayidx103, align 8\l  %mul104 = fmul double %86, %88\l  %89 = load double* %Diff, align 8\l  %mul105 = fmul double %mul104, %89\l  %arrayidx106 = getelementptr inbounds [3 x double]* %col, i32 0, i64 1\l  %90 = load double* %arrayidx106, align 8\l  %add107 = fadd double %90, %mul105\l  store double %add107, double* %arrayidx106, align 8\l  %arrayidx108 = getelementptr inbounds [3 x double]* %surfcol, i32 0, i64 2\l  %91 = load double* %arrayidx108, align 8\l  %92 = load %struct.light** %lptr, align 8\l  %col109 = getelementptr inbounds %struct.light* %92, i32 0, i32 1\l  %arrayidx110 = getelementptr inbounds [3 x double]* %col109, i32 0, i64 2\l  %93 = load double* %arrayidx110, align 8\l  %mul111 = fmul double %91, %93\l  %94 = load double* %Diff, align 8\l  %mul112 = fmul double %mul111, %94\l  %arrayidx113 = getelementptr inbounds [3 x double]* %col, i32 0, i64 2\l  %95 = load double* %arrayidx113, align 8\l  %add114 = fadd double %95, %mul112\l  store double %add114, double* %arrayidx113, align 8\l  %96 = load %struct.surf** %s, align 8\l  %kspec = getelementptr inbounds %struct.surf* %96, i32 0, i32 3\l  %97 = load double* %kspec, align 8\l  %cmp115 = fcmp ogt double %97, 0.000000e+00\l  br i1 %cmp115, label %if.then.116, label %if.end.162\l|{<s0>T|<s1>F}}"];
	Node0x606a220:s0 -> Node0x606a270;
	Node0x606a220:s1 -> Node0x606a360;
	Node0x606a270 [shape=record,label="{if.then.116:                                      \l  %arrayidx117 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 0\l  %98 = load double* %arrayidx117, align 8\l  %arrayidx118 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 0\l  %99 = load double* %arrayidx118, align 8\l  %add119 = fadd double %98, %99\l  %arrayidx120 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 0\l  store double %add119, double* %arrayidx120, align 8\l  %arrayidx121 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 1\l  %100 = load double* %arrayidx121, align 8\l  %arrayidx122 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 1\l  %101 = load double* %arrayidx122, align 8\l  %add123 = fadd double %100, %101\l  %arrayidx124 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 1\l  store double %add123, double* %arrayidx124, align 8\l  %arrayidx125 = getelementptr inbounds [3 x double]* %Lvec, i32 0, i64 2\l  %102 = load double* %arrayidx125, align 8\l  %arrayidx126 = getelementptr inbounds [3 x double]* %Evec, i32 0, i64 2\l  %103 = load double* %arrayidx126, align 8\l  %add127 = fadd double %102, %103\l  %arrayidx128 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 2\l  store double %add127, double* %arrayidx128, align 8\l  %arraydecay129 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay129)\l  %104 = load double** %N.addr, align 8\l  %arrayidx130 = getelementptr inbounds double* %104, i64 0\l  %105 = load double* %arrayidx130, align 8\l  %arrayidx131 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 0\l  %106 = load double* %arrayidx131, align 8\l  %mul132 = fmul double %105, %106\l  %107 = load double** %N.addr, align 8\l  %arrayidx133 = getelementptr inbounds double* %107, i64 1\l  %108 = load double* %arrayidx133, align 8\l  %arrayidx134 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 1\l  %109 = load double* %arrayidx134, align 8\l  %mul135 = fmul double %108, %109\l  %add136 = fadd double %mul132, %mul135\l  %110 = load double** %N.addr, align 8\l  %arrayidx137 = getelementptr inbounds double* %110, i64 2\l  %111 = load double* %arrayidx137, align 8\l  %arrayidx138 = getelementptr inbounds [3 x double]* %Hvec, i32 0, i64 2\l  %112 = load double* %arrayidx138, align 8\l  %mul139 = fmul double %111, %112\l  %add140 = fadd double %add136, %mul139\l  store double %add140, double* %NdotH, align 8\l  %113 = load double* %NdotH, align 8\l  %cmp141 = fcmp ogt double %113, 0.000000e+00\l  br i1 %cmp141, label %if.then.142, label %if.end.161\l|{<s0>T|<s1>F}}"];
	Node0x606a270:s0 -> Node0x606a2c0;
	Node0x606a270:s1 -> Node0x606a310;
	Node0x606a2c0 [shape=record,label="{if.then.142:                                      \l  %call143 = call double @pow(double undef, double undef)\l  store double %call143, double* %spec, align 8\l  %114 = load %struct.surf** %s, align 8\l  %kspec144 = getelementptr inbounds %struct.surf* %114, i32 0, i32 3\l  %115 = load double* %kspec144, align 8\l  %116 = load double* %spec, align 8\l  %mul145 = fmul double %116, %115\l  store double %mul145, double* %spec, align 8\l  %117 = load %struct.light** %lptr, align 8\l  %col146 = getelementptr inbounds %struct.light* %117, i32 0, i32 1\l  %arrayidx147 = getelementptr inbounds [3 x double]* %col146, i32 0, i64 0\l  %118 = load double* %arrayidx147, align 8\l  %119 = load double* %spec, align 8\l  %mul148 = fmul double %118, %119\l  %arrayidx149 = getelementptr inbounds [3 x double]* %col, i32 0, i64 0\l  %120 = load double* %arrayidx149, align 8\l  %add150 = fadd double %120, %mul148\l  store double %add150, double* %arrayidx149, align 8\l  %121 = load %struct.light** %lptr, align 8\l  %col151 = getelementptr inbounds %struct.light* %121, i32 0, i32 1\l  %arrayidx152 = getelementptr inbounds [3 x double]* %col151, i32 0, i64 1\l  %122 = load double* %arrayidx152, align 8\l  %123 = load double* %spec, align 8\l  %mul153 = fmul double %122, %123\l  %arrayidx154 = getelementptr inbounds [3 x double]* %col, i32 0, i64 1\l  %124 = load double* %arrayidx154, align 8\l  %add155 = fadd double %124, %mul153\l  store double %add155, double* %arrayidx154, align 8\l  %125 = load %struct.light** %lptr, align 8\l  %col156 = getelementptr inbounds %struct.light* %125, i32 0, i32 1\l  %arrayidx157 = getelementptr inbounds [3 x double]* %col156, i32 0, i64 2\l  %126 = load double* %arrayidx157, align 8\l  %127 = load double* %spec, align 8\l  %mul158 = fmul double %126, %127\l  %arrayidx159 = getelementptr inbounds [3 x double]* %col, i32 0, i64 2\l  %128 = load double* %arrayidx159, align 8\l  %add160 = fadd double %128, %mul158\l  store double %add160, double* %arrayidx159, align 8\l  br label %if.end.161\l}"];
	Node0x606a2c0 -> Node0x606a310;
	Node0x606a310 [shape=record,label="{if.end.161:                                       \l  br label %if.end.162\l}"];
	Node0x606a310 -> Node0x606a360;
	Node0x606a360 [shape=record,label="{if.end.162:                                       \l  br label %if.end.163\l}"];
	Node0x606a360 -> Node0x606a3b0;
	Node0x606a3b0 [shape=record,label="{if.end.163:                                       \l  br label %if.end.164\l}"];
	Node0x606a3b0 -> Node0x606a400;
	Node0x606a400 [shape=record,label="{if.end.164:                                       \l  %129 = load %struct.light** %lptr, align 8\l  %next = getelementptr inbounds %struct.light* %129, i32 0, i32 3\l  %130 = load %struct.light** %next, align 8\l  store %struct.light* %130, %struct.light** %lptr, align 8\l  br label %for.inc\l}"];
	Node0x606a400 -> Node0x606a450;
	Node0x606a450 [shape=record,label="{for.inc:                                          \l  %131 = load i64* %i, align 8\l  %inc165 = add nsw i64 %131, 1\l  store i64 %inc165, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x606a450 -> Node0x6068e90;
	Node0x606a4a0 [shape=record,label="{for.end:                                          \l  %132 = load %struct.ray** %ray.addr, align 8\l  %weight = getelementptr inbounds %struct.ray* %132, i32 0, i32 6\l  %133 = load float* %weight, align 4\l  %conv = fpext float %133 to double\l  %arrayidx166 = getelementptr inbounds [3 x double]* %col, i32 0, i64 0\l  %134 = load double* %arrayidx166, align 8\l  %mul167 = fmul double %conv, %134\l  %arrayidx168 = getelementptr inbounds [3 x double]* %col, i32 0, i64 0\l  store double %mul167, double* %arrayidx168, align 8\l  %135 = load %struct.ray** %ray.addr, align 8\l  %weight169 = getelementptr inbounds %struct.ray* %135, i32 0, i32 6\l  %136 = load float* %weight169, align 4\l  %conv170 = fpext float %136 to double\l  %arrayidx171 = getelementptr inbounds [3 x double]* %col, i32 0, i64 1\l  %137 = load double* %arrayidx171, align 8\l  %mul172 = fmul double %conv170, %137\l  %arrayidx173 = getelementptr inbounds [3 x double]* %col, i32 0, i64 1\l  store double %mul172, double* %arrayidx173, align 8\l  %138 = load %struct.ray** %ray.addr, align 8\l  %weight174 = getelementptr inbounds %struct.ray* %138, i32 0, i32 6\l  %139 = load float* %weight174, align 4\l  %conv175 = fpext float %139 to double\l  %arrayidx176 = getelementptr inbounds [3 x double]* %col, i32 0, i64 2\l  %140 = load double* %arrayidx176, align 8\l  %mul177 = fmul double %conv175, %140\l  %arrayidx178 = getelementptr inbounds [3 x double]* %col, i32 0, i64 2\l  store double %mul177, double* %arrayidx178, align 8\l  %arraydecay179 = getelementptr inbounds [3 x double]* %col, i32 0, i32 0\l  %141 = load %struct.ray** %ray.addr, align 8\l  %x = getelementptr inbounds %struct.ray* %141, i32 0, i32 1\l  %142 = load i64* %x, align 8\l  %143 = load %struct.ray** %ray.addr, align 8\l  %y = getelementptr inbounds %struct.ray* %143, i32 0, i32 2\l  %144 = load i64* %y, align 8\l  call void @AddPixelColor(double* %arraydecay179, i64 %142, i64 %144)\l  %145 = load %struct.ray** %ray.addr, align 8\l  %level = getelementptr inbounds %struct.ray* %145, i32 0, i32 5\l  %146 = load i64* %level, align 8\l  %add180 = add nsw i64 %146, 1\l  %147 = load i64* getelementptr inbounds (%struct.display* @Display, i32 0,\l... i32 0), align 8\l  %cmp181 = icmp slt i64 %add180, %147\l  br i1 %cmp181, label %if.then.183, label %if.end.259\l|{<s0>T|<s1>F}}"];
	Node0x606a4a0:s0 -> Node0x606a4f0;
	Node0x606a4a0:s1 -> Node0x606a720;
	Node0x606a4f0 [shape=record,label="{if.then.183:                                      \l  %148 = load double** %iP.addr, align 8\l  %arrayidx184 = getelementptr inbounds double* %148, i64 0\l  %149 = load double* %arrayidx184, align 8\l  %P185 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 3\l  %arrayidx186 = getelementptr inbounds [3 x double]* %P185, i32 0, i64 0\l  store double %149, double* %arrayidx186, align 8\l  %150 = load double** %iP.addr, align 8\l  %arrayidx187 = getelementptr inbounds double* %150, i64 1\l  %151 = load double* %arrayidx187, align 8\l  %P188 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 3\l  %arrayidx189 = getelementptr inbounds [3 x double]* %P188, i32 0, i64 1\l  store double %151, double* %arrayidx189, align 8\l  %152 = load double** %iP.addr, align 8\l  %arrayidx190 = getelementptr inbounds double* %152, i64 2\l  %153 = load double* %arrayidx190, align 8\l  %P191 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 3\l  %arrayidx192 = getelementptr inbounds [3 x double]* %P191, i32 0, i64 2\l  store double %153, double* %arrayidx192, align 8\l  %154 = load %struct.object** %po, align 8\l  %surf193 = getelementptr inbounds %struct.object* %154, i32 0, i32 6\l  %155 = load %struct.surf** %surf193, align 8\l  %kspec194 = getelementptr inbounds %struct.surf* %155, i32 0, i32 3\l  %156 = load double* %kspec194, align 8\l  %157 = load %struct.ray** %ray.addr, align 8\l  %weight195 = getelementptr inbounds %struct.ray* %157, i32 0, i32 6\l  %158 = load float* %weight195, align 4\l  %conv196 = fpext float %158 to double\l  %mul197 = fmul double %156, %conv196\l  %conv198 = fptrunc double %mul197 to float\l  %weight199 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 6\l  store float %conv198, float* %weight199, align 4\l  %weight200 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 6\l  %159 = load float* %weight200, align 4\l  %conv201 = fpext float %159 to double\l  %160 = load double* getelementptr inbounds (%struct.display* @Display, i32\l... 0, i32 8), align 8\l  %cmp202 = fcmp ogt double %conv201, %160\l  br i1 %cmp202, label %if.then.204, label %if.end.223\l|{<s0>T|<s1>F}}"];
	Node0x606a4f0:s0 -> Node0x606a540;
	Node0x606a4f0:s1 -> Node0x606a590;
	Node0x606a540 [shape=record,label="{if.then.204:                                      \l  %D205 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 4\l  %arraydecay206 = getelementptr inbounds [3 x double]* %D205, i32 0, i32 0\l  %161 = load double** %N.addr, align 8\l  %162 = load %struct.ray** %ray.addr, align 8\l  %D207 = getelementptr inbounds %struct.ray* %162, i32 0, i32 4\l  %arraydecay208 = getelementptr inbounds [3 x double]* %D207, i32 0, i32 0\l  call void @SpecularDirection(double* %arraydecay206, double* %161, double*\l... %arraydecay208)\l  %163 = load %struct.ray** %ray.addr, align 8\l  %level209 = getelementptr inbounds %struct.ray* %163, i32 0, i32 5\l  %164 = load i64* %level209, align 8\l  %add210 = add nsw i64 %164, 1\l  %level211 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 5\l  store i64 %add210, i64* %level211, align 8\l  %165 = load %struct.gmem** @gm, align 8\l  %rid214 = getelementptr inbounds %struct.gmem* %165, i32 0, i32 2\l  %166 = load i64* %rid214, align 8\l  %inc215 = add nsw i64 %166, 1\l  store i64 %inc215, i64* %rid214, align 8\l  %id216 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 0\l  store i64 %166, i64* %id216, align 8\l  %167 = load %struct.ray** %ray.addr, align 8\l  %x219 = getelementptr inbounds %struct.ray* %167, i32 0, i32 1\l  %168 = load i64* %x219, align 8\l  %x220 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 1\l  store i64 %168, i64* %x220, align 8\l  %169 = load %struct.ray** %ray.addr, align 8\l  %y221 = getelementptr inbounds %struct.ray* %169, i32 0, i32 2\l  %170 = load i64* %y221, align 8\l  %y222 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 2\l  store i64 %170, i64* %y222, align 8\l  %171 = load i64* %pid.addr, align 8\l  call void @PushRayTreeStack(%struct.ray* %secondary_ray, i64 %171)\l  br label %if.end.223\l}"];
	Node0x606a540 -> Node0x606a590;
	Node0x606a590 [shape=record,label="{if.end.223:                                       \l  %172 = load %struct.object** %po, align 8\l  %surf224 = getelementptr inbounds %struct.object* %172, i32 0, i32 6\l  %173 = load %struct.surf** %surf224, align 8\l  %ktran = getelementptr inbounds %struct.surf* %173, i32 0, i32 4\l  %174 = load double* %ktran, align 8\l  %175 = load %struct.ray** %ray.addr, align 8\l  %weight225 = getelementptr inbounds %struct.ray* %175, i32 0, i32 6\l  %176 = load float* %weight225, align 4\l  %conv226 = fpext float %176 to double\l  %mul227 = fmul double %174, %conv226\l  %conv228 = fptrunc double %mul227 to float\l  %weight229 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 6\l  store float %conv228, float* %weight229, align 4\l  %weight230 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 6\l  %177 = load float* %weight230, align 4\l  %conv231 = fpext float %177 to double\l  %178 = load double* getelementptr inbounds (%struct.display* @Display, i32\l... 0, i32 8), align 8\l  %cmp232 = fcmp ogt double %conv231, %178\l  br i1 %cmp232, label %if.then.234, label %if.end.258\l|{<s0>T|<s1>F}}"];
	Node0x606a590:s0 -> Node0x606a5e0;
	Node0x606a590:s1 -> Node0x606a6d0;
	Node0x606a5e0 [shape=record,label="{if.then.234:                                      \l  %D235 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 4\l  %arraydecay236 = getelementptr inbounds [3 x double]* %D235, i32 0, i32 0\l  %179 = load double** %N.addr, align 8\l  %180 = load %struct.ray** %ray.addr, align 8\l  %D237 = getelementptr inbounds %struct.ray* %180, i32 0, i32 4\l  %arraydecay238 = getelementptr inbounds [3 x double]* %D237, i32 0, i32 0\l  %181 = load %struct.object** %po, align 8\l  %surf239 = getelementptr inbounds %struct.object* %181, i32 0, i32 6\l  %182 = load %struct.surf** %surf239, align 8\l  %refrindex = getelementptr inbounds %struct.surf* %182, i32 0, i32 5\l  %183 = load double* %refrindex, align 8\l  %call240 = call i64 @TransmissionDirection(double* %arraydecay236, double*\l... %179, double* %arraydecay238, double %183)\l  %tobool241 = icmp ne i64 %call240, 0\l  br i1 %tobool241, label %if.then.242, label %if.end.257\l|{<s0>T|<s1>F}}"];
	Node0x606a5e0:s0 -> Node0x606a630;
	Node0x606a5e0:s1 -> Node0x606a680;
	Node0x606a630 [shape=record,label="{if.then.242:                                      \l  %184 = load %struct.ray** %ray.addr, align 8\l  %level243 = getelementptr inbounds %struct.ray* %184, i32 0, i32 5\l  %185 = load i64* %level243, align 8\l  %add244 = add nsw i64 %185, 1\l  %level245 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 5\l  store i64 %add244, i64* %level245, align 8\l  %186 = load %struct.gmem** @gm, align 8\l  %rid248 = getelementptr inbounds %struct.gmem* %186, i32 0, i32 2\l  %187 = load i64* %rid248, align 8\l  %inc249 = add nsw i64 %187, 1\l  store i64 %inc249, i64* %rid248, align 8\l  %id250 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 0\l  store i64 %187, i64* %id250, align 8\l  %188 = load %struct.ray** %ray.addr, align 8\l  %x253 = getelementptr inbounds %struct.ray* %188, i32 0, i32 1\l  %189 = load i64* %x253, align 8\l  %x254 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 1\l  store i64 %189, i64* %x254, align 8\l  %190 = load %struct.ray** %ray.addr, align 8\l  %y255 = getelementptr inbounds %struct.ray* %190, i32 0, i32 2\l  %191 = load i64* %y255, align 8\l  %y256 = getelementptr inbounds %struct.ray* %secondary_ray, i32 0, i32 2\l  store i64 %191, i64* %y256, align 8\l  %192 = load i64* %pid.addr, align 8\l  call void @PushRayTreeStack(%struct.ray* %secondary_ray, i64 %192)\l  br label %if.end.257\l}"];
	Node0x606a630 -> Node0x606a680;
	Node0x606a680 [shape=record,label="{if.end.257:                                       \l  br label %if.end.258\l}"];
	Node0x606a680 -> Node0x606a6d0;
	Node0x606a6d0 [shape=record,label="{if.end.258:                                       \l  br label %if.end.259\l}"];
	Node0x606a6d0 -> Node0x606a720;
	Node0x606a720 [shape=record,label="{if.end.259:                                       \l  ret void\l}"];
}
