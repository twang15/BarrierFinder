digraph "CFG for 'create_bintree' function" {
	label="CFG for 'create_bintree' function";

	Node0x5e9b0e0 [shape=record,label="{entry:\l  %root.addr = alloca %struct.btnode*, align 8\l  %g.addr = alloca %struct.grid*, align 8\l  %btn = alloca %struct.btnode*, align 8\l  store %struct.btnode* %root, %struct.btnode** %root.addr, align 8\l  store %struct.grid* %g, %struct.grid** %g.addr, align 8\l  %0 = load %struct.btnode** %root.addr, align 8\l  store %struct.btnode* %0, %struct.btnode** %btn, align 8\l  %1 = load %struct.btnode** %btn, align 8\l  %n = getelementptr inbounds %struct.btnode* %1, i32 0, i32 3\l  %arrayidx = getelementptr inbounds [3 x i64]* %n, i32 0, i64 0\l  %2 = load i64* %arrayidx, align 8\l  %cmp = icmp ne i64 %2, 1\l  br i1 %cmp, label %if.then, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5e9b0e0:s0 -> Node0x5e9b1d0;
	Node0x5e9b0e0:s1 -> Node0x5e9b130;
	Node0x5e9b130 [shape=record,label="{lor.lhs.false:                                    \l  %3 = load %struct.btnode** %btn, align 8\l  %n1 = getelementptr inbounds %struct.btnode* %3, i32 0, i32 3\l  %arrayidx2 = getelementptr inbounds [3 x i64]* %n1, i32 0, i64 1\l  %4 = load i64* %arrayidx2, align 8\l  %cmp3 = icmp ne i64 %4, 1\l  br i1 %cmp3, label %if.then, label %lor.lhs.false.4\l|{<s0>T|<s1>F}}"];
	Node0x5e9b130:s0 -> Node0x5e9b1d0;
	Node0x5e9b130:s1 -> Node0x5e9b180;
	Node0x5e9b180 [shape=record,label="{lor.lhs.false.4:                                  \l  %5 = load %struct.btnode** %btn, align 8\l  %n5 = getelementptr inbounds %struct.btnode* %5, i32 0, i32 3\l  %arrayidx6 = getelementptr inbounds [3 x i64]* %n5, i32 0, i64 2\l  %6 = load i64* %arrayidx6, align 8\l  %cmp7 = icmp ne i64 %6, 1\l  br i1 %cmp7, label %if.then, label %if.end.14\l|{<s0>T|<s1>F}}"];
	Node0x5e9b180:s0 -> Node0x5e9b1d0;
	Node0x5e9b180:s1 -> Node0x5e9b2c0;
	Node0x5e9b1d0 [shape=record,label="{if.then:                                          \l  %7 = load %struct.btnode** %btn, align 8\l  %8 = load %struct.grid** %g.addr, align 8\l  call void @subdiv_bintree(%struct.btnode* %7, %struct.grid* %8)\l  %9 = load %struct.btnode** %btn, align 8\l  %btn8 = getelementptr inbounds %struct.btnode* %9, i32 0, i32 7\l  %arrayidx9 = getelementptr inbounds [2 x %struct.btnode*]* %btn8, i32 0, i64\l... 0\l  %10 = load %struct.btnode** %arrayidx9, align 8\l  %11 = load %struct.grid** %g.addr, align 8\l  call void @create_bintree(%struct.btnode* %10, %struct.grid* %11)\l  %12 = load %struct.btnode** %btn, align 8\l  %btn10 = getelementptr inbounds %struct.btnode* %12, i32 0, i32 7\l  %arrayidx11 = getelementptr inbounds [2 x %struct.btnode*]* %btn10, i32 0,\l... i64 1\l  %13 = load %struct.btnode** %arrayidx11, align 8\l  %14 = load %struct.grid** %g.addr, align 8\l  call void @create_bintree(%struct.btnode* %13, %struct.grid* %14)\l  br label %if.end\l}"];
	Node0x5e9b1d0 -> Node0x5e9b270;
	Node0x5e9b220 [shape=record,label="{if.then.13:                                       \l  br label %if.end\l}"];
	Node0x5e9b220 -> Node0x5e9b270;
	Node0x5e9b270 [shape=record,label="{if.end:                                           \l  br label %if.end.14\l}"];
	Node0x5e9b270 -> Node0x5e9b2c0;
	Node0x5e9b2c0 [shape=record,label="{if.end.14:                                        \l  ret void\l}"];
}
