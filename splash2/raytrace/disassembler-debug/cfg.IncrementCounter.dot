digraph "CFG for 'IncrementCounter' function" {
	label="CFG for 'IncrementCounter' function";

	Node0x60fb650 [shape=record,label="{entry:\l  %idx = alloca i32, align 4\l  %i = alloca i32, align 4\l  %call = call i32 (...) *@pthread_self()\l  store i32 %call, i32* %idx, align 4\l  %0 = load i32* %idx, align 4\l  %idxprom = zext i32 %0 to i64\l  %arrayidx = getelementptr inbounds [3 x i32]* @syncID, i32 0, i64 %idxprom\l  %1 = load i32* %arrayidx, align 4\l  %cmp = icmp eq i32 %1, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x60fb650:s0 -> Node0x60fb6a0;
	Node0x60fb650:s1 -> Node0x60fb8d0;
	Node0x60fb6a0 [shape=record,label="{if.then:                                          \l  %2 = load i32* @counter0, align 4\l  %inc = add nsw i32 %2, 1\l  store i32 %inc, i32* @counter0, align 4\l  %3 = load i8* @firstSync, align 1\l  %tobool = trunc i8 %3 to i1\l  br i1 %tobool, label %if.then.1, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x60fb6a0:s0 -> Node0x60fb6f0;
	Node0x60fb6a0:s1 -> Node0x60fb880;
	Node0x60fb6f0 [shape=record,label="{if.then.1:                                        \l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x60fb6f0 -> Node0x60fb740;
	Node0x60fb740 [shape=record,label="{for.cond:                                         \l  %4 = load i32* %i, align 4\l  %cmp2 = icmp slt i32 %4, 3\l  br i1 %cmp2, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x60fb740:s0 -> Node0x60fb790;
	Node0x60fb740:s1 -> Node0x60fb830;
	Node0x60fb790 [shape=record,label="{for.body:                                         \l  %5 = load i32* %i, align 4\l  %idxprom3 = sext i32 %5 to i64\l  %arrayidx4 = getelementptr inbounds [3 x i8]* @switches, i32 0, i64 %idxprom3\l  store i8 1, i8* %arrayidx4, align 1\l  br label %for.inc\l}"];
	Node0x60fb790 -> Node0x60fb7e0;
	Node0x60fb7e0 [shape=record,label="{for.inc:                                          \l  %6 = load i32* %i, align 4\l  %inc5 = add nsw i32 %6, 1\l  store i32 %inc5, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x60fb7e0 -> Node0x60fb740;
	Node0x60fb830 [shape=record,label="{for.end:                                          \l  store i8 0, i8* @firstSync, align 1\l  br label %if.end\l}"];
	Node0x60fb830 -> Node0x60fb880;
	Node0x60fb880 [shape=record,label="{if.end:                                           \l  br label %if.end.7\l}"];
	Node0x60fb880 -> Node0x60fb920;
	Node0x60fb8d0 [shape=record,label="{if.else:                                          \l  %7 = load i32* @counter1, align 4\l  %inc6 = add nsw i32 %7, 1\l  store i32 %inc6, i32* @counter1, align 4\l  br label %if.end.7\l}"];
	Node0x60fb8d0 -> Node0x60fb920;
	Node0x60fb920 [shape=record,label="{if.end.7:                                         \l  ret void\l}"];
}
