digraph "CFG for 'SphTransform' function" {
	label="CFG for 'SphTransform' function";

	Node0x60614a0 [shape=record,label="{entry:\l  %po.addr = alloca %struct.object*, align 8\l  %xtrans.addr = alloca [4 x double]*, align 8\l  %xinvT.addr = alloca [4 x double]*, align 8\l  %i = alloca i64, align 8\l  %numelems = alloca i64, align 8\l  %new_rad = alloca double, align 8\l  %ps = alloca %struct.sphere*, align 8\l  %pe = alloca %struct.element*, align 8\l  %surf_point = alloca [4 x double], align 16\l  %center_point = alloca [4 x double], align 16\l  %rad_vector = alloca [4 x double], align 16\l  store %struct.object* %po, %struct.object** %po.addr, align 8\l  store [4 x double]* %xtrans, [4 x double]** %xtrans.addr, align 8\l  %0 = load %struct.object** %po.addr, align 8\l  %pelem = getelementptr inbounds %struct.object* %0, i32 0, i32 3\l  %1 = load %struct.element** %pelem, align 8\l  store %struct.element* %1, %struct.element** %pe, align 8\l  %2 = load %struct.object** %po.addr, align 8\l  %numelements = getelementptr inbounds %struct.object* %2, i32 0, i32 4\l  %3 = load i64* %numelements, align 8\l  store i64 %3, i64* %numelems, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60614a0 -> Node0x608c670;
	Node0x608c670 [shape=record,label="{for.cond:                                         \l  %4 = load i64* %i, align 8\l  %5 = load i64* %numelems, align 8\l  %cmp = icmp slt i64 %4, %5\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x608c670:s0 -> Node0x608c6c0;
	Node0x608c670:s1 -> Node0x608c800;
	Node0x608c6c0 [shape=record,label="{for.body:                                         \l  %6 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %6, i32 0, i32 3\l  %7 = load i8** %data, align 8\l  %8 = bitcast i8* %7 to %struct.sphere*\l  store %struct.sphere* %8, %struct.sphere** %ps, align 8\l  %9 = load %struct.sphere** %ps, align 8\l  %center = getelementptr inbounds %struct.sphere* %9, i32 0, i32 0\l  %arrayidx = getelementptr inbounds [4 x double]* %center, i32 0, i64 0\l  %10 = load double* %arrayidx, align 8\l  %11 = load %struct.sphere** %ps, align 8\l  %rad = getelementptr inbounds %struct.sphere* %11, i32 0, i32 1\l  %12 = load double* %rad, align 8\l  %add = fadd double %10, %12\l  %arrayidx1 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 0\l  store double %add, double* %arrayidx1, align 8\l  %13 = load %struct.sphere** %ps, align 8\l  %center2 = getelementptr inbounds %struct.sphere* %13, i32 0, i32 0\l  %arrayidx3 = getelementptr inbounds [4 x double]* %center2, i32 0, i64 1\l  %14 = load double* %arrayidx3, align 8\l  %arrayidx4 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 1\l  store double %14, double* %arrayidx4, align 8\l  %15 = load %struct.sphere** %ps, align 8\l  %center5 = getelementptr inbounds %struct.sphere* %15, i32 0, i32 0\l  %arrayidx6 = getelementptr inbounds [4 x double]* %center5, i32 0, i64 2\l  %16 = load double* %arrayidx6, align 8\l  %arrayidx7 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 2\l  store double %16, double* %arrayidx7, align 8\l  %17 = load %struct.sphere** %ps, align 8\l  %center9 = getelementptr inbounds %struct.sphere* %17, i32 0, i32 0\l  %arrayidx10 = getelementptr inbounds [4 x double]* %center9, i32 0, i64 0\l  %18 = load double* %arrayidx10, align 8\l  %arrayidx11 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  store double %18, double* %arrayidx11, align 8\l  %19 = load %struct.sphere** %ps, align 8\l  %center12 = getelementptr inbounds %struct.sphere* %19, i32 0, i32 0\l  %arrayidx13 = getelementptr inbounds [4 x double]* %center12, i32 0, i64 1\l  %20 = load double* %arrayidx13, align 8\l  %arrayidx14 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  store double %20, double* %arrayidx14, align 8\l  %21 = load %struct.sphere** %ps, align 8\l  %center15 = getelementptr inbounds %struct.sphere* %21, i32 0, i32 0\l  %arrayidx16 = getelementptr inbounds [4 x double]* %center15, i32 0, i64 2\l  %22 = load double* %arrayidx16, align 8\l  %arrayidx17 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  store double %22, double* %arrayidx17, align 8\l  %arraydecay = getelementptr inbounds [4 x double]* %center_point, i32 0, i32\l... 0\l  %23 = load [4 x double]** %xtrans.addr, align 8\l  %arraydecay19 = getelementptr inbounds [4 x double]* %center_point, i32 0,\l... i32 0\l  call void @VecMatMult(double* %arraydecay, [4 x double]* %23, double*\l... %arraydecay19)\l  %arraydecay20 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i32\l... 0\l  %24 = load [4 x double]** %xtrans.addr, align 8\l  %arraydecay21 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i32\l... 0\l  call void @VecMatMult(double* %arraydecay20, [4 x double]* %24, double*\l... %arraydecay21)\l  %arrayidx22 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 0\l  %25 = load double* %arrayidx22, align 8\l  %arrayidx23 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  %26 = load double* %arrayidx23, align 8\l  %sub = fsub double %25, %26\l  %arrayidx24 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  store double %sub, double* %arrayidx24, align 8\l  %arrayidx25 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 1\l  %27 = load double* %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  %28 = load double* %arrayidx26, align 8\l  %sub27 = fsub double %27, %28\l  %arrayidx28 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  store double %sub27, double* %arrayidx28, align 8\l  %arrayidx29 = getelementptr inbounds [4 x double]* %surf_point, i32 0, i64 2\l  %29 = load double* %arrayidx29, align 8\l  %arrayidx30 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  %30 = load double* %arrayidx30, align 8\l  %sub31 = fsub double %29, %30\l  %arrayidx32 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  store double %sub31, double* %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 0\l  %31 = load double* %arrayidx33, align 8\l  %32 = load %struct.sphere** %ps, align 8\l  %center34 = getelementptr inbounds %struct.sphere* %32, i32 0, i32 0\l  %arrayidx35 = getelementptr inbounds [4 x double]* %center34, i32 0, i64 0\l  store double %31, double* %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 1\l  %33 = load double* %arrayidx36, align 8\l  %34 = load %struct.sphere** %ps, align 8\l  %center37 = getelementptr inbounds %struct.sphere* %34, i32 0, i32 0\l  %arrayidx38 = getelementptr inbounds [4 x double]* %center37, i32 0, i64 1\l  store double %33, double* %arrayidx38, align 8\l  %arrayidx39 = getelementptr inbounds [4 x double]* %center_point, i32 0, i64\l... 2\l  %35 = load double* %arrayidx39, align 8\l  %36 = load %struct.sphere** %ps, align 8\l  %center40 = getelementptr inbounds %struct.sphere* %36, i32 0, i32 0\l  %arrayidx41 = getelementptr inbounds [4 x double]* %center40, i32 0, i64 2\l  store double %35, double* %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  %37 = load double* %arrayidx42, align 8\l  %arrayidx43 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 0\l  %38 = load double* %arrayidx43, align 8\l  %mul = fmul double %37, %38\l  %arrayidx44 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  %39 = load double* %arrayidx44, align 8\l  %arrayidx45 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 1\l  %40 = load double* %arrayidx45, align 8\l  %mul46 = fmul double %39, %40\l  %add47 = fadd double %mul, %mul46\l  %arrayidx48 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  %41 = load double* %arrayidx48, align 8\l  %arrayidx49 = getelementptr inbounds [4 x double]* %rad_vector, i32 0, i64 2\l  %42 = load double* %arrayidx49, align 8\l  %mul50 = fmul double %41, %42\l  %add51 = fadd double %add47, %mul50\l  %call = call double @sqrt(double %add51)\l  store double %call, double* %new_rad, align 8\l  %43 = load double* %new_rad, align 8\l  %44 = load %struct.sphere** %ps, align 8\l  %rad52 = getelementptr inbounds %struct.sphere* %44, i32 0, i32 1\l  %45 = load double* %rad52, align 8\l  %cmp53 = fcmp une double %43, %45\l  br i1 %cmp53, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x608c6c0:s0 -> Node0x608c710;
	Node0x608c6c0:s1 -> Node0x608c760;
	Node0x608c710 [shape=record,label="{if.then:                                          \l  %46 = load double* %new_rad, align 8\l  %47 = load %struct.sphere** %ps, align 8\l  %rad54 = getelementptr inbounds %struct.sphere* %47, i32 0, i32 1\l  store double %46, double* %rad54, align 8\l  %48 = load %struct.sphere** %ps, align 8\l  %rad55 = getelementptr inbounds %struct.sphere* %48, i32 0, i32 1\l  %49 = load double* %rad55, align 8\l  %50 = load %struct.sphere** %ps, align 8\l  %rad56 = getelementptr inbounds %struct.sphere* %50, i32 0, i32 1\l  %51 = load double* %rad56, align 8\l  %mul57 = fmul double %49, %51\l  %52 = load %struct.sphere** %ps, align 8\l  %rad2 = getelementptr inbounds %struct.sphere* %52, i32 0, i32 2\l  store double %mul57, double* %rad2, align 8\l  br label %if.end\l}"];
	Node0x608c710 -> Node0x608c760;
	Node0x608c760 [shape=record,label="{if.end:                                           \l  %53 = load %struct.element** %pe, align 8\l  %incdec.ptr = getelementptr inbounds %struct.element* %53, i32 1\l  store %struct.element* %incdec.ptr, %struct.element** %pe, align 8\l  br label %for.inc\l}"];
	Node0x608c760 -> Node0x608c7b0;
	Node0x608c7b0 [shape=record,label="{for.inc:                                          \l  %54 = load i64* %i, align 8\l  %inc = add nsw i64 %54, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x608c7b0 -> Node0x608c670;
	Node0x608c800 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
