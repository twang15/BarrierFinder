digraph "CFG for 'Rotate' function" {
	label="CFG for 'Rotate' function";

	Node0x5feed10 [shape=record,label="{entry:\l  %axis.addr = alloca i64, align 8\l  %M.addr = alloca [4 x double]*, align 8\l  %angle.addr = alloca double, align 8\l  %cosangle = alloca double, align 8\l  %sinangle = alloca double, align 8\l  store i64 %axis, i64* %axis.addr, align 8\l  store [4 x double]* %M, [4 x double]** %M.addr, align 8\l  %0 = load [4 x double]** %M.addr, align 8\l  call void @MatrixIdentity([4 x double]* %0)\l  %call = call double @cos(double undef)\l  store double %call, double* %cosangle, align 8\l  %call1 = call double @sin(double undef)\l  store double %call1, double* %sinangle, align 8\l  %1 = load i64* %axis.addr, align 8\l  switch i64 %1, label %sw.default [\l    i64 1, label %sw.bb\l    i64 2, label %sw.bb.9\l    i64 3, label %sw.bb.19\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x5feed10:s0 -> Node0x5feee50;
	Node0x5feed10:s1 -> Node0x5feed60;
	Node0x5feed10:s2 -> Node0x5feedb0;
	Node0x5feed10:s3 -> Node0x5feee00;
	Node0x5feed60 [shape=record,label="{sw.bb:                                            \l  %2 = load double* %cosangle, align 8\l  %3 = load [4 x double]** %M.addr, align 8\l  %arrayidx = getelementptr inbounds [4 x double]* %3, i64 1\l  %arrayidx2 = getelementptr inbounds [4 x double]* %arrayidx, i32 0, i64 1\l  store double %2, double* %arrayidx2, align 8\l  %4 = load double* %sinangle, align 8\l  %5 = load [4 x double]** %M.addr, align 8\l  %arrayidx3 = getelementptr inbounds [4 x double]* %5, i64 1\l  %arrayidx4 = getelementptr inbounds [4 x double]* %arrayidx3, i32 0, i64 2\l  store double %4, double* %arrayidx4, align 8\l  %6 = load double* %sinangle, align 8\l  %sub = fsub double -0.000000e+00, %6\l  %7 = load [4 x double]** %M.addr, align 8\l  %arrayidx5 = getelementptr inbounds [4 x double]* %7, i64 2\l  %arrayidx6 = getelementptr inbounds [4 x double]* %arrayidx5, i32 0, i64 1\l  store double %sub, double* %arrayidx6, align 8\l  %8 = load double* %cosangle, align 8\l  %9 = load [4 x double]** %M.addr, align 8\l  %arrayidx7 = getelementptr inbounds [4 x double]* %9, i64 2\l  %arrayidx8 = getelementptr inbounds [4 x double]* %arrayidx7, i32 0, i64 2\l  store double %8, double* %arrayidx8, align 8\l  br label %sw.epilog\l}"];
	Node0x5feed60 -> Node0x5feeea0;
	Node0x5feedb0 [shape=record,label="{sw.bb.9:                                          \l  %10 = load double* %cosangle, align 8\l  %11 = load [4 x double]** %M.addr, align 8\l  %arrayidx10 = getelementptr inbounds [4 x double]* %11, i64 0\l  %arrayidx11 = getelementptr inbounds [4 x double]* %arrayidx10, i32 0, i64 0\l  store double %10, double* %arrayidx11, align 8\l  %12 = load double* %sinangle, align 8\l  %sub12 = fsub double -0.000000e+00, %12\l  %13 = load [4 x double]** %M.addr, align 8\l  %arrayidx13 = getelementptr inbounds [4 x double]* %13, i64 0\l  %arrayidx14 = getelementptr inbounds [4 x double]* %arrayidx13, i32 0, i64 2\l  store double %sub12, double* %arrayidx14, align 8\l  %14 = load double* %sinangle, align 8\l  %15 = load [4 x double]** %M.addr, align 8\l  %arrayidx15 = getelementptr inbounds [4 x double]* %15, i64 2\l  %arrayidx16 = getelementptr inbounds [4 x double]* %arrayidx15, i32 0, i64 0\l  store double %14, double* %arrayidx16, align 8\l  %16 = load double* %cosangle, align 8\l  %17 = load [4 x double]** %M.addr, align 8\l  %arrayidx17 = getelementptr inbounds [4 x double]* %17, i64 2\l  %arrayidx18 = getelementptr inbounds [4 x double]* %arrayidx17, i32 0, i64 2\l  store double %16, double* %arrayidx18, align 8\l  br label %sw.epilog\l}"];
	Node0x5feedb0 -> Node0x5feeea0;
	Node0x5feee00 [shape=record,label="{sw.bb.19:                                         \l  %18 = load double* %cosangle, align 8\l  %19 = load [4 x double]** %M.addr, align 8\l  %arrayidx20 = getelementptr inbounds [4 x double]* %19, i64 0\l  %arrayidx21 = getelementptr inbounds [4 x double]* %arrayidx20, i32 0, i64 0\l  store double %18, double* %arrayidx21, align 8\l  %20 = load double* %sinangle, align 8\l  %21 = load [4 x double]** %M.addr, align 8\l  %arrayidx22 = getelementptr inbounds [4 x double]* %21, i64 0\l  %arrayidx23 = getelementptr inbounds [4 x double]* %arrayidx22, i32 0, i64 1\l  store double %20, double* %arrayidx23, align 8\l  %22 = load double* %sinangle, align 8\l  %sub24 = fsub double -0.000000e+00, %22\l  %23 = load [4 x double]** %M.addr, align 8\l  %arrayidx25 = getelementptr inbounds [4 x double]* %23, i64 1\l  %arrayidx26 = getelementptr inbounds [4 x double]* %arrayidx25, i32 0, i64 0\l  store double %sub24, double* %arrayidx26, align 8\l  %24 = load double* %cosangle, align 8\l  %25 = load [4 x double]** %M.addr, align 8\l  %arrayidx27 = getelementptr inbounds [4 x double]* %25, i64 1\l  %arrayidx28 = getelementptr inbounds [4 x double]* %arrayidx27, i32 0, i64 1\l  store double %24, double* %arrayidx28, align 8\l  br label %sw.epilog\l}"];
	Node0x5feee00 -> Node0x5feeea0;
	Node0x5feee50 [shape=record,label="{sw.default:                                       \l  unreachable\l}"];
	Node0x5feeea0 [shape=record,label="{sw.epilog:                                        \l  ret void\l}"];
}
