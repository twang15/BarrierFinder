digraph "CFG for 'prn_bintree_node' function" {
	label="CFG for 'prn_bintree_node' function";

	Node0x5f628e0 [shape=record,label="{entry:\l  %b.addr = alloca %struct.btnode*, align 8\l  %i = alloca i64, align 8\l  br label %if.end.30\l}"];
	Node0x5f628e0 -> Node0x5f62b60;
	Node0x5f62930 [shape=record,label="{if.then:                                          \l  br label %for.cond\l}"];
	Node0x5f62930 -> Node0x5f62980;
	Node0x5f62980 [shape=record,label="{for.cond:                                         \l  br label %for.end\l}"];
	Node0x5f62980 -> Node0x5f62b10;
	Node0x5f629d0 [shape=record,label="{for.body:                                         \l  br label %if.end\l}"];
	Node0x5f629d0 -> Node0x5f62a70;
	Node0x5f62a20 [shape=record,label="{if.then.28:                                       \l  br label %if.end\l}"];
	Node0x5f62a20 -> Node0x5f62a70;
	Node0x5f62a70 [shape=record,label="{if.end:                                           \l  br label %for.inc\l}"];
	Node0x5f62a70 -> Node0x5f62ac0;
	Node0x5f62ac0 [shape=record,label="{for.inc:                                          \l  br label %for.cond\l}"];
	Node0x5f62ac0 -> Node0x5f62980;
	Node0x5f62b10 [shape=record,label="{for.end:                                          \l  br label %if.end.30\l}"];
	Node0x5f62b10 -> Node0x5f62b60;
	Node0x5f62b60 [shape=record,label="{if.end.30:                                        \l  ret void\l}"];
}
