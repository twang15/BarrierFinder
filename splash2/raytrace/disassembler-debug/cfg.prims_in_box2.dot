digraph "CFG for 'prims_in_box2' function" {
	label="CFG for 'prims_in_box2' function";

	Node0x5ed04a0 [shape=record,label="{entry:\l  %retval = alloca %struct.element**, align 8\l  %pepa.addr = alloca %struct.element**, align 8\l  %n_in.addr = alloca i64, align 8\l  %n.addr = alloca i64*, align 8\l  %ovlap = alloca i64, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %k = alloca i64, align 8\l  %pe = alloca %struct.element*, align 8\l  %npepa = alloca %struct.element**, align 8\l  %bb = alloca %struct.bbox, align 8\l  %max = alloca double, align 8\l  %side = alloca double, align 8\l  %eps = alloca double, align 8\l  store %struct.element** %pepa, %struct.element*** %pepa.addr, align 8\l  store i64 %n_in, i64* %n_in.addr, align 8\l  store i64* %n, i64** %n.addr, align 8\l  %dfar = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx = getelementptr inbounds [3 x double]* %dfar, i32 0, i64 0\l  %0 = load double* %arrayidx, align 8\l  %dnear = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx1 = getelementptr inbounds [3 x double]* %dnear, i32 0, i64 0\l  %1 = load double* %arrayidx1, align 8\l  %sub = fsub double %0, %1\l  store double %sub, double* %max, align 8\l  %dfar2 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx3 = getelementptr inbounds [3 x double]* %dfar2, i32 0, i64 1\l  %2 = load double* %arrayidx3, align 8\l  %dnear4 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx5 = getelementptr inbounds [3 x double]* %dnear4, i32 0, i64 1\l  %3 = load double* %arrayidx5, align 8\l  %sub6 = fsub double %2, %3\l  store double %sub6, double* %side, align 8\l  %4 = load double* %max, align 8\l  %5 = load double* %side, align 8\l  %cmp = fcmp ogt double %4, %5\l  br i1 %cmp, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x5ed04a0:s0 -> Node0x5ed04f0;
	Node0x5ed04a0:s1 -> Node0x5ed0540;
	Node0x5ed04f0 [shape=record,label="{cond.true:                                        \l  %6 = load double* %max, align 8\l  br label %cond.end\l}"];
	Node0x5ed04f0 -> Node0x5ed0590;
	Node0x5ed0540 [shape=record,label="{cond.false:                                       \l  %7 = load double* %side, align 8\l  br label %cond.end\l}"];
	Node0x5ed0540 -> Node0x5ed0590;
	Node0x5ed0590 [shape=record,label="{cond.end:                                         \l  %cond = phi double [ %6, %cond.true ], [ %7, %cond.false ]\l  store double %cond, double* %max, align 8\l  %dfar7 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx8 = getelementptr inbounds [3 x double]* %dfar7, i32 0, i64 2\l  %8 = load double* %arrayidx8, align 8\l  %dnear9 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx10 = getelementptr inbounds [3 x double]* %dnear9, i32 0, i64 2\l  %9 = load double* %arrayidx10, align 8\l  %sub11 = fsub double %8, %9\l  store double %sub11, double* %side, align 8\l  %10 = load double* %max, align 8\l  %11 = load double* %side, align 8\l  %cmp12 = fcmp ogt double %10, %11\l  br i1 %cmp12, label %cond.true.13, label %cond.false.14\l|{<s0>T|<s1>F}}"];
	Node0x5ed0590:s0 -> Node0x5ed05e0;
	Node0x5ed0590:s1 -> Node0x5ed0630;
	Node0x5ed05e0 [shape=record,label="{cond.true.13:                                     \l  %12 = load double* %max, align 8\l  br label %cond.end.15\l}"];
	Node0x5ed05e0 -> Node0x5ed0680;
	Node0x5ed0630 [shape=record,label="{cond.false.14:                                    \l  %13 = load double* %side, align 8\l  br label %cond.end.15\l}"];
	Node0x5ed0630 -> Node0x5ed0680;
	Node0x5ed0680 [shape=record,label="{cond.end.15:                                      \l  %cond16 = phi double [ %12, %cond.true.13 ], [ %13, %cond.false.14 ]\l  store double %cond16, double* %max, align 8\l  %14 = load double* %max, align 8\l  %mul = fmul double %14, 1.000000e-06\l  store double %mul, double* %eps, align 8\l  %15 = load i64* %n_in.addr, align 8\l  %cmp17 = icmp sgt i64 %15, 0\l  br i1 %cmp17, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5ed0680:s0 -> Node0x5ed06d0;
	Node0x5ed0680:s1 -> Node0x5ed0720;
	Node0x5ed06d0 [shape=record,label="{if.then:                                          \l  %16 = load i64* %n_in.addr, align 8\l  %call = call i8* @ObjectMalloc(i64 7, i64 %16)\l  %17 = bitcast i8* %call to %struct.element**\l  store %struct.element** %17, %struct.element*** %npepa, align 8\l  br label %if.end\l}"];
	Node0x5ed06d0 -> Node0x5ed0770;
	Node0x5ed0720 [shape=record,label="{if.else:                                          \l  %18 = load i64** %n.addr, align 8\l  store i64 0, i64* %18, align 8\l  %19 = load %struct.element*** %npepa, align 8\l  store %struct.element** %19, %struct.element*** %retval\l  br label %return\l}"];
	Node0x5ed0720 -> Node0x5ed0ea0;
	Node0x5ed0770 [shape=record,label="{if.end:                                           \l  %20 = load i64** %n.addr, align 8\l  store i64 0, i64* %20, align 8\l  store i64 0, i64* %k, align 8\l  store i64 0, i64* %j, align 8\l  br label %for.cond\l}"];
	Node0x5ed0770 -> Node0x5ed07c0;
	Node0x5ed07c0 [shape=record,label="{for.cond:                                         \l  %21 = load i64* %j, align 8\l  %22 = load i64* %n_in.addr, align 8\l  %cmp19 = icmp slt i64 %21, %22\l  br i1 %cmp19, label %for.body, label %for.end.89\l|{<s0>T|<s1>F}}"];
	Node0x5ed07c0:s0 -> Node0x5ed0810;
	Node0x5ed07c0:s1 -> Node0x5ed0e50;
	Node0x5ed0810 [shape=record,label="{for.body:                                         \l  %23 = load i64* %j, align 8\l  %24 = load %struct.element*** %pepa.addr, align 8\l  %arrayidx21 = getelementptr inbounds %struct.element** %24, i64 %23\l  %25 = load %struct.element** %arrayidx21, align 8\l  store %struct.element* %25, %struct.element** %pe, align 8\l  %26 = load %struct.element** %pe, align 8\l  %bv = getelementptr inbounds %struct.element* %26, i32 0, i32 1\l  %27 = bitcast %struct.bbox* %bb to i8*\l  %28 = bitcast %struct.bbox* %bv to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 48, i32 8, i1\l... false)\l  store i64 1, i64* %ovlap, align 8\l  store i64 0, i64* %i, align 8\l  br label %for.cond.22\l}"];
	Node0x5ed0810 -> Node0x5ed0860;
	Node0x5ed0860 [shape=record,label="{for.cond.22:                                      \l  %29 = load i64* %i, align 8\l  %cmp23 = icmp slt i64 %29, 1\l  br i1 %cmp23, label %for.body.25, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5ed0860:s0 -> Node0x5ed08b0;
	Node0x5ed0860:s1 -> Node0x5ed0d10;
	Node0x5ed08b0 [shape=record,label="{for.body.25:                                      \l  %dnear26 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx27 = getelementptr inbounds [3 x double]* %dnear26, i32 0, i64 0\l  %30 = load double* %arrayidx27, align 8\l  %dfar28 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 1\l  %arrayidx29 = getelementptr inbounds [3 x double]* %dfar28, i32 0, i64 0\l  %31 = load double* %arrayidx29, align 8\l  %32 = load double* %eps, align 8\l  %add = fadd double %31, %32\l  %cmp30 = fcmp ogt double %30, %add\l  br i1 %cmp30, label %if.then.32, label %if.end.33\l|{<s0>T|<s1>F}}"];
	Node0x5ed08b0:s0 -> Node0x5ed0900;
	Node0x5ed08b0:s1 -> Node0x5ed0950;
	Node0x5ed0900 [shape=record,label="{if.then.32:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed0900 -> Node0x5ed0d10;
	Node0x5ed0950 [shape=record,label="{if.end.33:                                        \l  %dnear34 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx35 = getelementptr inbounds [3 x double]* %dnear34, i32 0, i64 1\l  %33 = load double* %arrayidx35, align 8\l  %dfar36 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 1\l  %arrayidx37 = getelementptr inbounds [3 x double]* %dfar36, i32 0, i64 1\l  %34 = load double* %arrayidx37, align 8\l  %35 = load double* %eps, align 8\l  %add38 = fadd double %34, %35\l  %cmp39 = fcmp ogt double %33, %add38\l  br i1 %cmp39, label %if.then.41, label %if.end.42\l|{<s0>T|<s1>F}}"];
	Node0x5ed0950:s0 -> Node0x5ed09a0;
	Node0x5ed0950:s1 -> Node0x5ed09f0;
	Node0x5ed09a0 [shape=record,label="{if.then.41:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed09a0 -> Node0x5ed0d10;
	Node0x5ed09f0 [shape=record,label="{if.end.42:                                        \l  %dnear43 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 0\l  %arrayidx44 = getelementptr inbounds [3 x double]* %dnear43, i32 0, i64 2\l  %36 = load double* %arrayidx44, align 8\l  %dfar45 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 1\l  %arrayidx46 = getelementptr inbounds [3 x double]* %dfar45, i32 0, i64 2\l  %37 = load double* %arrayidx46, align 8\l  %38 = load double* %eps, align 8\l  %add47 = fadd double %37, %38\l  %cmp48 = fcmp ogt double %36, %add47\l  br i1 %cmp48, label %if.then.50, label %if.end.51\l|{<s0>T|<s1>F}}"];
	Node0x5ed09f0:s0 -> Node0x5ed0a40;
	Node0x5ed09f0:s1 -> Node0x5ed0a90;
	Node0x5ed0a40 [shape=record,label="{if.then.50:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed0a40 -> Node0x5ed0d10;
	Node0x5ed0a90 [shape=record,label="{if.end.51:                                        \l  %dfar52 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx53 = getelementptr inbounds [3 x double]* %dfar52, i32 0, i64 0\l  %39 = load double* %arrayidx53, align 8\l  %dnear54 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 0\l  %arrayidx55 = getelementptr inbounds [3 x double]* %dnear54, i32 0, i64 0\l  %40 = load double* %arrayidx55, align 8\l  %41 = load double* %eps, align 8\l  %sub56 = fsub double %40, %41\l  %cmp57 = fcmp olt double %39, %sub56\l  br i1 %cmp57, label %if.then.59, label %if.end.60\l|{<s0>T|<s1>F}}"];
	Node0x5ed0a90:s0 -> Node0x5ed0ae0;
	Node0x5ed0a90:s1 -> Node0x5ed0b30;
	Node0x5ed0ae0 [shape=record,label="{if.then.59:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed0ae0 -> Node0x5ed0d10;
	Node0x5ed0b30 [shape=record,label="{if.end.60:                                        \l  %dfar61 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx62 = getelementptr inbounds [3 x double]* %dfar61, i32 0, i64 1\l  %42 = load double* %arrayidx62, align 8\l  %dnear63 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 0\l  %arrayidx64 = getelementptr inbounds [3 x double]* %dnear63, i32 0, i64 1\l  %43 = load double* %arrayidx64, align 8\l  %44 = load double* %eps, align 8\l  %sub65 = fsub double %43, %44\l  %cmp66 = fcmp olt double %42, %sub65\l  br i1 %cmp66, label %if.then.68, label %if.end.69\l|{<s0>T|<s1>F}}"];
	Node0x5ed0b30:s0 -> Node0x5ed0b80;
	Node0x5ed0b30:s1 -> Node0x5ed0bd0;
	Node0x5ed0b80 [shape=record,label="{if.then.68:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed0b80 -> Node0x5ed0d10;
	Node0x5ed0bd0 [shape=record,label="{if.end.69:                                        \l  %dfar70 = getelementptr inbounds %struct.bbox* %b, i32 0, i32 1\l  %arrayidx71 = getelementptr inbounds [3 x double]* %dfar70, i32 0, i64 2\l  %45 = load double* %arrayidx71, align 8\l  %dnear72 = getelementptr inbounds %struct.bbox* %bb, i32 0, i32 0\l  %arrayidx73 = getelementptr inbounds [3 x double]* %dnear72, i32 0, i64 2\l  %46 = load double* %arrayidx73, align 8\l  %47 = load double* %eps, align 8\l  %sub74 = fsub double %46, %47\l  %cmp75 = fcmp olt double %45, %sub74\l  br i1 %cmp75, label %if.then.77, label %if.end.78\l|{<s0>T|<s1>F}}"];
	Node0x5ed0bd0:s0 -> Node0x5ed0c20;
	Node0x5ed0bd0:s1 -> Node0x5ed0c70;
	Node0x5ed0c20 [shape=record,label="{if.then.77:                                       \l  store i64 0, i64* %ovlap, align 8\l  br label %for.end\l}"];
	Node0x5ed0c20 -> Node0x5ed0d10;
	Node0x5ed0c70 [shape=record,label="{if.end.78:                                        \l  br label %for.inc\l}"];
	Node0x5ed0c70 -> Node0x5ed0cc0;
	Node0x5ed0cc0 [shape=record,label="{for.inc:                                          \l  %48 = load i64* %i, align 8\l  %inc = add nsw i64 %48, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond.22\l}"];
	Node0x5ed0cc0 -> Node0x5ed0860;
	Node0x5ed0d10 [shape=record,label="{for.end:                                          \l  %49 = load i64* %ovlap, align 8\l  %cmp79 = icmp eq i64 %49, 1\l  br i1 %cmp79, label %if.then.81, label %if.end.86\l|{<s0>T|<s1>F}}"];
	Node0x5ed0d10:s0 -> Node0x5ed0d60;
	Node0x5ed0d10:s1 -> Node0x5ed0db0;
	Node0x5ed0d60 [shape=record,label="{if.then.81:                                       \l  %50 = load i64* %j, align 8\l  %51 = load %struct.element*** %pepa.addr, align 8\l  %arrayidx82 = getelementptr inbounds %struct.element** %51, i64 %50\l  %52 = load %struct.element** %arrayidx82, align 8\l  %53 = load i64* %k, align 8\l  %inc83 = add nsw i64 %53, 1\l  store i64 %inc83, i64* %k, align 8\l  %54 = load %struct.element*** %npepa, align 8\l  %arrayidx84 = getelementptr inbounds %struct.element** %54, i64 %53\l  store %struct.element* %52, %struct.element** %arrayidx84, align 8\l  %55 = load i64** %n.addr, align 8\l  %56 = load i64* %55, align 8\l  %inc85 = add nsw i64 %56, 1\l  store i64 %inc85, i64* %55, align 8\l  br label %if.end.86\l}"];
	Node0x5ed0d60 -> Node0x5ed0db0;
	Node0x5ed0db0 [shape=record,label="{if.end.86:                                        \l  br label %for.inc.87\l}"];
	Node0x5ed0db0 -> Node0x5ed0e00;
	Node0x5ed0e00 [shape=record,label="{for.inc.87:                                       \l  %57 = load i64* %j, align 8\l  %inc88 = add nsw i64 %57, 1\l  store i64 %inc88, i64* %j, align 8\l  br label %for.cond\l}"];
	Node0x5ed0e00 -> Node0x5ed07c0;
	Node0x5ed0e50 [shape=record,label="{for.end.89:                                       \l  %58 = load %struct.element*** %npepa, align 8\l  store %struct.element** %58, %struct.element*** %retval\l  br label %return\l}"];
	Node0x5ed0e50 -> Node0x5ed0ea0;
	Node0x5ed0ea0 [shape=record,label="{return:                                           \l  %59 = load %struct.element*** %retval\l  ret %struct.element** %59\l}"];
}
