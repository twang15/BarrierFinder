digraph "CFG for 'GlobalMalloc' function" {
	label="CFG for 'GlobalMalloc' function";

	Node0x5ff5bf0 [shape=record,label="{entry:\l  %retval = alloca i8*, align 8\l  %size.addr = alloca i64, align 8\l  %msg.addr = alloca i8*, align 8\l  %prev = alloca %struct.node*, align 8\l  %curr = alloca %struct.node*, align 8\l  %next = alloca %struct.node*, align 8\l  store i64 %size, i64* %size.addr, align 8\l  %0 = load i64* %size.addr, align 8\l  %tobool = icmp ne i64 %0, 0\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x5ff5bf0:s0 -> Node0x5ff5c90;
	Node0x5ff5bf0:s1 -> Node0x5ff5c40;
	Node0x5ff5c40 [shape=record,label="{if.then:                                          \l  store i8* null, i8** %retval\l  br label %return\l}"];
	Node0x5ff5c40 -> Node0x5ff6230;
	Node0x5ff5c90 [shape=record,label="{if.end:                                           \l  store %struct.node* null, %struct.node** %prev, align 8\l  %1 = load %struct.gmem** @gm, align 8\l  %freelist = getelementptr inbounds %struct.gmem* %1, i32 0, i32 5\l  %2 = load %struct.node** %freelist, align 8\l  store %struct.node* %2, %struct.node** %curr, align 8\l  %3 = load i64* %size.addr, align 8\l  %add = add i64 %3, 7\l  %shr = lshr i64 %add, 3\l  %shl = shl i64 %shr, 3\l  store i64 %shl, i64* %size.addr, align 8\l  br label %while.cond\l}"];
	Node0x5ff5c90 -> Node0x5ff5ce0;
	Node0x5ff5ce0 [shape=record,label="{while.cond:                                       \l  %4 = load %struct.node** %curr, align 8\l  %tobool1 = icmp ne %struct.node* %4, null\l  br i1 %tobool1, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x5ff5ce0:s0 -> Node0x5ff5d30;
	Node0x5ff5ce0:s1 -> Node0x5ff5d80;
	Node0x5ff5d30 [shape=record,label="{land.rhs:                                         \l  %5 = load %struct.node** %curr, align 8\l  %size2 = getelementptr inbounds %struct.node* %5, i32 0, i32 1\l  %6 = load i64* %size2, align 8\l  %7 = load i64* %size.addr, align 8\l  %cmp = icmp ult i64 %6, %7\l  br label %land.end\l}"];
	Node0x5ff5d30 -> Node0x5ff5d80;
	Node0x5ff5d80 [shape=record,label="{land.end:                                         \l  %8 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]\l  br i1 %8, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5ff5d80:s0 -> Node0x5ff5dd0;
	Node0x5ff5d80:s1 -> Node0x5ff5f60;
	Node0x5ff5dd0 [shape=record,label="{while.body:                                       \l  %9 = load %struct.node** %curr, align 8\l  %cksm = getelementptr inbounds %struct.node* %9, i32 0, i32 3\l  %10 = load i64* %cksm, align 8\l  %cmp3 = icmp ne i64 %10, 1437226410\l  br i1 %cmp3, label %if.then.4, label %if.end.6\l|{<s0>T|<s1>F}}"];
	Node0x5ff5dd0:s0 -> Node0x5ff5e20;
	Node0x5ff5dd0:s1 -> Node0x5ff5e70;
	Node0x5ff5e20 [shape=record,label="{if.then.4:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ff5e20 -> Node0x5ff6280;
	Node0x5ff5e70 [shape=record,label="{if.end.6:                                         \l  %11 = load %struct.node** %curr, align 8\l  %free = getelementptr inbounds %struct.node* %11, i32 0, i32 2\l  %12 = load i64* %free, align 8\l  %cmp7 = icmp ne i64 %12, 1\l  br i1 %cmp7, label %if.then.8, label %if.end.10\l|{<s0>T|<s1>F}}"];
	Node0x5ff5e70:s0 -> Node0x5ff5ec0;
	Node0x5ff5e70:s1 -> Node0x5ff5f10;
	Node0x5ff5ec0 [shape=record,label="{if.then.8:                                        \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ff5ec0 -> Node0x5ff6280;
	Node0x5ff5f10 [shape=record,label="{if.end.10:                                        \l  %13 = load %struct.node** %curr, align 8\l  store %struct.node* %13, %struct.node** %prev, align 8\l  %14 = load %struct.node** %curr, align 8\l  %next11 = getelementptr inbounds %struct.node* %14, i32 0, i32 0\l  %15 = load %struct.node** %next11, align 8\l  store %struct.node* %15, %struct.node** %curr, align 8\l  br label %while.cond\l}"];
	Node0x5ff5f10 -> Node0x5ff5ce0;
	Node0x5ff5f60 [shape=record,label="{while.end:                                        \l  %16 = load %struct.node** %curr, align 8\l  %tobool12 = icmp ne %struct.node* %16, null\l  br i1 %tobool12, label %if.end.15, label %if.then.13\l|{<s0>T|<s1>F}}"];
	Node0x5ff5f60:s0 -> Node0x5ff6000;
	Node0x5ff5f60:s1 -> Node0x5ff5fb0;
	Node0x5ff5fb0 [shape=record,label="{if.then.13:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5ff5fb0 -> Node0x5ff6280;
	Node0x5ff6000 [shape=record,label="{if.end.15:                                        \l  %17 = load %struct.node** %curr, align 8\l  %size16 = getelementptr inbounds %struct.node* %17, i32 0, i32 1\l  %18 = load i64* %size16, align 8\l  %19 = load i64* %size.addr, align 8\l  %sub = sub i64 %18, %19\l  %cmp17 = icmp ugt i64 %sub, 48\l  br i1 %cmp17, label %if.then.18, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5ff6000:s0 -> Node0x5ff6050;
	Node0x5ff6000:s1 -> Node0x5ff60a0;
	Node0x5ff6050 [shape=record,label="{if.then.18:                                       \l  %20 = load %struct.node** %curr, align 8\l  %21 = bitcast %struct.node* %20 to i8*\l  %22 = load i64* @nodesize, align 8\l  %23 = load i64* %size.addr, align 8\l  %add19 = add i64 %22, %23\l  %add.ptr = getelementptr inbounds i8* %21, i64 %add19\l  %24 = bitcast i8* %add.ptr to %struct.node*\l  store %struct.node* %24, %struct.node** %next, align 8\l  %25 = load %struct.node** %next, align 8\l  %cksm27 = getelementptr inbounds %struct.node* %25, i32 0, i32 3\l  store i64 1437226410, i64* %cksm27, align 8\l  %26 = load i64* %size.addr, align 8\l  %27 = load %struct.node** %curr, align 8\l  %size28 = getelementptr inbounds %struct.node* %27, i32 0, i32 1\l  store i64 %26, i64* %size28, align 8\l  br label %if.end.30\l}"];
	Node0x5ff6050 -> Node0x5ff60f0;
	Node0x5ff60a0 [shape=record,label="{if.else:                                          \l  %28 = load %struct.node** %curr, align 8\l  %next29 = getelementptr inbounds %struct.node* %28, i32 0, i32 0\l  %29 = load %struct.node** %next29, align 8\l  store %struct.node* %29, %struct.node** %next, align 8\l  br label %if.end.30\l}"];
	Node0x5ff60a0 -> Node0x5ff60f0;
	Node0x5ff60f0 [shape=record,label="{if.end.30:                                        \l  %30 = load %struct.node** %prev, align 8\l  %tobool31 = icmp ne %struct.node* %30, null\l  br i1 %tobool31, label %if.else.34, label %if.then.32\l|{<s0>T|<s1>F}}"];
	Node0x5ff60f0:s0 -> Node0x5ff6190;
	Node0x5ff60f0:s1 -> Node0x5ff6140;
	Node0x5ff6140 [shape=record,label="{if.then.32:                                       \l  %31 = load %struct.node** %next, align 8\l  %32 = load %struct.gmem** @gm, align 8\l  %freelist33 = getelementptr inbounds %struct.gmem* %32, i32 0, i32 5\l  store %struct.node* %31, %struct.node** %freelist33, align 8\l  br label %if.end.36\l}"];
	Node0x5ff6140 -> Node0x5ff61e0;
	Node0x5ff6190 [shape=record,label="{if.else.34:                                       \l  br label %if.end.36\l}"];
	Node0x5ff6190 -> Node0x5ff61e0;
	Node0x5ff61e0 [shape=record,label="{if.end.36:                                        \l  %33 = load %struct.node** %curr, align 8\l  %next39 = getelementptr inbounds %struct.node* %33, i32 0, i32 0\l  store %struct.node* null, %struct.node** %next39, align 8\l  %34 = load %struct.node** %curr, align 8\l  %free40 = getelementptr inbounds %struct.node* %34, i32 0, i32 2\l  store i64 0, i64* %free40, align 8\l  %35 = load %struct.node** %curr, align 8\l  %36 = bitcast %struct.node* %35 to i8*\l  %37 = load i64* @nodesize, align 8\l  %add.ptr41 = getelementptr inbounds i8* %36, i64 %37\l  %38 = bitcast i8* %add.ptr41 to %struct.node*\l  store %struct.node* %38, %struct.node** %curr, align 8\l  %39 = load %struct.node** %curr, align 8\l  %40 = bitcast %struct.node* %39 to i8*\l  store i8* %40, i8** %retval\l  br label %return\l}"];
	Node0x5ff61e0 -> Node0x5ff6230;
	Node0x5ff6230 [shape=record,label="{return:                                           \l  %41 = load i8** %retval\l  ret i8* %41\l}"];
	Node0x5ff6280 [shape=record,label="{UnifiedUnreachableBlock:                          \l  unreachable\l}"];
}
