digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5fc3f40 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %argc.addr = alloca i32, align 4\l  %argv.addr = alloca i8**, align 8\l  %i = alloca i64, align 8\l  %begin = alloca i64, align 8\l  %end = alloca i64, align 8\l  %lapsed = alloca i64, align 8\l  %tmp = alloca i16, align 2\l  %pch = alloca i8*, align 8\l  %vtrans = alloca [4 x [4 x double]], align 16\l  %Vinv = alloca [4 x [4 x double]], align 16\l  %i56 = alloca i32, align 4\l  %t = alloca i64, align 8\l  %totalproctime = alloca i32, align 4\l  %maxproctime = alloca i32, align 4\l  %minproctime = alloca i32, align 4\l  store i32 %argc, i32* %argc.addr, align 4\l  store i8** %argv, i8*** %argv.addr, align 8\l  br label %while.cond\l}"];
	Node0x5fc3f40 -> Node0x5fc3f90;
	Node0x5fc3f90 [shape=record,label="{while.cond:                                       \l  %0 = load i32* %argc.addr, align 4\l  %dec = add nsw i32 %0, -1\l  store i32 %dec, i32* %argc.addr, align 4\l  %cmp = icmp sgt i32 %0, 1\l  br i1 %cmp, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x5fc3f90:s0 -> Node0x5fc3fe0;
	Node0x5fc3f90:s1 -> Node0x5fc4030;
	Node0x5fc3fe0 [shape=record,label="{land.rhs:                                         \l  %1 = load i8*** %argv.addr, align 8\l  %incdec.ptr = getelementptr inbounds i8** %1, i32 1\l  store i8** %incdec.ptr, i8*** %argv.addr, align 8\l  %2 = load i8** %incdec.ptr, align 8\l  %arrayidx = getelementptr inbounds i8* %2, i64 0\l  %3 = load i8* %arrayidx, align 1\l  %conv = sext i8 %3 to i32\l  %cmp4 = icmp eq i32 %conv, 45\l  br label %land.end\l}"];
	Node0x5fc3fe0 -> Node0x5fc4030;
	Node0x5fc4030 [shape=record,label="{land.end:                                         \l  %4 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]\l  br i1 %4, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5fc4030:s0 -> Node0x5fc4080;
	Node0x5fc4030:s1 -> Node0x5fc5000;
	Node0x5fc4080 [shape=record,label="{while.body:                                       \l  %5 = load i8*** %argv.addr, align 8\l  %arrayidx6 = getelementptr inbounds i8** %5, i64 0\l  %6 = load i8** %arrayidx6, align 8\l  %add.ptr = getelementptr inbounds i8* %6, i64 1\l  store i8* %add.ptr, i8** %pch, align 8\l  br label %for.cond\l}"];
	Node0x5fc4080 -> Node0x5fc4ab0;
	Node0x5fc4ab0 [shape=record,label="{for.cond:                                         \l  %7 = load i8** %pch, align 8\l  %8 = load i8* %7, align 1\l  %conv7 = sext i8 %8 to i32\l  %cmp8 = icmp ne i32 %conv7, 0\l  br i1 %cmp8, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5fc4ab0:s0 -> Node0x5fc4b00;
	Node0x5fc4ab0:s1 -> Node0x5fc4fb0;
	Node0x5fc4b00 [shape=record,label="{for.body:                                         \l  %9 = load i8** %pch, align 8\l  %10 = load i8* %9, align 1\l  %conv10 = sext i8 %10 to i32\l  switch i32 %conv10, label %sw.default [\l    i32 63, label %sw.bb\l    i32 104, label %sw.bb\l    i32 72, label %sw.bb\l    i32 97, label %sw.bb.11\l    i32 65, label %sw.bb.11\l    i32 109, label %sw.bb.15\l    i32 112, label %sw.bb.23\l    i32 115, label %sw.bb.31\l    i32 83, label %sw.bb.31\l  ]\l|{<s0>def|<s1>63|<s2>104|<s3>72|<s4>97|<s5>65|<s6>109|<s7>112|<s8>115|<s9>83}}"];
	Node0x5fc4b00:s0 -> Node0x5fc4ec0;
	Node0x5fc4b00:s1 -> Node0x5fc4b50;
	Node0x5fc4b00:s2 -> Node0x5fc4b50;
	Node0x5fc4b00:s3 -> Node0x5fc4b50;
	Node0x5fc4b00:s4 -> Node0x5fc4ba0;
	Node0x5fc4b00:s5 -> Node0x5fc4ba0;
	Node0x5fc4b00:s6 -> Node0x5fc4c90;
	Node0x5fc4b00:s7 -> Node0x5fc4d80;
	Node0x5fc4b00:s8 -> Node0x5fc4e70;
	Node0x5fc4b00:s9 -> Node0x5fc4e70;
	Node0x5fc4b50 [shape=record,label="{sw.bb:                                            \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc4b50 -> Node0x5fc5a50;
	Node0x5fc4ba0 [shape=record,label="{sw.bb.11:                                         \l  store i64 1, i64* @AntiAlias, align 8\l  %11 = load i8** %pch, align 8\l  %incdec.ptr12 = getelementptr inbounds i8* %11, i32 1\l  store i8* %incdec.ptr12, i8** %pch, align 8\l  %12 = load i8* %incdec.ptr12, align 1\l  %tobool = icmp ne i8 %12, 0\l  br i1 %tobool, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5fc4ba0:s0 -> Node0x5fc4bf0;
	Node0x5fc4ba0:s1 -> Node0x5fc4c40;
	Node0x5fc4bf0 [shape=record,label="{if.then:                                          \l  %13 = load i8** %pch, align 8\l  %call = call i32 (i8*, ...) *bitcast (i32 (...)* @atoi to i32 (i8*,\l... ...)*)(i8* %13)\l  %conv13 = sext i32 %call to i64\l  store i64 %conv13, i64* @NumSubRays, align 8\l  br label %if.end\l}"];
	Node0x5fc4bf0 -> Node0x5fc4c40;
	Node0x5fc4c40 [shape=record,label="{if.end:                                           \l  %14 = load i8** %pch, align 8\l  %incdec.ptr14 = getelementptr inbounds i8* %14, i32 -1\l  store i8* %incdec.ptr14, i8** %pch, align 8\l  br label %sw.epilog\l}"];
	Node0x5fc4c40 -> Node0x5fc4f10;
	Node0x5fc4c90 [shape=record,label="{sw.bb.15:                                         \l  %15 = load i8** %pch, align 8\l  %incdec.ptr16 = getelementptr inbounds i8* %15, i32 1\l  store i8* %incdec.ptr16, i8** %pch, align 8\l  %16 = load i8* %incdec.ptr16, align 1\l  %tobool17 = icmp ne i8 %16, 0\l  br i1 %tobool17, label %if.then.18, label %if.end.21\l|{<s0>T|<s1>F}}"];
	Node0x5fc4c90:s0 -> Node0x5fc4ce0;
	Node0x5fc4c90:s1 -> Node0x5fc4d30;
	Node0x5fc4ce0 [shape=record,label="{if.then.18:                                       \l  %17 = load i8** %pch, align 8\l  %call19 = call i32 (i8*, ...) *bitcast (i32 (...)* @atoi to i32 (i8*,\l... ...)*)(i8* %17)\l  %conv20 = sext i32 %call19 to i64\l  store i64 %conv20, i64* @MaxGlobMem, align 8\l  br label %if.end.21\l}"];
	Node0x5fc4ce0 -> Node0x5fc4d30;
	Node0x5fc4d30 [shape=record,label="{if.end.21:                                        \l  %18 = load i8** %pch, align 8\l  %incdec.ptr22 = getelementptr inbounds i8* %18, i32 -1\l  store i8* %incdec.ptr22, i8** %pch, align 8\l  br label %sw.epilog\l}"];
	Node0x5fc4d30 -> Node0x5fc4f10;
	Node0x5fc4d80 [shape=record,label="{sw.bb.23:                                         \l  %19 = load i8** %pch, align 8\l  %incdec.ptr24 = getelementptr inbounds i8* %19, i32 1\l  store i8* %incdec.ptr24, i8** %pch, align 8\l  %20 = load i8* %incdec.ptr24, align 1\l  %tobool25 = icmp ne i8 %20, 0\l  br i1 %tobool25, label %if.then.26, label %if.end.29\l|{<s0>T|<s1>F}}"];
	Node0x5fc4d80:s0 -> Node0x5fc4dd0;
	Node0x5fc4d80:s1 -> Node0x5fc4e20;
	Node0x5fc4dd0 [shape=record,label="{if.then.26:                                       \l  %21 = load i8** %pch, align 8\l  %call27 = call i32 (i8*, ...) *bitcast (i32 (...)* @atoi to i32 (i8*,\l... ...)*)(i8* %21)\l  %conv28 = sext i32 %call27 to i64\l  store i64 %conv28, i64* @nprocs, align 8\l  br label %if.end.29\l}"];
	Node0x5fc4dd0 -> Node0x5fc4e20;
	Node0x5fc4e20 [shape=record,label="{if.end.29:                                        \l  %22 = load i8** %pch, align 8\l  %incdec.ptr30 = getelementptr inbounds i8* %22, i32 -1\l  store i8* %incdec.ptr30, i8** %pch, align 8\l  br label %sw.epilog\l}"];
	Node0x5fc4e20 -> Node0x5fc4f10;
	Node0x5fc4e70 [shape=record,label="{sw.bb.31:                                         \l  br label %sw.epilog\l}"];
	Node0x5fc4e70 -> Node0x5fc4f10;
	Node0x5fc4ec0 [shape=record,label="{sw.default:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc4ec0 -> Node0x5fc5a50;
	Node0x5fc4f10 [shape=record,label="{sw.epilog:                                        \l  br label %for.inc\l}"];
	Node0x5fc4f10 -> Node0x5fc4f60;
	Node0x5fc4f60 [shape=record,label="{for.inc:                                          \l  %23 = load i8** %pch, align 8\l  %incdec.ptr34 = getelementptr inbounds i8* %23, i32 1\l  store i8* %incdec.ptr34, i8** %pch, align 8\l  br label %for.cond\l}"];
	Node0x5fc4f60 -> Node0x5fc4ab0;
	Node0x5fc4fb0 [shape=record,label="{for.end:                                          \l  br label %while.cond\l}"];
	Node0x5fc4fb0 -> Node0x5fc3f90;
	Node0x5fc5000 [shape=record,label="{while.end:                                        \l  %24 = load i32* %argc.addr, align 4\l  %tobool35 = icmp ne i32 %24, 0\l  br i1 %tobool35, label %if.end.37, label %if.then.36\l|{<s0>T|<s1>F}}"];
	Node0x5fc5000:s0 -> Node0x5fc50a0;
	Node0x5fc5000:s1 -> Node0x5fc5050;
	Node0x5fc5050 [shape=record,label="{if.then.36:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc5050 -> Node0x5fc5a50;
	Node0x5fc50a0 [shape=record,label="{if.end.37:                                        \l  %25 = load i64* @nprocs, align 8\l  %cmp38 = icmp slt i64 %25, 1\l  br i1 %cmp38, label %if.then.42, label %lor.lhs.false\l|{<s0>T|<s1>F}}"];
	Node0x5fc50a0:s0 -> Node0x5fc5140;
	Node0x5fc50a0:s1 -> Node0x5fc50f0;
	Node0x5fc50f0 [shape=record,label="{lor.lhs.false:                                    \l  %26 = load i64* @nprocs, align 8\l  %cmp40 = icmp sgt i64 %26, 128\l  br i1 %cmp40, label %if.then.42, label %if.end.44\l|{<s0>T|<s1>F}}"];
	Node0x5fc50f0:s0 -> Node0x5fc5140;
	Node0x5fc50f0:s1 -> Node0x5fc5190;
	Node0x5fc5140 [shape=record,label="{if.then.42:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc5140 -> Node0x5fc5a50;
	Node0x5fc5190 [shape=record,label="{if.end.44:                                        \l  %27 = load i64* @MaxGlobMem, align 8\l  %shl = shl i64 %27, 20\l  store i64 %shl, i64* @MaxGlobMem, align 8\l  %call50 = call i8* @malloc(i64 530624)\l  %28 = bitcast i8* %call50 to %struct.gmem*\l  store %struct.gmem* %28, %struct.gmem** @gm, align 8\l  %29 = load i64* @nprocs, align 8\l  %30 = load %struct.gmem** @gm, align 8\l  %nprocs = getelementptr inbounds %struct.gmem* %30, i32 0, i32 0\l  store i64 %29, i64* %nprocs, align 8\l  %31 = load %struct.gmem** @gm, align 8\l  %pid = getelementptr inbounds %struct.gmem* %31, i32 0, i32 1\l  store i64 0, i64* %pid, align 8\l  %32 = load %struct.gmem** @gm, align 8\l  %rid = getelementptr inbounds %struct.gmem* %32, i32 0, i32 2\l  store i64 1, i64* %rid, align 8\l  %33 = load %struct.gmem** @gm, align 8\l  %start = getelementptr inbounds %struct.gmem* %33, i32 0, i32 8\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  store volatile i32 1, i32* %gsense, align 4\l  %34 = load %struct.gmem** @gm, align 8\l  %start51 = getelementptr inbounds %struct.gmem* %34, i32 0, i32 8\l  %count = getelementptr inbounds %struct.barrier_t* %start51, i32 0, i32 1\l  store volatile i64 0, i64* %count, align 8\l  br label %for.cond.57\l}"];
	Node0x5fc5190 -> Node0x5fc51e0;
	Node0x5fc51e0 [shape=record,label="{for.cond.57:                                      \l  br label %for.end.65\l}"];
	Node0x5fc51e0 -> Node0x5fc52d0;
	Node0x5fc5230 [shape=record,label="{for.body.61:                                      \l  br label %for.inc.64\l}"];
	Node0x5fc5230 -> Node0x5fc5280;
	Node0x5fc5280 [shape=record,label="{for.inc.64:                                       \l  br label %for.cond.57\l}"];
	Node0x5fc5280 -> Node0x5fc51e0;
	Node0x5fc52d0 [shape=record,label="{for.end.65:                                       \l  %35 = load i64* @MaxGlobMem, align 8\l  %call66 = call i64 @GlobalHeapInit(i64 %35)\l  %tobool67 = icmp ne i64 %call66, 0\l  br i1 %tobool67, label %if.end.70, label %if.then.68\l|{<s0>T|<s1>F}}"];
	Node0x5fc52d0:s0 -> Node0x5fc5370;
	Node0x5fc52d0:s1 -> Node0x5fc5320;
	Node0x5fc5320 [shape=record,label="{if.then.68:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc5320 -> Node0x5fc5a50;
	Node0x5fc5370 [shape=record,label="{if.end.70:                                        \l  call void @Huniform_defaults()\l  call void @ReadEnvFile(i8* undef)\l  call void @ReadGeoFile(i8* getelementptr inbounds ([80 x i8]* @GeoFileName,\l... i32 0, i32 0))\l  call void @OpenFrameBuffer()\l  call void @CreateViewMatrix()\l  %arraydecay = getelementptr inbounds [4 x [4 x double]]* %vtrans, i32 0, i32\l... 0\l  call void @MatrixCopy([4 x double]* %arraydecay, [4 x double]* getelementptr\l... inbounds (%struct.view* @View, i32 0, i32 2, i32 0))\l  %arraydecay71 = getelementptr inbounds [4 x [4 x double]]* %Vinv, i32 0, i32\l... 0\l  %arraydecay72 = getelementptr inbounds [4 x [4 x double]]* %vtrans, i32 0,\l... i32 0\l  call void @MatrixInverse([4 x double]* %arraydecay71, [4 x double]*\l... %arraydecay72)\l  %arraydecay73 = getelementptr inbounds [4 x [4 x double]]* %Vinv, i32 0, i32\l... 0\l  call void @MatrixCopy([4 x double]* getelementptr inbounds (%struct.view*\l... @View, i32 0, i32 3, i32 0), [4 x double]* %arraydecay73)\l  %36 = load i64* @TraversalType, align 8\l  %cmp76 = icmp eq i64 %36, 1\l  br i1 %cmp76, label %if.then.78, label %if.end.79\l|{<s0>T|<s1>F}}"];
	Node0x5fc5370:s0 -> Node0x5fc53c0;
	Node0x5fc5370:s1 -> Node0x5fc5410;
	Node0x5fc53c0 [shape=record,label="{if.then.78:                                       \l  call void @BuildHierarchy_Uniform()\l  br label %if.end.79\l}"];
	Node0x5fc53c0 -> Node0x5fc5410;
	Node0x5fc5410 [shape=record,label="{if.end.79:                                        \l  store i64 0, i64* %i, align 8\l  br label %for.cond.81\l}"];
	Node0x5fc5410 -> Node0x5fc5460;
	Node0x5fc5460 [shape=record,label="{for.cond.81:                                      \l  %37 = load i64* %i, align 8\l  %38 = load %struct.gmem** @gm, align 8\l  %nprocs82 = getelementptr inbounds %struct.gmem* %38, i32 0, i32 0\l  store i64 2, i64* %nprocs82\l  %39 = load i64* %nprocs82, align 8\l  %sub = sub nsw i64 %39, 1\l  %cmp83 = icmp slt i64 %37, %sub\l  br i1 %cmp83, label %for.body.85, label %for.end.90\l|{<s0>T|<s1>F}}"];
	Node0x5fc5460:s0 -> Node0x5fc54b0;
	Node0x5fc5460:s1 -> Node0x5fc5550;
	Node0x5fc54b0 [shape=record,label="{for.body.85:                                      \l  %call87 = call i32 @pthread_create(i64* %t, %union.pthread_attr_t* null, i8*\l... (i8*)* bitcast (void ()* @StartRayTrace to i8* (i8*)*), i8* null)\l  br label %for.inc.88\l}"];
	Node0x5fc54b0 -> Node0x5fc5500;
	Node0x5fc5500 [shape=record,label="{for.inc.88:                                       \l  %40 = load i64* %i, align 8\l  %inc89 = add nsw i64 %40, 1\l  store i64 %inc89, i64* %i, align 8\l  br label %for.cond.81\l}"];
	Node0x5fc5500 -> Node0x5fc5460;
	Node0x5fc5550 [shape=record,label="{for.end.90:                                       \l  call void @StartRayTrace()\l  call void @CloseFrameBuffer(i8* getelementptr inbounds ([80 x i8]*\l... @PicFileName, i32 0, i32 0))\l  br label %if.end.165\l}"];
	Node0x5fc5550 -> Node0x5fc59b0;
	Node0x5fc55a0 [shape=record,label="{if.then.100:                                      \l  br label %for.cond.107\l}"];
	Node0x5fc55a0 -> Node0x5fc55f0;
	Node0x5fc55f0 [shape=record,label="{for.cond.107:                                     \l  br label %for.end.116\l}"];
	Node0x5fc55f0 -> Node0x5fc56e0;
	Node0x5fc5640 [shape=record,label="{for.body.111:                                     \l  br label %for.inc.114\l}"];
	Node0x5fc5640 -> Node0x5fc5690;
	Node0x5fc5690 [shape=record,label="{for.inc.114:                                      \l  br label %for.cond.107\l}"];
	Node0x5fc5690 -> Node0x5fc55f0;
	Node0x5fc56e0 [shape=record,label="{for.end.116:                                      \l  br label %for.cond.126\l}"];
	Node0x5fc56e0 -> Node0x5fc5730;
	Node0x5fc5730 [shape=record,label="{for.cond.126:                                     \l  br label %for.end.157\l}"];
	Node0x5fc5730 -> Node0x5fc5960;
	Node0x5fc5780 [shape=record,label="{for.body.130:                                     \l  br label %if.end.144\l}"];
	Node0x5fc5780 -> Node0x5fc5820;
	Node0x5fc57d0 [shape=record,label="{if.then.140:                                      \l  br label %if.end.144\l}"];
	Node0x5fc57d0 -> Node0x5fc5820;
	Node0x5fc5820 [shape=record,label="{if.end.144:                                       \l  br label %if.end.154\l}"];
	Node0x5fc5820 -> Node0x5fc58c0;
	Node0x5fc5870 [shape=record,label="{if.then.150:                                      \l  br label %if.end.154\l}"];
	Node0x5fc5870 -> Node0x5fc58c0;
	Node0x5fc58c0 [shape=record,label="{if.end.154:                                       \l  br label %for.inc.155\l}"];
	Node0x5fc58c0 -> Node0x5fc5910;
	Node0x5fc5910 [shape=record,label="{for.inc.155:                                      \l  br label %for.cond.126\l}"];
	Node0x5fc5910 -> Node0x5fc5730;
	Node0x5fc5960 [shape=record,label="{for.end.157:                                      \l  br label %if.end.165\l}"];
	Node0x5fc5960 -> Node0x5fc59b0;
	Node0x5fc59b0 [shape=record,label="{if.end.165:                                       \l  br label %UnifiedUnreachableBlock\l}"];
	Node0x5fc59b0 -> Node0x5fc5a50;
	Node0x5fc5a00 [shape=record,label="{return:                                           \l  ret i32 undef\l}"];
	Node0x5fc5a50 [shape=record,label="{UnifiedUnreachableBlock:                          \l  call void @waitForAll()\l  unreachable\l}"];
}
