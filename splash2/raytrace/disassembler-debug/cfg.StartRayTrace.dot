digraph "CFG for 'StartRayTrace' function" {
	label="CFG for 'StartRayTrace' function";

	Node0x5fc0280 [shape=record,label="{entry:\l  %pid = alloca i64, align 8\l  %begin = alloca i64, align 8\l  %end = alloca i64, align 8\l  %lapsed = alloca i64, align 8\l  %lsense = alloca i32, align 4\l  %oldcount = alloca i32, align 4\l  %newcount = alloca i32, align 4\l  %updatedcount = alloca i32, align 4\l  %retVal = alloca i32, align 4\l  %0 = load %struct.gmem** @gm, align 8\l  %pid1 = getelementptr inbounds %struct.gmem* %0, i32 0, i32 1\l  %1 = load i64* %pid1, align 8\l  %inc = add nsw i64 %1, 1\l  store i64 %inc, i64* %pid1, align 8\l  store i64 %1, i64* %pid, align 8\l  br label %if.end\l}"];
	Node0x5fc0280 -> Node0x5fc0370;
	Node0x5fc02d0 [shape=record,label="{lor.lhs.false:                                    \l  br label %if.end\l}"];
	Node0x5fc02d0 -> Node0x5fc0370;
	Node0x5fc0320 [shape=record,label="{if.then:                                          \l  br label %if.end\l}"];
	Node0x5fc0320 -> Node0x5fc0370;
	Node0x5fc0370 [shape=record,label="{if.end:                                           \l  %2 = load i64* %pid, align 8\l  call void @InitWorkPool(i64 %2)\l  %3 = load i64* getelementptr inbounds (%struct.display* @Display, i32 0, i32\l... 0), align 8\l  %4 = load i64* %pid, align 8\l  call void @InitRayTreeStack(i64 %3, i64 %4)\l  %5 = load %struct.gmem** @gm, align 8\l  %start = getelementptr inbounds %struct.gmem* %5, i32 0, i32 8\l  %gsense = getelementptr inbounds %struct.barrier_t* %start, i32 0, i32 0\l  call void @printChar(i8 signext 49)\l  call void @printChar(i8 signext 90)\l  call void @InitializeSwitchesAndCounter()\l  call void @IncrementCounter()\l  %6 = load volatile i32* %gsense, align 4\l  store i32 %6, i32* %lsense, align 4\l  br label %while.body\l}"];
	Node0x5fc0370 -> Node0x5fc03c0;
	Node0x5fc03c0 [shape=record,label="{while.body:                                       \l  %7 = load %struct.gmem** @gm, align 8\l  %start5 = getelementptr inbounds %struct.gmem* %7, i32 0, i32 8\l  %count = getelementptr inbounds %struct.barrier_t* %start5, i32 0, i32 1\l  %8 = load volatile i64* %count, align 8\l  %call = call i32 @sleep(i32 1)\l  %conv = trunc i64 %8 to i32\l  store i32 %conv, i32* %oldcount, align 4\l  %9 = load i32* %oldcount, align 4\l  %10 = load i32* %lsense, align 4\l  %add = add nsw i32 %9, %10\l  store i32 %add, i32* %newcount, align 4\l  %11 = load i32* %oldcount, align 4\l  %12 = load i32* %newcount, align 4\l  %call6 = call i32 @atomic_cmpxchg(i32 %11, i32 %12)\l  %call5 = call i32 @sleep(i32 1)\l  store i32 %call6, i32* %updatedcount, align 4\l  %13 = load i32* %updatedcount, align 4\l  %14 = load i32* %oldcount, align 4\l  %cmp7 = icmp eq i32 %13, %14\l  br i1 %cmp7, label %if.then.9, label %if.end.25\l|{<s0>T|<s1>F}}"];
	Node0x5fc03c0:s0 -> Node0x5fc0410;
	Node0x5fc03c0:s1 -> Node0x5fc05f0;
	Node0x5fc0410 [shape=record,label="{if.then.9:                                        \l  %15 = load i32* %newcount, align 4\l  %conv10 = sext i32 %15 to i64\l  %16 = load %struct.gmem** @gm, align 8\l  %nprocs = getelementptr inbounds %struct.gmem* %16, i32 0, i32 0\l  %17 = load i64* %nprocs, align 8\l  %call1 = call i32 @sleep(i32 1)\l  %cmp11 = icmp eq i64 %conv10, %17\l  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false.15\l|{<s0>T|<s1>F}}"];
	Node0x5fc0410:s0 -> Node0x5fc0460;
	Node0x5fc0410:s1 -> Node0x5fc04b0;
	Node0x5fc0460 [shape=record,label="{land.lhs.true:                                    \l  %18 = load i32* %lsense, align 4\l  %cmp13 = icmp eq i32 %18, 1\l  br i1 %cmp13, label %if.then.21, label %lor.lhs.false.15\l|{<s0>T|<s1>F}}"];
	Node0x5fc0460:s0 -> Node0x5fc0550;
	Node0x5fc0460:s1 -> Node0x5fc04b0;
	Node0x5fc04b0 [shape=record,label="{lor.lhs.false.15:                                 \l  %19 = load i32* %newcount, align 4\l  %cmp16 = icmp eq i32 %19, 0\l  br i1 %cmp16, label %land.lhs.true.18, label %if.end.24\l|{<s0>T|<s1>F}}"];
	Node0x5fc04b0:s0 -> Node0x5fc0500;
	Node0x5fc04b0:s1 -> Node0x5fc05a0;
	Node0x5fc0500 [shape=record,label="{land.lhs.true.18:                                 \l  %20 = load i32* %lsense, align 4\l  %cmp19 = icmp eq i32 %20, -1\l  br i1 %cmp19, label %if.then.21, label %if.end.24\l|{<s0>T|<s1>F}}"];
	Node0x5fc0500:s0 -> Node0x5fc0550;
	Node0x5fc0500:s1 -> Node0x5fc05a0;
	Node0x5fc0550 [shape=record,label="{if.then.21:                                       \l  %21 = load i32* %lsense, align 4\l  %sub = sub nsw i32 0, %21\l  %22 = load %struct.gmem** @gm, align 8\l  %start22 = getelementptr inbounds %struct.gmem* %22, i32 0, i32 8\l  %gsense23 = getelementptr inbounds %struct.barrier_t* %start22, i32 0, i32 0\l  call void @printX()\l  store volatile i32 %sub, i32* %gsense23, align 4\l  call void @snapshot(i32 %sub, i32 1)\l  %call2 = call i32 @sleep(i32 3)\l  br label %if.end.24\l}"];
	Node0x5fc0550 -> Node0x5fc05a0;
	Node0x5fc05a0 [shape=record,label="{if.end.24:                                        \l  br label %while.end\l}"];
	Node0x5fc05a0 -> Node0x5fc0640;
	Node0x5fc05f0 [shape=record,label="{if.end.25:                                        \l  br label %while.body\l}"];
	Node0x5fc05f0 -> Node0x5fc03c0;
	Node0x5fc0640 [shape=record,label="{while.end:                                        \l  br label %while.cond\l}"];
	Node0x5fc0640 -> Node0x5fc0690;
	Node0x5fc0690 [shape=record,label="{while.cond:                                       \l  %23 = load %struct.gmem** @gm, align 8\l  %start26 = getelementptr inbounds %struct.gmem* %23, i32 0, i32 8\l  %gsense27 = getelementptr inbounds %struct.barrier_t* %start26, i32 0, i32 0\l  %24 = load volatile i32* %gsense27, align 4\l  %25 = load i32* %lsense, align 4\l  %cmp28 = icmp eq i32 %24, %25\l  br i1 %cmp28, label %while.body.30, label %while.end.31\l|{<s0>T|<s1>F}}"];
	Node0x5fc0690:s0 -> Node0x5fc06e0;
	Node0x5fc0690:s1 -> Node0x5fc0730;
	Node0x5fc06e0 [shape=record,label="{while.body.30:                                    \l  %call3 = call i32 @sleep(i32 2)\l  br label %while.cond\l}"];
	Node0x5fc06e0 -> Node0x5fc0690;
	Node0x5fc0730 [shape=record,label="{while.end.31:                                     \l  call void @printY()\l  %call4 = call i32 @sleep(i32 1)\l  %26 = load i64* %pid, align 8\l  call void @RayTrace(i64 %26)\l  br label %if.end.43\l}"];
	Node0x5fc0730 -> Node0x5fc08c0;
	Node0x5fc0780 [shape=record,label="{lor.lhs.false.34:                                 \l  br label %if.end.43\l}"];
	Node0x5fc0780 -> Node0x5fc08c0;
	Node0x5fc07d0 [shape=record,label="{if.then.36:                                       \l  br label %if.end.42\l}"];
	Node0x5fc07d0 -> Node0x5fc0870;
	Node0x5fc0820 [shape=record,label="{if.then.41:                                       \l  br label %if.end.42\l}"];
	Node0x5fc0820 -> Node0x5fc0870;
	Node0x5fc0870 [shape=record,label="{if.end.42:                                        \l  br label %if.end.43\l}"];
	Node0x5fc0870 -> Node0x5fc08c0;
	Node0x5fc08c0 [shape=record,label="{if.end.43:                                        \l  ret void\l}"];
}
