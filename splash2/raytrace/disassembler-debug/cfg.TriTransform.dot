digraph "CFG for 'TriTransform' function" {
	label="CFG for 'TriTransform' function";

	Node0x60a6de0 [shape=record,label="{entry:\l  %po.addr = alloca %struct.object*, align 8\l  %xtrans.addr = alloca [4 x double]*, align 8\l  %xinvT.addr = alloca [4 x double]*, align 8\l  %i = alloca i64, align 8\l  %j = alloca i64, align 8\l  %numelems = alloca i64, align 8\l  %vindex = alloca i64*, align 8\l  %vptr = alloca [3 x double]*, align 8\l  %vp = alloca [3 x double]*, align 8\l  %nptr = alloca [3 x double]*, align 8\l  %np = alloca [3 x double]*, align 8\l  %vp1 = alloca [3 x double]*, align 8\l  %vp2 = alloca [3 x double]*, align 8\l  %vp3 = alloca [3 x double]*, align 8\l  %vec1 = alloca [3 x double], align 16\l  %vec2 = alloca [3 x double], align 16\l  %pnorm = alloca [4 x double], align 16\l  %norm = alloca [4 x double], align 16\l  %coord = alloca [4 x double], align 16\l  %pt = alloca %struct.tri*, align 8\l  %pe = alloca %struct.element*, align 8\l  store %struct.object* %po, %struct.object** %po.addr, align 8\l  store [4 x double]* %xtrans, [4 x double]** %xtrans.addr, align 8\l  store [4 x double]* %xinvT, [4 x double]** %xinvT.addr, align 8\l  %0 = load %struct.object** %po.addr, align 8\l  %pelem = getelementptr inbounds %struct.object* %0, i32 0, i32 3\l  %1 = load %struct.element** %pelem, align 8\l  store %struct.element* %1, %struct.element** %pe, align 8\l  %2 = load %struct.object** %po.addr, align 8\l  %numelements = getelementptr inbounds %struct.object* %2, i32 0, i32 4\l  %3 = load i64* %numelements, align 8\l  store i64 %3, i64* %numelems, align 8\l  %4 = load %struct.element** %pe, align 8\l  %data = getelementptr inbounds %struct.element* %4, i32 0, i32 3\l  %5 = load i8** %data, align 8\l  %6 = bitcast i8* %5 to %struct.tri*\l  store %struct.tri* %6, %struct.tri** %pt, align 8\l  %7 = load %struct.tri** %pt, align 8\l  %vptr1 = getelementptr inbounds %struct.tri* %7, i32 0, i32 2\l  %8 = load [3 x double]** %vptr1, align 8\l  store [3 x double]* %8, [3 x double]** %vptr, align 8\l  %9 = load %struct.tri** %pt, align 8\l  %nptr2 = getelementptr inbounds %struct.tri* %9, i32 0, i32 3\l  %10 = load [3 x double]** %nptr2, align 8\l  store [3 x double]* %10, [3 x double]** %nptr, align 8\l  %11 = load [3 x double]** %vptr, align 8\l  %arrayidx = getelementptr inbounds [3 x double]* %11, i32 0, i64 0\l  %12 = load double* %arrayidx, align 8\l  %arrayidx3 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 0\l  store double %12, double* %arrayidx3, align 8\l  %13 = load [3 x double]** %vptr, align 8\l  %arrayidx4 = getelementptr inbounds [3 x double]* %13, i32 0, i64 1\l  %14 = load double* %arrayidx4, align 8\l  %arrayidx5 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 1\l  store double %14, double* %arrayidx5, align 8\l  %15 = load [3 x double]** %vptr, align 8\l  %arrayidx6 = getelementptr inbounds [3 x double]* %15, i32 0, i64 2\l  %16 = load double* %arrayidx6, align 8\l  %arrayidx7 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 2\l  store double %16, double* %arrayidx7, align 8\l  br label %while.cond\l}"];
	Node0x60a6de0 -> Node0x60c7720;
	Node0x60c7720 [shape=record,label="{while.cond:                                       \l  %arrayidx9 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 0\l  %17 = load double* %arrayidx9, align 8\l  %cmp = fcmp une double %17, 1.000000e+32\l  br i1 %cmp, label %land.lhs.true, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x60c7720:s0 -> Node0x60c7770;
	Node0x60c7720:s1 -> Node0x60c7810;
	Node0x60c7770 [shape=record,label="{land.lhs.true:                                    \l  %arrayidx10 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 1\l  %18 = load double* %arrayidx10, align 8\l  %cmp11 = fcmp une double %18, 1.000000e+32\l  br i1 %cmp11, label %land.rhs, label %land.end\l|{<s0>T|<s1>F}}"];
	Node0x60c7770:s0 -> Node0x60c77c0;
	Node0x60c7770:s1 -> Node0x60c7810;
	Node0x60c77c0 [shape=record,label="{land.rhs:                                         \l  %arrayidx12 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 2\l  %19 = load double* %arrayidx12, align 8\l  %cmp13 = fcmp une double %19, 1.000000e+32\l  br label %land.end\l}"];
	Node0x60c77c0 -> Node0x60c7810;
	Node0x60c7810 [shape=record,label="{land.end:                                         \l  %20 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp13,\l... %land.rhs ]\l  br i1 %20, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x60c7810:s0 -> Node0x60c7860;
	Node0x60c7810:s1 -> Node0x60c78b0;
	Node0x60c7860 [shape=record,label="{while.body:                                       \l  %arraydecay = getelementptr inbounds [4 x double]* %coord, i32 0, i32 0\l  %21 = load [4 x double]** %xtrans.addr, align 8\l  %arraydecay14 = getelementptr inbounds [4 x double]* %coord, i32 0, i32 0\l  call void @VecMatMult(double* %arraydecay, [4 x double]* %21, double*\l... %arraydecay14)\l  %arrayidx15 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 0\l  %22 = load double* %arrayidx15, align 8\l  %23 = load [3 x double]** %vptr, align 8\l  %arrayidx16 = getelementptr inbounds [3 x double]* %23, i32 0, i64 0\l  store double %22, double* %arrayidx16, align 8\l  %arrayidx17 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 1\l  %24 = load double* %arrayidx17, align 8\l  %25 = load [3 x double]** %vptr, align 8\l  %arrayidx18 = getelementptr inbounds [3 x double]* %25, i32 0, i64 1\l  store double %24, double* %arrayidx18, align 8\l  %arrayidx19 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 2\l  %26 = load double* %arrayidx19, align 8\l  %27 = load [3 x double]** %vptr, align 8\l  %arrayidx20 = getelementptr inbounds [3 x double]* %27, i32 0, i64 2\l  store double %26, double* %arrayidx20, align 8\l  %28 = load [3 x double]** %vptr, align 8\l  %incdec.ptr = getelementptr inbounds [3 x double]* %28, i32 1\l  store [3 x double]* %incdec.ptr, [3 x double]** %vptr, align 8\l  %29 = load [3 x double]** %vptr, align 8\l  %arrayidx21 = getelementptr inbounds [3 x double]* %29, i32 0, i64 0\l  %30 = load double* %arrayidx21, align 8\l  %arrayidx22 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 0\l  store double %30, double* %arrayidx22, align 8\l  %31 = load [3 x double]** %vptr, align 8\l  %arrayidx23 = getelementptr inbounds [3 x double]* %31, i32 0, i64 1\l  %32 = load double* %arrayidx23, align 8\l  %arrayidx24 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 1\l  store double %32, double* %arrayidx24, align 8\l  %33 = load [3 x double]** %vptr, align 8\l  %arrayidx25 = getelementptr inbounds [3 x double]* %33, i32 0, i64 2\l  %34 = load double* %arrayidx25, align 8\l  %arrayidx26 = getelementptr inbounds [4 x double]* %coord, i32 0, i64 2\l  store double %34, double* %arrayidx26, align 8\l  %35 = load [3 x double]** %nptr, align 8\l  %arrayidx28 = getelementptr inbounds [3 x double]* %35, i32 0, i64 0\l  %36 = load double* %arrayidx28, align 8\l  %arrayidx29 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  store double %36, double* %arrayidx29, align 8\l  %37 = load [3 x double]** %nptr, align 8\l  %arrayidx30 = getelementptr inbounds [3 x double]* %37, i32 0, i64 1\l  %38 = load double* %arrayidx30, align 8\l  %arrayidx31 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  store double %38, double* %arrayidx31, align 8\l  %39 = load [3 x double]** %nptr, align 8\l  %arrayidx32 = getelementptr inbounds [3 x double]* %39, i32 0, i64 2\l  %40 = load double* %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 2\l  store double %40, double* %arrayidx33, align 8\l  %arraydecay35 = getelementptr inbounds [4 x double]* %norm, i32 0, i32 0\l  %41 = load [4 x double]** %xinvT.addr, align 8\l  %arraydecay36 = getelementptr inbounds [4 x double]* %norm, i32 0, i32 0\l  call void @VecMatMult(double* %arraydecay35, [4 x double]* %41, double*\l... %arraydecay36)\l  %arraydecay37 = getelementptr inbounds [4 x double]* %norm, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay37)\l  %arrayidx38 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  %42 = load double* %arrayidx38, align 8\l  %43 = load [3 x double]** %nptr, align 8\l  %arrayidx39 = getelementptr inbounds [3 x double]* %43, i32 0, i64 0\l  store double %42, double* %arrayidx39, align 8\l  %arrayidx40 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  %44 = load double* %arrayidx40, align 8\l  %45 = load [3 x double]** %nptr, align 8\l  %arrayidx41 = getelementptr inbounds [3 x double]* %45, i32 0, i64 1\l  store double %44, double* %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 2\l  %46 = load double* %arrayidx42, align 8\l  %47 = load [3 x double]** %nptr, align 8\l  %arrayidx43 = getelementptr inbounds [3 x double]* %47, i32 0, i64 2\l  store double %46, double* %arrayidx43, align 8\l  %48 = load [3 x double]** %nptr, align 8\l  %incdec.ptr44 = getelementptr inbounds [3 x double]* %48, i32 1\l  store [3 x double]* %incdec.ptr44, [3 x double]** %nptr, align 8\l  br label %while.cond\l}"];
	Node0x60c7860 -> Node0x60c7720;
	Node0x60c78b0 [shape=record,label="{while.end:                                        \l  store i64 0, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60c78b0 -> Node0x60c7900;
	Node0x60c7900 [shape=record,label="{for.cond:                                         \l  %49 = load i64* %i, align 8\l  %50 = load i64* %numelems, align 8\l  %cmp45 = icmp slt i64 %49, %50\l  br i1 %cmp45, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x60c7900:s0 -> Node0x60c7950;
	Node0x60c7900:s1 -> Node0x60c80d0;
	Node0x60c7950 [shape=record,label="{for.body:                                         \l  %51 = load %struct.element** %pe, align 8\l  %data46 = getelementptr inbounds %struct.element* %51, i32 0, i32 3\l  %52 = load i8** %data46, align 8\l  %53 = bitcast i8* %52 to %struct.tri*\l  store %struct.tri* %53, %struct.tri** %pt, align 8\l  %54 = load %struct.tri** %pt, align 8\l  %vindex47 = getelementptr inbounds %struct.tri* %54, i32 0, i32 4\l  %arraydecay48 = getelementptr inbounds [3 x i64]* %vindex47, i32 0, i32 0\l  store i64* %arraydecay48, i64** %vindex, align 8\l  %55 = load %struct.tri** %pt, align 8\l  %vptr49 = getelementptr inbounds %struct.tri* %55, i32 0, i32 2\l  %56 = load [3 x double]** %vptr49, align 8\l  store [3 x double]* %56, [3 x double]** %vptr, align 8\l  %57 = load [3 x double]** %vptr, align 8\l  %58 = load i64** %vindex, align 8\l  %59 = load i64* %58, align 8\l  %add.ptr = getelementptr inbounds [3 x double]* %57, i64 %59\l  store [3 x double]* %add.ptr, [3 x double]** %vp1, align 8\l  %60 = load i64** %vindex, align 8\l  %incdec.ptr50 = getelementptr inbounds i64* %60, i32 1\l  store i64* %incdec.ptr50, i64** %vindex, align 8\l  %61 = load [3 x double]** %vptr, align 8\l  %62 = load i64** %vindex, align 8\l  %63 = load i64* %62, align 8\l  %add.ptr51 = getelementptr inbounds [3 x double]* %61, i64 %63\l  store [3 x double]* %add.ptr51, [3 x double]** %vp2, align 8\l  %64 = load [3 x double]** %vp2, align 8\l  %arrayidx52 = getelementptr inbounds [3 x double]* %64, i32 0, i64 0\l  %65 = load double* %arrayidx52, align 8\l  %66 = load [3 x double]** %vp1, align 8\l  %arrayidx53 = getelementptr inbounds [3 x double]* %66, i32 0, i64 0\l  %67 = load double* %arrayidx53, align 8\l  %sub = fsub double %65, %67\l  %arrayidx54 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 0\l  store double %sub, double* %arrayidx54, align 8\l  %68 = load [3 x double]** %vp2, align 8\l  %arrayidx55 = getelementptr inbounds [3 x double]* %68, i32 0, i64 1\l  %69 = load double* %arrayidx55, align 8\l  %70 = load [3 x double]** %vp1, align 8\l  %arrayidx56 = getelementptr inbounds [3 x double]* %70, i32 0, i64 1\l  %71 = load double* %arrayidx56, align 8\l  %sub57 = fsub double %69, %71\l  %arrayidx58 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 1\l  store double %sub57, double* %arrayidx58, align 8\l  %72 = load [3 x double]** %vp2, align 8\l  %arrayidx59 = getelementptr inbounds [3 x double]* %72, i32 0, i64 2\l  %73 = load double* %arrayidx59, align 8\l  %74 = load [3 x double]** %vp1, align 8\l  %arrayidx60 = getelementptr inbounds [3 x double]* %74, i32 0, i64 2\l  %75 = load double* %arrayidx60, align 8\l  %sub61 = fsub double %73, %75\l  %arrayidx62 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 2\l  store double %sub61, double* %arrayidx62, align 8\l  %76 = load i64** %vindex, align 8\l  %incdec.ptr63 = getelementptr inbounds i64* %76, i32 1\l  store i64* %incdec.ptr63, i64** %vindex, align 8\l  %77 = load [3 x double]** %vptr, align 8\l  %78 = load i64** %vindex, align 8\l  %79 = load i64* %78, align 8\l  %add.ptr64 = getelementptr inbounds [3 x double]* %77, i64 %79\l  store [3 x double]* %add.ptr64, [3 x double]** %vp3, align 8\l  %80 = load [3 x double]** %vp3, align 8\l  %arrayidx65 = getelementptr inbounds [3 x double]* %80, i32 0, i64 0\l  %81 = load double* %arrayidx65, align 8\l  %82 = load [3 x double]** %vp1, align 8\l  %arrayidx66 = getelementptr inbounds [3 x double]* %82, i32 0, i64 0\l  %83 = load double* %arrayidx66, align 8\l  %sub67 = fsub double %81, %83\l  %arrayidx68 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 0\l  store double %sub67, double* %arrayidx68, align 8\l  %84 = load [3 x double]** %vp3, align 8\l  %arrayidx69 = getelementptr inbounds [3 x double]* %84, i32 0, i64 1\l  %85 = load double* %arrayidx69, align 8\l  %86 = load [3 x double]** %vp1, align 8\l  %arrayidx70 = getelementptr inbounds [3 x double]* %86, i32 0, i64 1\l  %87 = load double* %arrayidx70, align 8\l  %sub71 = fsub double %85, %87\l  %arrayidx72 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 1\l  store double %sub71, double* %arrayidx72, align 8\l  %88 = load [3 x double]** %vp3, align 8\l  %arrayidx73 = getelementptr inbounds [3 x double]* %88, i32 0, i64 2\l  %89 = load double* %arrayidx73, align 8\l  %90 = load [3 x double]** %vp1, align 8\l  %arrayidx74 = getelementptr inbounds [3 x double]* %90, i32 0, i64 2\l  %91 = load double* %arrayidx74, align 8\l  %sub75 = fsub double %89, %91\l  %arrayidx76 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 2\l  store double %sub75, double* %arrayidx76, align 8\l  %arrayidx77 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 1\l  %92 = load double* %arrayidx77, align 8\l  %arrayidx78 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 2\l  %93 = load double* %arrayidx78, align 8\l  %mul = fmul double %92, %93\l  %arrayidx79 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 2\l  %94 = load double* %arrayidx79, align 8\l  %arrayidx80 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 1\l  %95 = load double* %arrayidx80, align 8\l  %mul81 = fmul double %94, %95\l  %sub82 = fsub double %mul, %mul81\l  %96 = load %struct.tri** %pt, align 8\l  %norm83 = getelementptr inbounds %struct.tri* %96, i32 0, i32 0\l  %arrayidx84 = getelementptr inbounds [3 x double]* %norm83, i32 0, i64 0\l  store double %sub82, double* %arrayidx84, align 8\l  %arrayidx85 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 2\l  %97 = load double* %arrayidx85, align 8\l  %arrayidx86 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 0\l  %98 = load double* %arrayidx86, align 8\l  %mul87 = fmul double %97, %98\l  %arrayidx88 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 0\l  %99 = load double* %arrayidx88, align 8\l  %arrayidx89 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 2\l  %100 = load double* %arrayidx89, align 8\l  %mul90 = fmul double %99, %100\l  %sub91 = fsub double %mul87, %mul90\l  %101 = load %struct.tri** %pt, align 8\l  %norm92 = getelementptr inbounds %struct.tri* %101, i32 0, i32 0\l  %arrayidx93 = getelementptr inbounds [3 x double]* %norm92, i32 0, i64 1\l  store double %sub91, double* %arrayidx93, align 8\l  %arrayidx94 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 0\l  %102 = load double* %arrayidx94, align 8\l  %arrayidx95 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 1\l  %103 = load double* %arrayidx95, align 8\l  %mul96 = fmul double %102, %103\l  %arrayidx97 = getelementptr inbounds [3 x double]* %vec1, i32 0, i64 1\l  %104 = load double* %arrayidx97, align 8\l  %arrayidx98 = getelementptr inbounds [3 x double]* %vec2, i32 0, i64 0\l  %105 = load double* %arrayidx98, align 8\l  %mul99 = fmul double %104, %105\l  %sub100 = fsub double %mul96, %mul99\l  %106 = load %struct.tri** %pt, align 8\l  %norm101 = getelementptr inbounds %struct.tri* %106, i32 0, i32 0\l  %arrayidx102 = getelementptr inbounds [3 x double]* %norm101, i32 0, i64 2\l  store double %sub100, double* %arrayidx102, align 8\l  %107 = load %struct.tri** %pt, align 8\l  %vptr103 = getelementptr inbounds %struct.tri* %107, i32 0, i32 2\l  %108 = load [3 x double]** %vptr103, align 8\l  %109 = load %struct.tri** %pt, align 8\l  %vindex104 = getelementptr inbounds %struct.tri* %109, i32 0, i32 4\l  %arraydecay105 = getelementptr inbounds [3 x i64]* %vindex104, i32 0, i32 0\l  %110 = load i64* %arraydecay105, align 8\l  %add.ptr106 = getelementptr inbounds [3 x double]* %108, i64 %110\l  store [3 x double]* %add.ptr106, [3 x double]** %vp, align 8\l  %111 = load %struct.tri** %pt, align 8\l  %norm107 = getelementptr inbounds %struct.tri* %111, i32 0, i32 0\l  %arrayidx108 = getelementptr inbounds [3 x double]* %norm107, i32 0, i64 0\l  %112 = load double* %arrayidx108, align 8\l  %113 = load [3 x double]** %vp, align 8\l  %arrayidx109 = getelementptr inbounds [3 x double]* %113, i32 0, i64 0\l  %114 = load double* %arrayidx109, align 8\l  %mul110 = fmul double %112, %114\l  %115 = load %struct.tri** %pt, align 8\l  %norm111 = getelementptr inbounds %struct.tri* %115, i32 0, i32 0\l  %arrayidx112 = getelementptr inbounds [3 x double]* %norm111, i32 0, i64 1\l  %116 = load double* %arrayidx112, align 8\l  %117 = load [3 x double]** %vp, align 8\l  %arrayidx113 = getelementptr inbounds [3 x double]* %117, i32 0, i64 1\l  %118 = load double* %arrayidx113, align 8\l  %mul114 = fmul double %116, %118\l  %add = fadd double %mul110, %mul114\l  %119 = load %struct.tri** %pt, align 8\l  %norm115 = getelementptr inbounds %struct.tri* %119, i32 0, i32 0\l  %arrayidx116 = getelementptr inbounds [3 x double]* %norm115, i32 0, i64 2\l  %120 = load double* %arrayidx116, align 8\l  %121 = load [3 x double]** %vp, align 8\l  %arrayidx117 = getelementptr inbounds [3 x double]* %121, i32 0, i64 2\l  %122 = load double* %arrayidx117, align 8\l  %mul118 = fmul double %120, %122\l  %add119 = fadd double %add, %mul118\l  %sub120 = fsub double -0.000000e+00, %add119\l  %123 = load %struct.tri** %pt, align 8\l  %d = getelementptr inbounds %struct.tri* %123, i32 0, i32 1\l  store double %sub120, double* %d, align 8\l  %124 = load %struct.tri** %pt, align 8\l  %norminterp = getelementptr inbounds %struct.tri* %124, i32 0, i32 6\l  %125 = load i64* %norminterp, align 8\l  %tobool = icmp ne i64 %125, 0\l  br i1 %tobool, label %if.then, label %if.end.167\l|{<s0>T|<s1>F}}"];
	Node0x60c7950:s0 -> Node0x60c79a0;
	Node0x60c7950:s1 -> Node0x60c7ae0;
	Node0x60c79a0 [shape=record,label="{if.then:                                          \l  %126 = load %struct.tri** %pt, align 8\l  %vindex121 = getelementptr inbounds %struct.tri* %126, i32 0, i32 4\l  %arraydecay122 = getelementptr inbounds [3 x i64]* %vindex121, i32 0, i32 0\l  store i64* %arraydecay122, i64** %vindex, align 8\l  %127 = load %struct.tri** %pt, align 8\l  %nptr123 = getelementptr inbounds %struct.tri* %127, i32 0, i32 3\l  %128 = load [3 x double]** %nptr123, align 8\l  %129 = load i64** %vindex, align 8\l  %130 = load i64* %129, align 8\l  %add.ptr124 = getelementptr inbounds [3 x double]* %128, i64 %130\l  store [3 x double]* %add.ptr124, [3 x double]** %np, align 8\l  %131 = load %struct.tri** %pt, align 8\l  %norm125 = getelementptr inbounds %struct.tri* %131, i32 0, i32 0\l  %arrayidx126 = getelementptr inbounds [3 x double]* %norm125, i32 0, i64 0\l  %132 = load double* %arrayidx126, align 8\l  %arrayidx127 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 0\l  store double %132, double* %arrayidx127, align 8\l  %133 = load %struct.tri** %pt, align 8\l  %norm128 = getelementptr inbounds %struct.tri* %133, i32 0, i32 0\l  %arrayidx129 = getelementptr inbounds [3 x double]* %norm128, i32 0, i64 1\l  %134 = load double* %arrayidx129, align 8\l  %arrayidx130 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 1\l  store double %134, double* %arrayidx130, align 8\l  %135 = load %struct.tri** %pt, align 8\l  %norm131 = getelementptr inbounds %struct.tri* %135, i32 0, i32 0\l  %arrayidx132 = getelementptr inbounds [3 x double]* %norm131, i32 0, i64 2\l  %136 = load double* %arrayidx132, align 8\l  %arrayidx133 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 2\l  store double %136, double* %arrayidx133, align 8\l  %arraydecay134 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i32 0\l  call void @VecNorm(double* %arraydecay134)\l  %arrayidx135 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 0\l  %137 = load double* %arrayidx135, align 8\l  %138 = load [3 x double]** %np, align 8\l  %arrayidx136 = getelementptr inbounds [3 x double]* %138, i32 0, i64 0\l  %139 = load double* %arrayidx136, align 8\l  %mul137 = fmul double %137, %139\l  %arrayidx138 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 1\l  %140 = load double* %arrayidx138, align 8\l  %141 = load [3 x double]** %np, align 8\l  %arrayidx139 = getelementptr inbounds [3 x double]* %141, i32 0, i64 1\l  %142 = load double* %arrayidx139, align 8\l  %mul140 = fmul double %140, %142\l  %add141 = fadd double %mul137, %mul140\l  %arrayidx142 = getelementptr inbounds [4 x double]* %pnorm, i32 0, i64 2\l  %143 = load double* %arrayidx142, align 8\l  %144 = load [3 x double]** %np, align 8\l  %arrayidx143 = getelementptr inbounds [3 x double]* %144, i32 0, i64 2\l  %145 = load double* %arrayidx143, align 8\l  %mul144 = fmul double %143, %145\l  %add145 = fadd double %add141, %mul144\l  %cmp146 = fcmp oge double %add145, 0.000000e+00\l  br i1 %cmp146, label %if.then.147, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x60c79a0:s0 -> Node0x60c79f0;
	Node0x60c79a0:s1 -> Node0x60c7a40;
	Node0x60c79f0 [shape=record,label="{if.then.147:                                      \l  %146 = load %struct.tri** %pt, align 8\l  %vorder = getelementptr inbounds %struct.tri* %146, i32 0, i32 7\l  store i64 1, i64* %vorder, align 8\l  br label %if.end\l}"];
	Node0x60c79f0 -> Node0x60c7a90;
	Node0x60c7a40 [shape=record,label="{if.else:                                          \l  %147 = load %struct.tri** %pt, align 8\l  %vorder148 = getelementptr inbounds %struct.tri* %147, i32 0, i32 7\l  store i64 2, i64* %vorder148, align 8\l  %148 = load %struct.tri** %pt, align 8\l  %norm149 = getelementptr inbounds %struct.tri* %148, i32 0, i32 0\l  %arrayidx150 = getelementptr inbounds [3 x double]* %norm149, i32 0, i64 0\l  %149 = load double* %arrayidx150, align 8\l  %mul151 = fmul double -1.000000e+00, %149\l  %150 = load %struct.tri** %pt, align 8\l  %norm152 = getelementptr inbounds %struct.tri* %150, i32 0, i32 0\l  %arrayidx153 = getelementptr inbounds [3 x double]* %norm152, i32 0, i64 0\l  store double %mul151, double* %arrayidx153, align 8\l  %151 = load %struct.tri** %pt, align 8\l  %norm154 = getelementptr inbounds %struct.tri* %151, i32 0, i32 0\l  %arrayidx155 = getelementptr inbounds [3 x double]* %norm154, i32 0, i64 1\l  %152 = load double* %arrayidx155, align 8\l  %mul156 = fmul double -1.000000e+00, %152\l  %153 = load %struct.tri** %pt, align 8\l  %norm157 = getelementptr inbounds %struct.tri* %153, i32 0, i32 0\l  %arrayidx158 = getelementptr inbounds [3 x double]* %norm157, i32 0, i64 1\l  store double %mul156, double* %arrayidx158, align 8\l  %154 = load %struct.tri** %pt, align 8\l  %norm159 = getelementptr inbounds %struct.tri* %154, i32 0, i32 0\l  %arrayidx160 = getelementptr inbounds [3 x double]* %norm159, i32 0, i64 2\l  %155 = load double* %arrayidx160, align 8\l  %mul161 = fmul double -1.000000e+00, %155\l  %156 = load %struct.tri** %pt, align 8\l  %norm162 = getelementptr inbounds %struct.tri* %156, i32 0, i32 0\l  %arrayidx163 = getelementptr inbounds [3 x double]* %norm162, i32 0, i64 2\l  store double %mul161, double* %arrayidx163, align 8\l  %157 = load %struct.tri** %pt, align 8\l  %d164 = getelementptr inbounds %struct.tri* %157, i32 0, i32 1\l  %158 = load double* %d164, align 8\l  %sub165 = fsub double -0.000000e+00, %158\l  %159 = load %struct.tri** %pt, align 8\l  %d166 = getelementptr inbounds %struct.tri* %159, i32 0, i32 1\l  store double %sub165, double* %d166, align 8\l  br label %if.end\l}"];
	Node0x60c7a40 -> Node0x60c7a90;
	Node0x60c7a90 [shape=record,label="{if.end:                                           \l  br label %if.end.167\l}"];
	Node0x60c7a90 -> Node0x60c7ae0;
	Node0x60c7ae0 [shape=record,label="{if.end.167:                                       \l  %160 = load %struct.tri** %pt, align 8\l  %norm168 = getelementptr inbounds %struct.tri* %160, i32 0, i32 0\l  %arrayidx169 = getelementptr inbounds [3 x double]* %norm168, i32 0, i64 0\l  %161 = load double* %arrayidx169, align 8\l  %cmp170 = fcmp ogt double %161, 0.000000e+00\l  br i1 %cmp170, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x60c7ae0:s0 -> Node0x60c7b30;
	Node0x60c7ae0:s1 -> Node0x60c7b80;
	Node0x60c7b30 [shape=record,label="{cond.true:                                        \l  %162 = load %struct.tri** %pt, align 8\l  %norm171 = getelementptr inbounds %struct.tri* %162, i32 0, i32 0\l  %arrayidx172 = getelementptr inbounds [3 x double]* %norm171, i32 0, i64 0\l  %163 = load double* %arrayidx172, align 8\l  br label %cond.end\l}"];
	Node0x60c7b30 -> Node0x60c7bd0;
	Node0x60c7b80 [shape=record,label="{cond.false:                                       \l  %164 = load %struct.tri** %pt, align 8\l  %norm173 = getelementptr inbounds %struct.tri* %164, i32 0, i32 0\l  %arrayidx174 = getelementptr inbounds [3 x double]* %norm173, i32 0, i64 0\l  %165 = load double* %arrayidx174, align 8\l  %sub175 = fsub double -0.000000e+00, %165\l  br label %cond.end\l}"];
	Node0x60c7b80 -> Node0x60c7bd0;
	Node0x60c7bd0 [shape=record,label="{cond.end:                                         \l  %cond = phi double [ %163, %cond.true ], [ %sub175, %cond.false ]\l  %arrayidx176 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  store double %cond, double* %arrayidx176, align 8\l  %166 = load %struct.tri** %pt, align 8\l  %norm177 = getelementptr inbounds %struct.tri* %166, i32 0, i32 0\l  %arrayidx178 = getelementptr inbounds [3 x double]* %norm177, i32 0, i64 1\l  %167 = load double* %arrayidx178, align 8\l  %cmp179 = fcmp ogt double %167, 0.000000e+00\l  br i1 %cmp179, label %cond.true.180, label %cond.false.183\l|{<s0>T|<s1>F}}"];
	Node0x60c7bd0:s0 -> Node0x60c7c20;
	Node0x60c7bd0:s1 -> Node0x60c7c70;
	Node0x60c7c20 [shape=record,label="{cond.true.180:                                    \l  %168 = load %struct.tri** %pt, align 8\l  %norm181 = getelementptr inbounds %struct.tri* %168, i32 0, i32 0\l  %arrayidx182 = getelementptr inbounds [3 x double]* %norm181, i32 0, i64 1\l  %169 = load double* %arrayidx182, align 8\l  br label %cond.end.187\l}"];
	Node0x60c7c20 -> Node0x60c7cc0;
	Node0x60c7c70 [shape=record,label="{cond.false.183:                                   \l  %170 = load %struct.tri** %pt, align 8\l  %norm184 = getelementptr inbounds %struct.tri* %170, i32 0, i32 0\l  %arrayidx185 = getelementptr inbounds [3 x double]* %norm184, i32 0, i64 1\l  %171 = load double* %arrayidx185, align 8\l  %sub186 = fsub double -0.000000e+00, %171\l  br label %cond.end.187\l}"];
	Node0x60c7c70 -> Node0x60c7cc0;
	Node0x60c7cc0 [shape=record,label="{cond.end.187:                                     \l  %cond188 = phi double [ %169, %cond.true.180 ], [ %sub186, %cond.false.183 ]\l  %arrayidx189 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  store double %cond188, double* %arrayidx189, align 8\l  %172 = load %struct.tri** %pt, align 8\l  %norm190 = getelementptr inbounds %struct.tri* %172, i32 0, i32 0\l  %arrayidx191 = getelementptr inbounds [3 x double]* %norm190, i32 0, i64 2\l  %173 = load double* %arrayidx191, align 8\l  %cmp192 = fcmp ogt double %173, 0.000000e+00\l  br i1 %cmp192, label %cond.true.193, label %cond.false.196\l|{<s0>T|<s1>F}}"];
	Node0x60c7cc0:s0 -> Node0x60c7d10;
	Node0x60c7cc0:s1 -> Node0x60c7d60;
	Node0x60c7d10 [shape=record,label="{cond.true.193:                                    \l  %174 = load %struct.tri** %pt, align 8\l  %norm194 = getelementptr inbounds %struct.tri* %174, i32 0, i32 0\l  %arrayidx195 = getelementptr inbounds [3 x double]* %norm194, i32 0, i64 2\l  %175 = load double* %arrayidx195, align 8\l  br label %cond.end.200\l}"];
	Node0x60c7d10 -> Node0x60c7db0;
	Node0x60c7d60 [shape=record,label="{cond.false.196:                                   \l  %176 = load %struct.tri** %pt, align 8\l  %norm197 = getelementptr inbounds %struct.tri* %176, i32 0, i32 0\l  %arrayidx198 = getelementptr inbounds [3 x double]* %norm197, i32 0, i64 2\l  %177 = load double* %arrayidx198, align 8\l  %sub199 = fsub double -0.000000e+00, %177\l  br label %cond.end.200\l}"];
	Node0x60c7d60 -> Node0x60c7db0;
	Node0x60c7db0 [shape=record,label="{cond.end.200:                                     \l  %cond201 = phi double [ %175, %cond.true.193 ], [ %sub199, %cond.false.196 ]\l  %arrayidx202 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 2\l  store double %cond201, double* %arrayidx202, align 8\l  %arrayidx203 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  %178 = load double* %arrayidx203, align 8\l  %arrayidx204 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  %179 = load double* %arrayidx204, align 8\l  %cmp205 = fcmp oge double %178, %179\l  br i1 %cmp205, label %land.lhs.true.206, label %if.else.211\l|{<s0>T|<s1>F}}"];
	Node0x60c7db0:s0 -> Node0x60c7e00;
	Node0x60c7db0:s1 -> Node0x60c7ea0;
	Node0x60c7e00 [shape=record,label="{land.lhs.true.206:                                \l  %arrayidx207 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  %180 = load double* %arrayidx207, align 8\l  %arrayidx208 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 2\l  %181 = load double* %arrayidx208, align 8\l  %cmp209 = fcmp oge double %180, %181\l  br i1 %cmp209, label %if.then.210, label %if.else.211\l|{<s0>T|<s1>F}}"];
	Node0x60c7e00:s0 -> Node0x60c7e50;
	Node0x60c7e00:s1 -> Node0x60c7ea0;
	Node0x60c7e50 [shape=record,label="{if.then.210:                                      \l  %182 = load %struct.tri** %pt, align 8\l  %indx = getelementptr inbounds %struct.tri* %182, i32 0, i32 5\l  store i64 1, i64* %indx, align 8\l  br label %if.end.224\l}"];
	Node0x60c7e50 -> Node0x60c8030;
	Node0x60c7ea0 [shape=record,label="{if.else.211:                                      \l  %arrayidx212 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  %183 = load double* %arrayidx212, align 8\l  %arrayidx213 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 0\l  %184 = load double* %arrayidx213, align 8\l  %cmp214 = fcmp oge double %183, %184\l  br i1 %cmp214, label %land.lhs.true.215, label %if.else.221\l|{<s0>T|<s1>F}}"];
	Node0x60c7ea0:s0 -> Node0x60c7ef0;
	Node0x60c7ea0:s1 -> Node0x60c7f90;
	Node0x60c7ef0 [shape=record,label="{land.lhs.true.215:                                \l  %arrayidx216 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 1\l  %185 = load double* %arrayidx216, align 8\l  %arrayidx217 = getelementptr inbounds [4 x double]* %norm, i32 0, i64 2\l  %186 = load double* %arrayidx217, align 8\l  %cmp218 = fcmp oge double %185, %186\l  br i1 %cmp218, label %if.then.219, label %if.else.221\l|{<s0>T|<s1>F}}"];
	Node0x60c7ef0:s0 -> Node0x60c7f40;
	Node0x60c7ef0:s1 -> Node0x60c7f90;
	Node0x60c7f40 [shape=record,label="{if.then.219:                                      \l  %187 = load %struct.tri** %pt, align 8\l  %indx220 = getelementptr inbounds %struct.tri* %187, i32 0, i32 5\l  store i64 2, i64* %indx220, align 8\l  br label %if.end.223\l}"];
	Node0x60c7f40 -> Node0x60c7fe0;
	Node0x60c7f90 [shape=record,label="{if.else.221:                                      \l  %188 = load %struct.tri** %pt, align 8\l  %indx222 = getelementptr inbounds %struct.tri* %188, i32 0, i32 5\l  store i64 3, i64* %indx222, align 8\l  br label %if.end.223\l}"];
	Node0x60c7f90 -> Node0x60c7fe0;
	Node0x60c7fe0 [shape=record,label="{if.end.223:                                       \l  br label %if.end.224\l}"];
	Node0x60c7fe0 -> Node0x60c8030;
	Node0x60c8030 [shape=record,label="{if.end.224:                                       \l  %189 = load %struct.element** %pe, align 8\l  %incdec.ptr225 = getelementptr inbounds %struct.element* %189, i32 1\l  store %struct.element* %incdec.ptr225, %struct.element** %pe, align 8\l  br label %for.inc\l}"];
	Node0x60c8030 -> Node0x60c8080;
	Node0x60c8080 [shape=record,label="{for.inc:                                          \l  %190 = load i64* %i, align 8\l  %inc = add nsw i64 %190, 1\l  store i64 %inc, i64* %i, align 8\l  br label %for.cond\l}"];
	Node0x60c8080 -> Node0x60c7900;
	Node0x60c80d0 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
