digraph "CFG for 'GetRayJobFromBundle' function" {
	label="CFG for 'GetRayJobFromBundle' function";

	Node0x6094a50 [shape=record,label="{entry:\l  %retval = alloca i64, align 8\l  %job.addr = alloca %struct.rayjob*, align 8\l  %x.addr = alloca i64*, align 8\l  %y.addr = alloca i64*, align 8\l  store %struct.rayjob* %job, %struct.rayjob** %job.addr, align 8\l  store i64* %x, i64** %x.addr, align 8\l  store i64* %y, i64** %y.addr, align 8\l  %0 = load %struct.rayjob** %job.addr, align 8\l  %xcurr = getelementptr inbounds %struct.rayjob* %0, i32 0, i32 4\l  %1 = load i64* %xcurr, align 8\l  %2 = load i64** %x.addr, align 8\l  store i64 %1, i64* %2, align 8\l  %3 = load %struct.rayjob** %job.addr, align 8\l  %ycurr = getelementptr inbounds %struct.rayjob* %3, i32 0, i32 5\l  %4 = load i64* %ycurr, align 8\l  %5 = load i64** %y.addr, align 8\l  store i64 %4, i64* %5, align 8\l  %6 = load %struct.rayjob** %job.addr, align 8\l  %y1 = getelementptr inbounds %struct.rayjob* %6, i32 0, i32 1\l  %7 = load i64* %y1, align 8\l  %8 = load %struct.rayjob** %job.addr, align 8\l  %ylen = getelementptr inbounds %struct.rayjob* %8, i32 0, i32 3\l  %9 = load i64* %ylen, align 8\l  %add = add nsw i64 %7, %9\l  %10 = load %struct.rayjob** %job.addr, align 8\l  %ycurr2 = getelementptr inbounds %struct.rayjob* %10, i32 0, i32 5\l  %11 = load i64* %ycurr2, align 8\l  %cmp = icmp eq i64 %add, %11\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6094a50:s0 -> Node0x6094aa0;
	Node0x6094a50:s1 -> Node0x6094af0;
	Node0x6094aa0 [shape=record,label="{if.then:                                          \l  store i64 0, i64* %retval\l  br label %return\l}"];
	Node0x6094aa0 -> Node0x6094be0;
	Node0x6094af0 [shape=record,label="{if.end:                                           \l  %12 = load %struct.rayjob** %job.addr, align 8\l  %xcurr3 = getelementptr inbounds %struct.rayjob* %12, i32 0, i32 4\l  %13 = load i64* %xcurr3, align 8\l  %inc = add nsw i64 %13, 1\l  store i64 %inc, i64* %xcurr3, align 8\l  %14 = load %struct.rayjob** %job.addr, align 8\l  %x4 = getelementptr inbounds %struct.rayjob* %14, i32 0, i32 0\l  %15 = load i64* %x4, align 8\l  %16 = load %struct.rayjob** %job.addr, align 8\l  %xlen = getelementptr inbounds %struct.rayjob* %16, i32 0, i32 2\l  %17 = load i64* %xlen, align 8\l  %add5 = add nsw i64 %15, %17\l  %18 = load %struct.rayjob** %job.addr, align 8\l  %xcurr6 = getelementptr inbounds %struct.rayjob* %18, i32 0, i32 4\l  %19 = load i64* %xcurr6, align 8\l  %cmp7 = icmp eq i64 %add5, %19\l  br i1 %cmp7, label %if.then.8, label %if.end.13\l|{<s0>T|<s1>F}}"];
	Node0x6094af0:s0 -> Node0x6094b40;
	Node0x6094af0:s1 -> Node0x6094b90;
	Node0x6094b40 [shape=record,label="{if.then.8:                                        \l  %20 = load %struct.rayjob** %job.addr, align 8\l  %x9 = getelementptr inbounds %struct.rayjob* %20, i32 0, i32 0\l  %21 = load i64* %x9, align 8\l  %22 = load %struct.rayjob** %job.addr, align 8\l  %xcurr10 = getelementptr inbounds %struct.rayjob* %22, i32 0, i32 4\l  store i64 %21, i64* %xcurr10, align 8\l  %23 = load %struct.rayjob** %job.addr, align 8\l  %ycurr11 = getelementptr inbounds %struct.rayjob* %23, i32 0, i32 5\l  %24 = load i64* %ycurr11, align 8\l  %inc12 = add nsw i64 %24, 1\l  store i64 %inc12, i64* %ycurr11, align 8\l  br label %if.end.13\l}"];
	Node0x6094b40 -> Node0x6094b90;
	Node0x6094b90 [shape=record,label="{if.end.13:                                        \l  store i64 1, i64* %retval\l  br label %return\l}"];
	Node0x6094b90 -> Node0x6094be0;
	Node0x6094be0 [shape=record,label="{return:                                           \l  %25 = load i64* %retval\l  ret i64 %25\l}"];
}
